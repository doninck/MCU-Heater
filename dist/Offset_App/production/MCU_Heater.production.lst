

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 04 15:23:20 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	_NVFlag_text,global,class=STRCODE,delta=2
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    20                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    21                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text51,local,class=CODE,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,merge=1,delta=2
    84                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text57,local,class=CODE,merge=1,delta=2
    86                           	psect	intentry,global,class=CODE,delta=2
    87                           	psect	text59,local,class=CODE,merge=1,delta=2
    88                           	psect	text60,local,class=CODE,merge=1,delta=2
    89                           	psect	text61,local,class=CODE,merge=1,delta=2
    90                           	psect	text62,local,class=CODE,merge=1,delta=2
    91                           	psect	text63,local,class=CODE,merge=1,delta=2
    92                           	psect	text64,local,class=CODE,merge=1,delta=2
    93                           	psect	text65,local,class=CODE,merge=1,delta=2
    94                           	psect	text66,local,class=CODE,merge=1,delta=2
    95                           	psect	text67,local,class=CODE,merge=1,delta=2
    96                           	psect	text68,local,class=CODE,merge=1,delta=2
    97                           	psect	text69,local,class=CODE,merge=1,delta=2
    98                           	psect	text70,local,class=CODE,merge=1,delta=2
    99                           	psect	text71,local,class=CODE,merge=1,delta=2
   100                           	dabs	1,0x7E,2
   101  0000                     
   102                           ; Version 2.05
   103                           ; Generated 20/12/2018 GMT
   104                           ; 
   105                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC16F18345 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0097                     	;# 
   179  009B                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  0111                     	;# 
   189  0112                     	;# 
   190  0113                     	;# 
   191  0114                     	;# 
   192  0115                     	;# 
   193  0116                     	;# 
   194  0117                     	;# 
   195  0118                     	;# 
   196  0119                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  0197                     	;# 
   201  0199                     	;# 
   202  0199                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019A                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  019C                     	;# 
   214  019C                     	;# 
   215  019D                     	;# 
   216  019D                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019E                     	;# 
   220  019E                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  019F                     	;# 
   224  019F                     	;# 
   225  019F                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0219                     	;# 
   246  021A                     	;# 
   247  021B                     	;# 
   248  021C                     	;# 
   249  021D                     	;# 
   250  021D                     	;# 
   251  021E                     	;# 
   252  021F                     	;# 
   253  028C                     	;# 
   254  028D                     	;# 
   255  028E                     	;# 
   256  0291                     	;# 
   257  0291                     	;# 
   258  0292                     	;# 
   259  0293                     	;# 
   260  0294                     	;# 
   261  0295                     	;# 
   262  0295                     	;# 
   263  0296                     	;# 
   264  0297                     	;# 
   265  0298                     	;# 
   266  029F                     	;# 
   267  030C                     	;# 
   268  030D                     	;# 
   269  030E                     	;# 
   270  0311                     	;# 
   271  0311                     	;# 
   272  0312                     	;# 
   273  0313                     	;# 
   274  0314                     	;# 
   275  0315                     	;# 
   276  0315                     	;# 
   277  0316                     	;# 
   278  0317                     	;# 
   279  0318                     	;# 
   280  038C                     	;# 
   281  038D                     	;# 
   282  038E                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  0393                     	;# 
   286  0394                     	;# 
   287  0395                     	;# 
   288  0396                     	;# 
   289  0397                     	;# 
   290  0398                     	;# 
   291  0399                     	;# 
   292  039A                     	;# 
   293  039C                     	;# 
   294  039D                     	;# 
   295  039E                     	;# 
   296  039F                     	;# 
   297  0411                     	;# 
   298  0411                     	;# 
   299  0412                     	;# 
   300  0413                     	;# 
   301  0414                     	;# 
   302  0415                     	;# 
   303  0416                     	;# 
   304  0417                     	;# 
   305  0418                     	;# 
   306  0418                     	;# 
   307  0419                     	;# 
   308  041A                     	;# 
   309  041B                     	;# 
   310  041C                     	;# 
   311  041D                     	;# 
   312  041E                     	;# 
   313  041F                     	;# 
   314  0498                     	;# 
   315  0498                     	;# 
   316  0499                     	;# 
   317  049A                     	;# 
   318  049B                     	;# 
   319  049B                     	;# 
   320  049C                     	;# 
   321  049D                     	;# 
   322  049E                     	;# 
   323  049F                     	;# 
   324  0617                     	;# 
   325  0618                     	;# 
   326  0619                     	;# 
   327  0619                     	;# 
   328  061A                     	;# 
   329  061B                     	;# 
   330  061C                     	;# 
   331  061C                     	;# 
   332  061F                     	;# 
   333  0691                     	;# 
   334  0692                     	;# 
   335  0693                     	;# 
   336  0694                     	;# 
   337  0695                     	;# 
   338  0696                     	;# 
   339  0697                     	;# 
   340  0698                     	;# 
   341  0699                     	;# 
   342  0711                     	;# 
   343  0712                     	;# 
   344  0713                     	;# 
   345  0714                     	;# 
   346  0715                     	;# 
   347  0716                     	;# 
   348  0717                     	;# 
   349  0718                     	;# 
   350  0719                     	;# 
   351  0891                     	;# 
   352  0891                     	;# 
   353  0891                     	;# 
   354  0891                     	;# 
   355  0891                     	;# 
   356  0891                     	;# 
   357  0892                     	;# 
   358  0892                     	;# 
   359  0892                     	;# 
   360  0893                     	;# 
   361  0893                     	;# 
   362  0893                     	;# 
   363  0893                     	;# 
   364  0893                     	;# 
   365  0893                     	;# 
   366  0894                     	;# 
   367  0894                     	;# 
   368  0894                     	;# 
   369  0895                     	;# 
   370  0895                     	;# 
   371  0895                     	;# 
   372  0896                     	;# 
   373  0896                     	;# 
   374  0896                     	;# 
   375  089B                     	;# 
   376  0911                     	;# 
   377  0912                     	;# 
   378  0913                     	;# 
   379  0914                     	;# 
   380  0915                     	;# 
   381  0916                     	;# 
   382  0918                     	;# 
   383  0919                     	;# 
   384  091A                     	;# 
   385  091B                     	;# 
   386  091C                     	;# 
   387  091D                     	;# 
   388  091E                     	;# 
   389  091F                     	;# 
   390  0E0F                     	;# 
   391  0E10                     	;# 
   392  0E11                     	;# 
   393  0E12                     	;# 
   394  0E13                     	;# 
   395  0E14                     	;# 
   396  0E15                     	;# 
   397  0E16                     	;# 
   398  0E17                     	;# 
   399  0E18                     	;# 
   400  0E19                     	;# 
   401  0E1A                     	;# 
   402  0E1B                     	;# 
   403  0E1C                     	;# 
   404  0E1D                     	;# 
   405  0E1E                     	;# 
   406  0E1F                     	;# 
   407  0E20                     	;# 
   408  0E21                     	;# 
   409  0E22                     	;# 
   410  0E24                     	;# 
   411  0E25                     	;# 
   412  0E28                     	;# 
   413  0E29                     	;# 
   414  0E2A                     	;# 
   415  0E2B                     	;# 
   416  0E2C                     	;# 
   417  0E2D                     	;# 
   418  0E2E                     	;# 
   419  0E2F                     	;# 
   420  0E90                     	;# 
   421  0E91                     	;# 
   422  0E92                     	;# 
   423  0E94                     	;# 
   424  0E95                     	;# 
   425  0E9C                     	;# 
   426  0E9D                     	;# 
   427  0E9E                     	;# 
   428  0E9F                     	;# 
   429  0EA0                     	;# 
   430  0EA1                     	;# 
   431  0EA2                     	;# 
   432  0EA3                     	;# 
   433  0EA4                     	;# 
   434  0EA5                     	;# 
   435  0EA6                     	;# 
   436  0EA7                     	;# 
   437  0F0F                     	;# 
   438  0F10                     	;# 
   439  0F11                     	;# 
   440  0F12                     	;# 
   441  0F13                     	;# 
   442  0F14                     	;# 
   443  0F15                     	;# 
   444  0F16                     	;# 
   445  0F17                     	;# 
   446  0F18                     	;# 
   447  0F19                     	;# 
   448  0F1A                     	;# 
   449  0F1B                     	;# 
   450  0F1C                     	;# 
   451  0F1D                     	;# 
   452  0F1E                     	;# 
   453  0F1F                     	;# 
   454  0F20                     	;# 
   455  0F21                     	;# 
   456  0F22                     	;# 
   457  0F23                     	;# 
   458  0F24                     	;# 
   459  0F25                     	;# 
   460  0F26                     	;# 
   461  0F27                     	;# 
   462  0F28                     	;# 
   463  0F29                     	;# 
   464  0F2A                     	;# 
   465  0F2B                     	;# 
   466  0F2C                     	;# 
   467  0F2D                     	;# 
   468  0F2E                     	;# 
   469  0F2F                     	;# 
   470  0F30                     	;# 
   471  0F31                     	;# 
   472  0F32                     	;# 
   473  0F33                     	;# 
   474  0F34                     	;# 
   475  0F35                     	;# 
   476  0F36                     	;# 
   477  0F37                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0013                     	;# 
   508  0014                     	;# 
   509  0015                     	;# 
   510  0015                     	;# 
   511  0016                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  001D                     	;# 
   521  001E                     	;# 
   522  001F                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0094                     	;# 
   531  0097                     	;# 
   532  009B                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  009F                     	;# 
   538  010C                     	;# 
   539  010D                     	;# 
   540  010E                     	;# 
   541  0111                     	;# 
   542  0112                     	;# 
   543  0113                     	;# 
   544  0114                     	;# 
   545  0115                     	;# 
   546  0116                     	;# 
   547  0117                     	;# 
   548  0118                     	;# 
   549  0119                     	;# 
   550  018C                     	;# 
   551  018D                     	;# 
   552  018E                     	;# 
   553  0197                     	;# 
   554  0199                     	;# 
   555  0199                     	;# 
   556  0199                     	;# 
   557  019A                     	;# 
   558  019A                     	;# 
   559  019A                     	;# 
   560  019B                     	;# 
   561  019B                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019C                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019D                     	;# 
   569  019D                     	;# 
   570  019D                     	;# 
   571  019E                     	;# 
   572  019E                     	;# 
   573  019E                     	;# 
   574  019F                     	;# 
   575  019F                     	;# 
   576  019F                     	;# 
   577  019F                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020D                     	;# 
   581  020E                     	;# 
   582  0211                     	;# 
   583  0211                     	;# 
   584  0212                     	;# 
   585  0212                     	;# 
   586  0213                     	;# 
   587  0213                     	;# 
   588  0214                     	;# 
   589  0214                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0215                     	;# 
   594  0216                     	;# 
   595  0216                     	;# 
   596  0217                     	;# 
   597  0217                     	;# 
   598  0219                     	;# 
   599  021A                     	;# 
   600  021B                     	;# 
   601  021C                     	;# 
   602  021D                     	;# 
   603  021D                     	;# 
   604  021E                     	;# 
   605  021F                     	;# 
   606  028C                     	;# 
   607  028D                     	;# 
   608  028E                     	;# 
   609  0291                     	;# 
   610  0291                     	;# 
   611  0292                     	;# 
   612  0293                     	;# 
   613  0294                     	;# 
   614  0295                     	;# 
   615  0295                     	;# 
   616  0296                     	;# 
   617  0297                     	;# 
   618  0298                     	;# 
   619  029F                     	;# 
   620  030C                     	;# 
   621  030D                     	;# 
   622  030E                     	;# 
   623  0311                     	;# 
   624  0311                     	;# 
   625  0312                     	;# 
   626  0313                     	;# 
   627  0314                     	;# 
   628  0315                     	;# 
   629  0315                     	;# 
   630  0316                     	;# 
   631  0317                     	;# 
   632  0318                     	;# 
   633  038C                     	;# 
   634  038D                     	;# 
   635  038E                     	;# 
   636  0391                     	;# 
   637  0392                     	;# 
   638  0393                     	;# 
   639  0394                     	;# 
   640  0395                     	;# 
   641  0396                     	;# 
   642  0397                     	;# 
   643  0398                     	;# 
   644  0399                     	;# 
   645  039A                     	;# 
   646  039C                     	;# 
   647  039D                     	;# 
   648  039E                     	;# 
   649  039F                     	;# 
   650  0411                     	;# 
   651  0411                     	;# 
   652  0412                     	;# 
   653  0413                     	;# 
   654  0414                     	;# 
   655  0415                     	;# 
   656  0416                     	;# 
   657  0417                     	;# 
   658  0418                     	;# 
   659  0418                     	;# 
   660  0419                     	;# 
   661  041A                     	;# 
   662  041B                     	;# 
   663  041C                     	;# 
   664  041D                     	;# 
   665  041E                     	;# 
   666  041F                     	;# 
   667  0498                     	;# 
   668  0498                     	;# 
   669  0499                     	;# 
   670  049A                     	;# 
   671  049B                     	;# 
   672  049B                     	;# 
   673  049C                     	;# 
   674  049D                     	;# 
   675  049E                     	;# 
   676  049F                     	;# 
   677  0617                     	;# 
   678  0618                     	;# 
   679  0619                     	;# 
   680  0619                     	;# 
   681  061A                     	;# 
   682  061B                     	;# 
   683  061C                     	;# 
   684  061C                     	;# 
   685  061F                     	;# 
   686  0691                     	;# 
   687  0692                     	;# 
   688  0693                     	;# 
   689  0694                     	;# 
   690  0695                     	;# 
   691  0696                     	;# 
   692  0697                     	;# 
   693  0698                     	;# 
   694  0699                     	;# 
   695  0711                     	;# 
   696  0712                     	;# 
   697  0713                     	;# 
   698  0714                     	;# 
   699  0715                     	;# 
   700  0716                     	;# 
   701  0717                     	;# 
   702  0718                     	;# 
   703  0719                     	;# 
   704  0891                     	;# 
   705  0891                     	;# 
   706  0891                     	;# 
   707  0891                     	;# 
   708  0891                     	;# 
   709  0891                     	;# 
   710  0892                     	;# 
   711  0892                     	;# 
   712  0892                     	;# 
   713  0893                     	;# 
   714  0893                     	;# 
   715  0893                     	;# 
   716  0893                     	;# 
   717  0893                     	;# 
   718  0893                     	;# 
   719  0894                     	;# 
   720  0894                     	;# 
   721  0894                     	;# 
   722  0895                     	;# 
   723  0895                     	;# 
   724  0895                     	;# 
   725  0896                     	;# 
   726  0896                     	;# 
   727  0896                     	;# 
   728  089B                     	;# 
   729  0911                     	;# 
   730  0912                     	;# 
   731  0913                     	;# 
   732  0914                     	;# 
   733  0915                     	;# 
   734  0916                     	;# 
   735  0918                     	;# 
   736  0919                     	;# 
   737  091A                     	;# 
   738  091B                     	;# 
   739  091C                     	;# 
   740  091D                     	;# 
   741  091E                     	;# 
   742  091F                     	;# 
   743  0E0F                     	;# 
   744  0E10                     	;# 
   745  0E11                     	;# 
   746  0E12                     	;# 
   747  0E13                     	;# 
   748  0E14                     	;# 
   749  0E15                     	;# 
   750  0E16                     	;# 
   751  0E17                     	;# 
   752  0E18                     	;# 
   753  0E19                     	;# 
   754  0E1A                     	;# 
   755  0E1B                     	;# 
   756  0E1C                     	;# 
   757  0E1D                     	;# 
   758  0E1E                     	;# 
   759  0E1F                     	;# 
   760  0E20                     	;# 
   761  0E21                     	;# 
   762  0E22                     	;# 
   763  0E24                     	;# 
   764  0E25                     	;# 
   765  0E28                     	;# 
   766  0E29                     	;# 
   767  0E2A                     	;# 
   768  0E2B                     	;# 
   769  0E2C                     	;# 
   770  0E2D                     	;# 
   771  0E2E                     	;# 
   772  0E2F                     	;# 
   773  0E90                     	;# 
   774  0E91                     	;# 
   775  0E92                     	;# 
   776  0E94                     	;# 
   777  0E95                     	;# 
   778  0E9C                     	;# 
   779  0E9D                     	;# 
   780  0E9E                     	;# 
   781  0E9F                     	;# 
   782  0EA0                     	;# 
   783  0EA1                     	;# 
   784  0EA2                     	;# 
   785  0EA3                     	;# 
   786  0EA4                     	;# 
   787  0EA5                     	;# 
   788  0EA6                     	;# 
   789  0EA7                     	;# 
   790  0F0F                     	;# 
   791  0F10                     	;# 
   792  0F11                     	;# 
   793  0F12                     	;# 
   794  0F13                     	;# 
   795  0F14                     	;# 
   796  0F15                     	;# 
   797  0F16                     	;# 
   798  0F17                     	;# 
   799  0F18                     	;# 
   800  0F19                     	;# 
   801  0F1A                     	;# 
   802  0F1B                     	;# 
   803  0F1C                     	;# 
   804  0F1D                     	;# 
   805  0F1E                     	;# 
   806  0F1F                     	;# 
   807  0F20                     	;# 
   808  0F21                     	;# 
   809  0F22                     	;# 
   810  0F23                     	;# 
   811  0F24                     	;# 
   812  0F25                     	;# 
   813  0F26                     	;# 
   814  0F27                     	;# 
   815  0F28                     	;# 
   816  0F29                     	;# 
   817  0F2A                     	;# 
   818  0F2B                     	;# 
   819  0F2C                     	;# 
   820  0F2D                     	;# 
   821  0F2E                     	;# 
   822  0F2F                     	;# 
   823  0F30                     	;# 
   824  0F31                     	;# 
   825  0F32                     	;# 
   826  0F33                     	;# 
   827  0F34                     	;# 
   828  0F35                     	;# 
   829  0F36                     	;# 
   830  0F37                     	;# 
   831  0FE4                     	;# 
   832  0FE5                     	;# 
   833  0FE6                     	;# 
   834  0FE7                     	;# 
   835  0FE8                     	;# 
   836  0FE9                     	;# 
   837  0FEA                     	;# 
   838  0FEB                     	;# 
   839  0FED                     	;# 
   840  0FEE                     	;# 
   841  0FEF                     	;# 
   842  0000                     	;# 
   843  0001                     	;# 
   844  0002                     	;# 
   845  0003                     	;# 
   846  0004                     	;# 
   847  0005                     	;# 
   848  0006                     	;# 
   849  0007                     	;# 
   850  0008                     	;# 
   851  0009                     	;# 
   852  000A                     	;# 
   853  000B                     	;# 
   854  000C                     	;# 
   855  000D                     	;# 
   856  000E                     	;# 
   857  0010                     	;# 
   858  0011                     	;# 
   859  0012                     	;# 
   860  0013                     	;# 
   861  0014                     	;# 
   862  0015                     	;# 
   863  0015                     	;# 
   864  0016                     	;# 
   865  0016                     	;# 
   866  0017                     	;# 
   867  0018                     	;# 
   868  0019                     	;# 
   869  0019                     	;# 
   870  001A                     	;# 
   871  001B                     	;# 
   872  001C                     	;# 
   873  001D                     	;# 
   874  001E                     	;# 
   875  001F                     	;# 
   876  008C                     	;# 
   877  008D                     	;# 
   878  008E                     	;# 
   879  0090                     	;# 
   880  0091                     	;# 
   881  0092                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0097                     	;# 
   885  009B                     	;# 
   886  009B                     	;# 
   887  009C                     	;# 
   888  009D                     	;# 
   889  009E                     	;# 
   890  009F                     	;# 
   891  010C                     	;# 
   892  010D                     	;# 
   893  010E                     	;# 
   894  0111                     	;# 
   895  0112                     	;# 
   896  0113                     	;# 
   897  0114                     	;# 
   898  0115                     	;# 
   899  0116                     	;# 
   900  0117                     	;# 
   901  0118                     	;# 
   902  0119                     	;# 
   903  018C                     	;# 
   904  018D                     	;# 
   905  018E                     	;# 
   906  0197                     	;# 
   907  0199                     	;# 
   908  0199                     	;# 
   909  0199                     	;# 
   910  019A                     	;# 
   911  019A                     	;# 
   912  019A                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019C                     	;# 
   919  019C                     	;# 
   920  019C                     	;# 
   921  019D                     	;# 
   922  019D                     	;# 
   923  019D                     	;# 
   924  019E                     	;# 
   925  019E                     	;# 
   926  019E                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  019F                     	;# 
   931  019F                     	;# 
   932  020C                     	;# 
   933  020D                     	;# 
   934  020E                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0215                     	;# 
   947  0216                     	;# 
   948  0216                     	;# 
   949  0217                     	;# 
   950  0217                     	;# 
   951  0219                     	;# 
   952  021A                     	;# 
   953  021B                     	;# 
   954  021C                     	;# 
   955  021D                     	;# 
   956  021D                     	;# 
   957  021E                     	;# 
   958  021F                     	;# 
   959  028C                     	;# 
   960  028D                     	;# 
   961  028E                     	;# 
   962  0291                     	;# 
   963  0291                     	;# 
   964  0292                     	;# 
   965  0293                     	;# 
   966  0294                     	;# 
   967  0295                     	;# 
   968  0295                     	;# 
   969  0296                     	;# 
   970  0297                     	;# 
   971  0298                     	;# 
   972  029F                     	;# 
   973  030C                     	;# 
   974  030D                     	;# 
   975  030E                     	;# 
   976  0311                     	;# 
   977  0311                     	;# 
   978  0312                     	;# 
   979  0313                     	;# 
   980  0314                     	;# 
   981  0315                     	;# 
   982  0315                     	;# 
   983  0316                     	;# 
   984  0317                     	;# 
   985  0318                     	;# 
   986  038C                     	;# 
   987  038D                     	;# 
   988  038E                     	;# 
   989  0391                     	;# 
   990  0392                     	;# 
   991  0393                     	;# 
   992  0394                     	;# 
   993  0395                     	;# 
   994  0396                     	;# 
   995  0397                     	;# 
   996  0398                     	;# 
   997  0399                     	;# 
   998  039A                     	;# 
   999  039C                     	;# 
  1000  039D                     	;# 
  1001  039E                     	;# 
  1002  039F                     	;# 
  1003  0411                     	;# 
  1004  0411                     	;# 
  1005  0412                     	;# 
  1006  0413                     	;# 
  1007  0414                     	;# 
  1008  0415                     	;# 
  1009  0416                     	;# 
  1010  0417                     	;# 
  1011  0418                     	;# 
  1012  0418                     	;# 
  1013  0419                     	;# 
  1014  041A                     	;# 
  1015  041B                     	;# 
  1016  041C                     	;# 
  1017  041D                     	;# 
  1018  041E                     	;# 
  1019  041F                     	;# 
  1020  0498                     	;# 
  1021  0498                     	;# 
  1022  0499                     	;# 
  1023  049A                     	;# 
  1024  049B                     	;# 
  1025  049B                     	;# 
  1026  049C                     	;# 
  1027  049D                     	;# 
  1028  049E                     	;# 
  1029  049F                     	;# 
  1030  0617                     	;# 
  1031  0618                     	;# 
  1032  0619                     	;# 
  1033  0619                     	;# 
  1034  061A                     	;# 
  1035  061B                     	;# 
  1036  061C                     	;# 
  1037  061C                     	;# 
  1038  061F                     	;# 
  1039  0691                     	;# 
  1040  0692                     	;# 
  1041  0693                     	;# 
  1042  0694                     	;# 
  1043  0695                     	;# 
  1044  0696                     	;# 
  1045  0697                     	;# 
  1046  0698                     	;# 
  1047  0699                     	;# 
  1048  0711                     	;# 
  1049  0712                     	;# 
  1050  0713                     	;# 
  1051  0714                     	;# 
  1052  0715                     	;# 
  1053  0716                     	;# 
  1054  0717                     	;# 
  1055  0718                     	;# 
  1056  0719                     	;# 
  1057  0891                     	;# 
  1058  0891                     	;# 
  1059  0891                     	;# 
  1060  0891                     	;# 
  1061  0891                     	;# 
  1062  0891                     	;# 
  1063  0892                     	;# 
  1064  0892                     	;# 
  1065  0892                     	;# 
  1066  0893                     	;# 
  1067  0893                     	;# 
  1068  0893                     	;# 
  1069  0893                     	;# 
  1070  0893                     	;# 
  1071  0893                     	;# 
  1072  0894                     	;# 
  1073  0894                     	;# 
  1074  0894                     	;# 
  1075  0895                     	;# 
  1076  0895                     	;# 
  1077  0895                     	;# 
  1078  0896                     	;# 
  1079  0896                     	;# 
  1080  0896                     	;# 
  1081  089B                     	;# 
  1082  0911                     	;# 
  1083  0912                     	;# 
  1084  0913                     	;# 
  1085  0914                     	;# 
  1086  0915                     	;# 
  1087  0916                     	;# 
  1088  0918                     	;# 
  1089  0919                     	;# 
  1090  091A                     	;# 
  1091  091B                     	;# 
  1092  091C                     	;# 
  1093  091D                     	;# 
  1094  091E                     	;# 
  1095  091F                     	;# 
  1096  0E0F                     	;# 
  1097  0E10                     	;# 
  1098  0E11                     	;# 
  1099  0E12                     	;# 
  1100  0E13                     	;# 
  1101  0E14                     	;# 
  1102  0E15                     	;# 
  1103  0E16                     	;# 
  1104  0E17                     	;# 
  1105  0E18                     	;# 
  1106  0E19                     	;# 
  1107  0E1A                     	;# 
  1108  0E1B                     	;# 
  1109  0E1C                     	;# 
  1110  0E1D                     	;# 
  1111  0E1E                     	;# 
  1112  0E1F                     	;# 
  1113  0E20                     	;# 
  1114  0E21                     	;# 
  1115  0E22                     	;# 
  1116  0E24                     	;# 
  1117  0E25                     	;# 
  1118  0E28                     	;# 
  1119  0E29                     	;# 
  1120  0E2A                     	;# 
  1121  0E2B                     	;# 
  1122  0E2C                     	;# 
  1123  0E2D                     	;# 
  1124  0E2E                     	;# 
  1125  0E2F                     	;# 
  1126  0E90                     	;# 
  1127  0E91                     	;# 
  1128  0E92                     	;# 
  1129  0E94                     	;# 
  1130  0E95                     	;# 
  1131  0E9C                     	;# 
  1132  0E9D                     	;# 
  1133  0E9E                     	;# 
  1134  0E9F                     	;# 
  1135  0EA0                     	;# 
  1136  0EA1                     	;# 
  1137  0EA2                     	;# 
  1138  0EA3                     	;# 
  1139  0EA4                     	;# 
  1140  0EA5                     	;# 
  1141  0EA6                     	;# 
  1142  0EA7                     	;# 
  1143  0F0F                     	;# 
  1144  0F10                     	;# 
  1145  0F11                     	;# 
  1146  0F12                     	;# 
  1147  0F13                     	;# 
  1148  0F14                     	;# 
  1149  0F15                     	;# 
  1150  0F16                     	;# 
  1151  0F17                     	;# 
  1152  0F18                     	;# 
  1153  0F19                     	;# 
  1154  0F1A                     	;# 
  1155  0F1B                     	;# 
  1156  0F1C                     	;# 
  1157  0F1D                     	;# 
  1158  0F1E                     	;# 
  1159  0F1F                     	;# 
  1160  0F20                     	;# 
  1161  0F21                     	;# 
  1162  0F22                     	;# 
  1163  0F23                     	;# 
  1164  0F24                     	;# 
  1165  0F25                     	;# 
  1166  0F26                     	;# 
  1167  0F27                     	;# 
  1168  0F28                     	;# 
  1169  0F29                     	;# 
  1170  0F2A                     	;# 
  1171  0F2B                     	;# 
  1172  0F2C                     	;# 
  1173  0F2D                     	;# 
  1174  0F2E                     	;# 
  1175  0F2F                     	;# 
  1176  0F30                     	;# 
  1177  0F31                     	;# 
  1178  0F32                     	;# 
  1179  0F33                     	;# 
  1180  0F34                     	;# 
  1181  0F35                     	;# 
  1182  0F36                     	;# 
  1183  0F37                     	;# 
  1184  0FE4                     	;# 
  1185  0FE5                     	;# 
  1186  0FE6                     	;# 
  1187  0FE7                     	;# 
  1188  0FE8                     	;# 
  1189  0FE9                     	;# 
  1190  0FEA                     	;# 
  1191  0FEB                     	;# 
  1192  0FED                     	;# 
  1193  0FEE                     	;# 
  1194  0FEF                     	;# 
  1195  0000                     	;# 
  1196  0001                     	;# 
  1197  0002                     	;# 
  1198  0003                     	;# 
  1199  0004                     	;# 
  1200  0005                     	;# 
  1201  0006                     	;# 
  1202  0007                     	;# 
  1203  0008                     	;# 
  1204  0009                     	;# 
  1205  000A                     	;# 
  1206  000B                     	;# 
  1207  000C                     	;# 
  1208  000D                     	;# 
  1209  000E                     	;# 
  1210  0010                     	;# 
  1211  0011                     	;# 
  1212  0012                     	;# 
  1213  0013                     	;# 
  1214  0014                     	;# 
  1215  0015                     	;# 
  1216  0015                     	;# 
  1217  0016                     	;# 
  1218  0016                     	;# 
  1219  0017                     	;# 
  1220  0018                     	;# 
  1221  0019                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  001B                     	;# 
  1225  001C                     	;# 
  1226  001D                     	;# 
  1227  001E                     	;# 
  1228  001F                     	;# 
  1229  008C                     	;# 
  1230  008D                     	;# 
  1231  008E                     	;# 
  1232  0090                     	;# 
  1233  0091                     	;# 
  1234  0092                     	;# 
  1235  0093                     	;# 
  1236  0094                     	;# 
  1237  0097                     	;# 
  1238  009B                     	;# 
  1239  009B                     	;# 
  1240  009C                     	;# 
  1241  009D                     	;# 
  1242  009E                     	;# 
  1243  009F                     	;# 
  1244  010C                     	;# 
  1245  010D                     	;# 
  1246  010E                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0115                     	;# 
  1252  0116                     	;# 
  1253  0117                     	;# 
  1254  0118                     	;# 
  1255  0119                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  018E                     	;# 
  1259  0197                     	;# 
  1260  0199                     	;# 
  1261  0199                     	;# 
  1262  0199                     	;# 
  1263  019A                     	;# 
  1264  019A                     	;# 
  1265  019A                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019C                     	;# 
  1272  019C                     	;# 
  1273  019C                     	;# 
  1274  019D                     	;# 
  1275  019D                     	;# 
  1276  019D                     	;# 
  1277  019E                     	;# 
  1278  019E                     	;# 
  1279  019E                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  019F                     	;# 
  1283  019F                     	;# 
  1284  019F                     	;# 
  1285  020C                     	;# 
  1286  020D                     	;# 
  1287  020E                     	;# 
  1288  0211                     	;# 
  1289  0211                     	;# 
  1290  0212                     	;# 
  1291  0212                     	;# 
  1292  0213                     	;# 
  1293  0213                     	;# 
  1294  0214                     	;# 
  1295  0214                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0216                     	;# 
  1301  0216                     	;# 
  1302  0217                     	;# 
  1303  0217                     	;# 
  1304  0219                     	;# 
  1305  021A                     	;# 
  1306  021B                     	;# 
  1307  021C                     	;# 
  1308  021D                     	;# 
  1309  021D                     	;# 
  1310  021E                     	;# 
  1311  021F                     	;# 
  1312  028C                     	;# 
  1313  028D                     	;# 
  1314  028E                     	;# 
  1315  0291                     	;# 
  1316  0291                     	;# 
  1317  0292                     	;# 
  1318  0293                     	;# 
  1319  0294                     	;# 
  1320  0295                     	;# 
  1321  0295                     	;# 
  1322  0296                     	;# 
  1323  0297                     	;# 
  1324  0298                     	;# 
  1325  029F                     	;# 
  1326  030C                     	;# 
  1327  030D                     	;# 
  1328  030E                     	;# 
  1329  0311                     	;# 
  1330  0311                     	;# 
  1331  0312                     	;# 
  1332  0313                     	;# 
  1333  0314                     	;# 
  1334  0315                     	;# 
  1335  0315                     	;# 
  1336  0316                     	;# 
  1337  0317                     	;# 
  1338  0318                     	;# 
  1339  038C                     	;# 
  1340  038D                     	;# 
  1341  038E                     	;# 
  1342  0391                     	;# 
  1343  0392                     	;# 
  1344  0393                     	;# 
  1345  0394                     	;# 
  1346  0395                     	;# 
  1347  0396                     	;# 
  1348  0397                     	;# 
  1349  0398                     	;# 
  1350  0399                     	;# 
  1351  039A                     	;# 
  1352  039C                     	;# 
  1353  039D                     	;# 
  1354  039E                     	;# 
  1355  039F                     	;# 
  1356  0411                     	;# 
  1357  0411                     	;# 
  1358  0412                     	;# 
  1359  0413                     	;# 
  1360  0414                     	;# 
  1361  0415                     	;# 
  1362  0416                     	;# 
  1363  0417                     	;# 
  1364  0418                     	;# 
  1365  0418                     	;# 
  1366  0419                     	;# 
  1367  041A                     	;# 
  1368  041B                     	;# 
  1369  041C                     	;# 
  1370  041D                     	;# 
  1371  041E                     	;# 
  1372  041F                     	;# 
  1373  0498                     	;# 
  1374  0498                     	;# 
  1375  0499                     	;# 
  1376  049A                     	;# 
  1377  049B                     	;# 
  1378  049B                     	;# 
  1379  049C                     	;# 
  1380  049D                     	;# 
  1381  049E                     	;# 
  1382  049F                     	;# 
  1383  0617                     	;# 
  1384  0618                     	;# 
  1385  0619                     	;# 
  1386  0619                     	;# 
  1387  061A                     	;# 
  1388  061B                     	;# 
  1389  061C                     	;# 
  1390  061C                     	;# 
  1391  061F                     	;# 
  1392  0691                     	;# 
  1393  0692                     	;# 
  1394  0693                     	;# 
  1395  0694                     	;# 
  1396  0695                     	;# 
  1397  0696                     	;# 
  1398  0697                     	;# 
  1399  0698                     	;# 
  1400  0699                     	;# 
  1401  0711                     	;# 
  1402  0712                     	;# 
  1403  0713                     	;# 
  1404  0714                     	;# 
  1405  0715                     	;# 
  1406  0716                     	;# 
  1407  0717                     	;# 
  1408  0718                     	;# 
  1409  0719                     	;# 
  1410  0891                     	;# 
  1411  0891                     	;# 
  1412  0891                     	;# 
  1413  0891                     	;# 
  1414  0891                     	;# 
  1415  0891                     	;# 
  1416  0892                     	;# 
  1417  0892                     	;# 
  1418  0892                     	;# 
  1419  0893                     	;# 
  1420  0893                     	;# 
  1421  0893                     	;# 
  1422  0893                     	;# 
  1423  0893                     	;# 
  1424  0893                     	;# 
  1425  0894                     	;# 
  1426  0894                     	;# 
  1427  0894                     	;# 
  1428  0895                     	;# 
  1429  0895                     	;# 
  1430  0895                     	;# 
  1431  0896                     	;# 
  1432  0896                     	;# 
  1433  0896                     	;# 
  1434  089B                     	;# 
  1435  0911                     	;# 
  1436  0912                     	;# 
  1437  0913                     	;# 
  1438  0914                     	;# 
  1439  0915                     	;# 
  1440  0916                     	;# 
  1441  0918                     	;# 
  1442  0919                     	;# 
  1443  091A                     	;# 
  1444  091B                     	;# 
  1445  091C                     	;# 
  1446  091D                     	;# 
  1447  091E                     	;# 
  1448  091F                     	;# 
  1449  0E0F                     	;# 
  1450  0E10                     	;# 
  1451  0E11                     	;# 
  1452  0E12                     	;# 
  1453  0E13                     	;# 
  1454  0E14                     	;# 
  1455  0E15                     	;# 
  1456  0E16                     	;# 
  1457  0E17                     	;# 
  1458  0E18                     	;# 
  1459  0E19                     	;# 
  1460  0E1A                     	;# 
  1461  0E1B                     	;# 
  1462  0E1C                     	;# 
  1463  0E1D                     	;# 
  1464  0E1E                     	;# 
  1465  0E1F                     	;# 
  1466  0E20                     	;# 
  1467  0E21                     	;# 
  1468  0E22                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E28                     	;# 
  1472  0E29                     	;# 
  1473  0E2A                     	;# 
  1474  0E2B                     	;# 
  1475  0E2C                     	;# 
  1476  0E2D                     	;# 
  1477  0E2E                     	;# 
  1478  0E2F                     	;# 
  1479  0E90                     	;# 
  1480  0E91                     	;# 
  1481  0E92                     	;# 
  1482  0E94                     	;# 
  1483  0E95                     	;# 
  1484  0E9C                     	;# 
  1485  0E9D                     	;# 
  1486  0E9E                     	;# 
  1487  0E9F                     	;# 
  1488  0EA0                     	;# 
  1489  0EA1                     	;# 
  1490  0EA2                     	;# 
  1491  0EA3                     	;# 
  1492  0EA4                     	;# 
  1493  0EA5                     	;# 
  1494  0EA6                     	;# 
  1495  0EA7                     	;# 
  1496  0F0F                     	;# 
  1497  0F10                     	;# 
  1498  0F11                     	;# 
  1499  0F12                     	;# 
  1500  0F13                     	;# 
  1501  0F14                     	;# 
  1502  0F15                     	;# 
  1503  0F16                     	;# 
  1504  0F17                     	;# 
  1505  0F18                     	;# 
  1506  0F19                     	;# 
  1507  0F1A                     	;# 
  1508  0F1B                     	;# 
  1509  0F1C                     	;# 
  1510  0F1D                     	;# 
  1511  0F1E                     	;# 
  1512  0F1F                     	;# 
  1513  0F20                     	;# 
  1514  0F21                     	;# 
  1515  0F22                     	;# 
  1516  0F23                     	;# 
  1517  0F24                     	;# 
  1518  0F25                     	;# 
  1519  0F26                     	;# 
  1520  0F27                     	;# 
  1521  0F28                     	;# 
  1522  0F29                     	;# 
  1523  0F2A                     	;# 
  1524  0F2B                     	;# 
  1525  0F2C                     	;# 
  1526  0F2D                     	;# 
  1527  0F2E                     	;# 
  1528  0F2F                     	;# 
  1529  0F30                     	;# 
  1530  0F31                     	;# 
  1531  0F32                     	;# 
  1532  0F33                     	;# 
  1533  0F34                     	;# 
  1534  0F35                     	;# 
  1535  0F36                     	;# 
  1536  0F37                     	;# 
  1537  0FE4                     	;# 
  1538  0FE5                     	;# 
  1539  0FE6                     	;# 
  1540  0FE7                     	;# 
  1541  0FE8                     	;# 
  1542  0FE9                     	;# 
  1543  0FEA                     	;# 
  1544  0FEB                     	;# 
  1545  0FED                     	;# 
  1546  0FEE                     	;# 
  1547  0FEF                     	;# 
  1548  0000                     	;# 
  1549  0001                     	;# 
  1550  0002                     	;# 
  1551  0003                     	;# 
  1552  0004                     	;# 
  1553  0005                     	;# 
  1554  0006                     	;# 
  1555  0007                     	;# 
  1556  0008                     	;# 
  1557  0009                     	;# 
  1558  000A                     	;# 
  1559  000B                     	;# 
  1560  000C                     	;# 
  1561  000D                     	;# 
  1562  000E                     	;# 
  1563  0010                     	;# 
  1564  0011                     	;# 
  1565  0012                     	;# 
  1566  0013                     	;# 
  1567  0014                     	;# 
  1568  0015                     	;# 
  1569  0015                     	;# 
  1570  0016                     	;# 
  1571  0016                     	;# 
  1572  0017                     	;# 
  1573  0018                     	;# 
  1574  0019                     	;# 
  1575  0019                     	;# 
  1576  001A                     	;# 
  1577  001B                     	;# 
  1578  001C                     	;# 
  1579  001D                     	;# 
  1580  001E                     	;# 
  1581  001F                     	;# 
  1582  008C                     	;# 
  1583  008D                     	;# 
  1584  008E                     	;# 
  1585  0090                     	;# 
  1586  0091                     	;# 
  1587  0092                     	;# 
  1588  0093                     	;# 
  1589  0094                     	;# 
  1590  0097                     	;# 
  1591  009B                     	;# 
  1592  009B                     	;# 
  1593  009C                     	;# 
  1594  009D                     	;# 
  1595  009E                     	;# 
  1596  009F                     	;# 
  1597  010C                     	;# 
  1598  010D                     	;# 
  1599  010E                     	;# 
  1600  0111                     	;# 
  1601  0112                     	;# 
  1602  0113                     	;# 
  1603  0114                     	;# 
  1604  0115                     	;# 
  1605  0116                     	;# 
  1606  0117                     	;# 
  1607  0118                     	;# 
  1608  0119                     	;# 
  1609  018C                     	;# 
  1610  018D                     	;# 
  1611  018E                     	;# 
  1612  0197                     	;# 
  1613  0199                     	;# 
  1614  0199                     	;# 
  1615  0199                     	;# 
  1616  019A                     	;# 
  1617  019A                     	;# 
  1618  019A                     	;# 
  1619  019B                     	;# 
  1620  019B                     	;# 
  1621  019B                     	;# 
  1622  019B                     	;# 
  1623  019B                     	;# 
  1624  019C                     	;# 
  1625  019C                     	;# 
  1626  019C                     	;# 
  1627  019D                     	;# 
  1628  019D                     	;# 
  1629  019D                     	;# 
  1630  019E                     	;# 
  1631  019E                     	;# 
  1632  019E                     	;# 
  1633  019F                     	;# 
  1634  019F                     	;# 
  1635  019F                     	;# 
  1636  019F                     	;# 
  1637  019F                     	;# 
  1638  020C                     	;# 
  1639  020D                     	;# 
  1640  020E                     	;# 
  1641  0211                     	;# 
  1642  0211                     	;# 
  1643  0212                     	;# 
  1644  0212                     	;# 
  1645  0213                     	;# 
  1646  0213                     	;# 
  1647  0214                     	;# 
  1648  0214                     	;# 
  1649  0215                     	;# 
  1650  0215                     	;# 
  1651  0215                     	;# 
  1652  0215                     	;# 
  1653  0216                     	;# 
  1654  0216                     	;# 
  1655  0217                     	;# 
  1656  0217                     	;# 
  1657  0219                     	;# 
  1658  021A                     	;# 
  1659  021B                     	;# 
  1660  021C                     	;# 
  1661  021D                     	;# 
  1662  021D                     	;# 
  1663  021E                     	;# 
  1664  021F                     	;# 
  1665  028C                     	;# 
  1666  028D                     	;# 
  1667  028E                     	;# 
  1668  0291                     	;# 
  1669  0291                     	;# 
  1670  0292                     	;# 
  1671  0293                     	;# 
  1672  0294                     	;# 
  1673  0295                     	;# 
  1674  0295                     	;# 
  1675  0296                     	;# 
  1676  0297                     	;# 
  1677  0298                     	;# 
  1678  029F                     	;# 
  1679  030C                     	;# 
  1680  030D                     	;# 
  1681  030E                     	;# 
  1682  0311                     	;# 
  1683  0311                     	;# 
  1684  0312                     	;# 
  1685  0313                     	;# 
  1686  0314                     	;# 
  1687  0315                     	;# 
  1688  0315                     	;# 
  1689  0316                     	;# 
  1690  0317                     	;# 
  1691  0318                     	;# 
  1692  038C                     	;# 
  1693  038D                     	;# 
  1694  038E                     	;# 
  1695  0391                     	;# 
  1696  0392                     	;# 
  1697  0393                     	;# 
  1698  0394                     	;# 
  1699  0395                     	;# 
  1700  0396                     	;# 
  1701  0397                     	;# 
  1702  0398                     	;# 
  1703  0399                     	;# 
  1704  039A                     	;# 
  1705  039C                     	;# 
  1706  039D                     	;# 
  1707  039E                     	;# 
  1708  039F                     	;# 
  1709  0411                     	;# 
  1710  0411                     	;# 
  1711  0412                     	;# 
  1712  0413                     	;# 
  1713  0414                     	;# 
  1714  0415                     	;# 
  1715  0416                     	;# 
  1716  0417                     	;# 
  1717  0418                     	;# 
  1718  0418                     	;# 
  1719  0419                     	;# 
  1720  041A                     	;# 
  1721  041B                     	;# 
  1722  041C                     	;# 
  1723  041D                     	;# 
  1724  041E                     	;# 
  1725  041F                     	;# 
  1726  0498                     	;# 
  1727  0498                     	;# 
  1728  0499                     	;# 
  1729  049A                     	;# 
  1730  049B                     	;# 
  1731  049B                     	;# 
  1732  049C                     	;# 
  1733  049D                     	;# 
  1734  049E                     	;# 
  1735  049F                     	;# 
  1736  0617                     	;# 
  1737  0618                     	;# 
  1738  0619                     	;# 
  1739  0619                     	;# 
  1740  061A                     	;# 
  1741  061B                     	;# 
  1742  061C                     	;# 
  1743  061C                     	;# 
  1744  061F                     	;# 
  1745  0691                     	;# 
  1746  0692                     	;# 
  1747  0693                     	;# 
  1748  0694                     	;# 
  1749  0695                     	;# 
  1750  0696                     	;# 
  1751  0697                     	;# 
  1752  0698                     	;# 
  1753  0699                     	;# 
  1754  0711                     	;# 
  1755  0712                     	;# 
  1756  0713                     	;# 
  1757  0714                     	;# 
  1758  0715                     	;# 
  1759  0716                     	;# 
  1760  0717                     	;# 
  1761  0718                     	;# 
  1762  0719                     	;# 
  1763  0891                     	;# 
  1764  0891                     	;# 
  1765  0891                     	;# 
  1766  0891                     	;# 
  1767  0891                     	;# 
  1768  0891                     	;# 
  1769  0892                     	;# 
  1770  0892                     	;# 
  1771  0892                     	;# 
  1772  0893                     	;# 
  1773  0893                     	;# 
  1774  0893                     	;# 
  1775  0893                     	;# 
  1776  0893                     	;# 
  1777  0893                     	;# 
  1778  0894                     	;# 
  1779  0894                     	;# 
  1780  0894                     	;# 
  1781  0895                     	;# 
  1782  0895                     	;# 
  1783  0895                     	;# 
  1784  0896                     	;# 
  1785  0896                     	;# 
  1786  0896                     	;# 
  1787  089B                     	;# 
  1788  0911                     	;# 
  1789  0912                     	;# 
  1790  0913                     	;# 
  1791  0914                     	;# 
  1792  0915                     	;# 
  1793  0916                     	;# 
  1794  0918                     	;# 
  1795  0919                     	;# 
  1796  091A                     	;# 
  1797  091B                     	;# 
  1798  091C                     	;# 
  1799  091D                     	;# 
  1800  091E                     	;# 
  1801  091F                     	;# 
  1802  0E0F                     	;# 
  1803  0E10                     	;# 
  1804  0E11                     	;# 
  1805  0E12                     	;# 
  1806  0E13                     	;# 
  1807  0E14                     	;# 
  1808  0E15                     	;# 
  1809  0E16                     	;# 
  1810  0E17                     	;# 
  1811  0E18                     	;# 
  1812  0E19                     	;# 
  1813  0E1A                     	;# 
  1814  0E1B                     	;# 
  1815  0E1C                     	;# 
  1816  0E1D                     	;# 
  1817  0E1E                     	;# 
  1818  0E1F                     	;# 
  1819  0E20                     	;# 
  1820  0E21                     	;# 
  1821  0E22                     	;# 
  1822  0E24                     	;# 
  1823  0E25                     	;# 
  1824  0E28                     	;# 
  1825  0E29                     	;# 
  1826  0E2A                     	;# 
  1827  0E2B                     	;# 
  1828  0E2C                     	;# 
  1829  0E2D                     	;# 
  1830  0E2E                     	;# 
  1831  0E2F                     	;# 
  1832  0E90                     	;# 
  1833  0E91                     	;# 
  1834  0E92                     	;# 
  1835  0E94                     	;# 
  1836  0E95                     	;# 
  1837  0E9C                     	;# 
  1838  0E9D                     	;# 
  1839  0E9E                     	;# 
  1840  0E9F                     	;# 
  1841  0EA0                     	;# 
  1842  0EA1                     	;# 
  1843  0EA2                     	;# 
  1844  0EA3                     	;# 
  1845  0EA4                     	;# 
  1846  0EA5                     	;# 
  1847  0EA6                     	;# 
  1848  0EA7                     	;# 
  1849  0F0F                     	;# 
  1850  0F10                     	;# 
  1851  0F11                     	;# 
  1852  0F12                     	;# 
  1853  0F13                     	;# 
  1854  0F14                     	;# 
  1855  0F15                     	;# 
  1856  0F16                     	;# 
  1857  0F17                     	;# 
  1858  0F18                     	;# 
  1859  0F19                     	;# 
  1860  0F1A                     	;# 
  1861  0F1B                     	;# 
  1862  0F1C                     	;# 
  1863  0F1D                     	;# 
  1864  0F1E                     	;# 
  1865  0F1F                     	;# 
  1866  0F20                     	;# 
  1867  0F21                     	;# 
  1868  0F22                     	;# 
  1869  0F23                     	;# 
  1870  0F24                     	;# 
  1871  0F25                     	;# 
  1872  0F26                     	;# 
  1873  0F27                     	;# 
  1874  0F28                     	;# 
  1875  0F29                     	;# 
  1876  0F2A                     	;# 
  1877  0F2B                     	;# 
  1878  0F2C                     	;# 
  1879  0F2D                     	;# 
  1880  0F2E                     	;# 
  1881  0F2F                     	;# 
  1882  0F30                     	;# 
  1883  0F31                     	;# 
  1884  0F32                     	;# 
  1885  0F33                     	;# 
  1886  0F34                     	;# 
  1887  0F35                     	;# 
  1888  0F36                     	;# 
  1889  0F37                     	;# 
  1890  0FE4                     	;# 
  1891  0FE5                     	;# 
  1892  0FE6                     	;# 
  1893  0FE7                     	;# 
  1894  0FE8                     	;# 
  1895  0FE9                     	;# 
  1896  0FEA                     	;# 
  1897  0FEB                     	;# 
  1898  0FED                     	;# 
  1899  0FEE                     	;# 
  1900  0FEF                     	;# 
  1901  0000                     	;# 
  1902  0001                     	;# 
  1903  0002                     	;# 
  1904  0003                     	;# 
  1905  0004                     	;# 
  1906  0005                     	;# 
  1907  0006                     	;# 
  1908  0007                     	;# 
  1909  0008                     	;# 
  1910  0009                     	;# 
  1911  000A                     	;# 
  1912  000B                     	;# 
  1913  000C                     	;# 
  1914  000D                     	;# 
  1915  000E                     	;# 
  1916  0010                     	;# 
  1917  0011                     	;# 
  1918  0012                     	;# 
  1919  0013                     	;# 
  1920  0014                     	;# 
  1921  0015                     	;# 
  1922  0015                     	;# 
  1923  0016                     	;# 
  1924  0016                     	;# 
  1925  0017                     	;# 
  1926  0018                     	;# 
  1927  0019                     	;# 
  1928  0019                     	;# 
  1929  001A                     	;# 
  1930  001B                     	;# 
  1931  001C                     	;# 
  1932  001D                     	;# 
  1933  001E                     	;# 
  1934  001F                     	;# 
  1935  008C                     	;# 
  1936  008D                     	;# 
  1937  008E                     	;# 
  1938  0090                     	;# 
  1939  0091                     	;# 
  1940  0092                     	;# 
  1941  0093                     	;# 
  1942  0094                     	;# 
  1943  0097                     	;# 
  1944  009B                     	;# 
  1945  009B                     	;# 
  1946  009C                     	;# 
  1947  009D                     	;# 
  1948  009E                     	;# 
  1949  009F                     	;# 
  1950  010C                     	;# 
  1951  010D                     	;# 
  1952  010E                     	;# 
  1953  0111                     	;# 
  1954  0112                     	;# 
  1955  0113                     	;# 
  1956  0114                     	;# 
  1957  0115                     	;# 
  1958  0116                     	;# 
  1959  0117                     	;# 
  1960  0118                     	;# 
  1961  0119                     	;# 
  1962  018C                     	;# 
  1963  018D                     	;# 
  1964  018E                     	;# 
  1965  0197                     	;# 
  1966  0199                     	;# 
  1967  0199                     	;# 
  1968  0199                     	;# 
  1969  019A                     	;# 
  1970  019A                     	;# 
  1971  019A                     	;# 
  1972  019B                     	;# 
  1973  019B                     	;# 
  1974  019B                     	;# 
  1975  019B                     	;# 
  1976  019B                     	;# 
  1977  019C                     	;# 
  1978  019C                     	;# 
  1979  019C                     	;# 
  1980  019D                     	;# 
  1981  019D                     	;# 
  1982  019D                     	;# 
  1983  019E                     	;# 
  1984  019E                     	;# 
  1985  019E                     	;# 
  1986  019F                     	;# 
  1987  019F                     	;# 
  1988  019F                     	;# 
  1989  019F                     	;# 
  1990  019F                     	;# 
  1991  020C                     	;# 
  1992  020D                     	;# 
  1993  020E                     	;# 
  1994  0211                     	;# 
  1995  0211                     	;# 
  1996  0212                     	;# 
  1997  0212                     	;# 
  1998  0213                     	;# 
  1999  0213                     	;# 
  2000  0214                     	;# 
  2001  0214                     	;# 
  2002  0215                     	;# 
  2003  0215                     	;# 
  2004  0215                     	;# 
  2005  0215                     	;# 
  2006  0216                     	;# 
  2007  0216                     	;# 
  2008  0217                     	;# 
  2009  0217                     	;# 
  2010  0219                     	;# 
  2011  021A                     	;# 
  2012  021B                     	;# 
  2013  021C                     	;# 
  2014  021D                     	;# 
  2015  021D                     	;# 
  2016  021E                     	;# 
  2017  021F                     	;# 
  2018  028C                     	;# 
  2019  028D                     	;# 
  2020  028E                     	;# 
  2021  0291                     	;# 
  2022  0291                     	;# 
  2023  0292                     	;# 
  2024  0293                     	;# 
  2025  0294                     	;# 
  2026  0295                     	;# 
  2027  0295                     	;# 
  2028  0296                     	;# 
  2029  0297                     	;# 
  2030  0298                     	;# 
  2031  029F                     	;# 
  2032  030C                     	;# 
  2033  030D                     	;# 
  2034  030E                     	;# 
  2035  0311                     	;# 
  2036  0311                     	;# 
  2037  0312                     	;# 
  2038  0313                     	;# 
  2039  0314                     	;# 
  2040  0315                     	;# 
  2041  0315                     	;# 
  2042  0316                     	;# 
  2043  0317                     	;# 
  2044  0318                     	;# 
  2045  038C                     	;# 
  2046  038D                     	;# 
  2047  038E                     	;# 
  2048  0391                     	;# 
  2049  0392                     	;# 
  2050  0393                     	;# 
  2051  0394                     	;# 
  2052  0395                     	;# 
  2053  0396                     	;# 
  2054  0397                     	;# 
  2055  0398                     	;# 
  2056  0399                     	;# 
  2057  039A                     	;# 
  2058  039C                     	;# 
  2059  039D                     	;# 
  2060  039E                     	;# 
  2061  039F                     	;# 
  2062  0411                     	;# 
  2063  0411                     	;# 
  2064  0412                     	;# 
  2065  0413                     	;# 
  2066  0414                     	;# 
  2067  0415                     	;# 
  2068  0416                     	;# 
  2069  0417                     	;# 
  2070  0418                     	;# 
  2071  0418                     	;# 
  2072  0419                     	;# 
  2073  041A                     	;# 
  2074  041B                     	;# 
  2075  041C                     	;# 
  2076  041D                     	;# 
  2077  041E                     	;# 
  2078  041F                     	;# 
  2079  0498                     	;# 
  2080  0498                     	;# 
  2081  0499                     	;# 
  2082  049A                     	;# 
  2083  049B                     	;# 
  2084  049B                     	;# 
  2085  049C                     	;# 
  2086  049D                     	;# 
  2087  049E                     	;# 
  2088  049F                     	;# 
  2089  0617                     	;# 
  2090  0618                     	;# 
  2091  0619                     	;# 
  2092  0619                     	;# 
  2093  061A                     	;# 
  2094  061B                     	;# 
  2095  061C                     	;# 
  2096  061C                     	;# 
  2097  061F                     	;# 
  2098  0691                     	;# 
  2099  0692                     	;# 
  2100  0693                     	;# 
  2101  0694                     	;# 
  2102  0695                     	;# 
  2103  0696                     	;# 
  2104  0697                     	;# 
  2105  0698                     	;# 
  2106  0699                     	;# 
  2107  0711                     	;# 
  2108  0712                     	;# 
  2109  0713                     	;# 
  2110  0714                     	;# 
  2111  0715                     	;# 
  2112  0716                     	;# 
  2113  0717                     	;# 
  2114  0718                     	;# 
  2115  0719                     	;# 
  2116  0891                     	;# 
  2117  0891                     	;# 
  2118  0891                     	;# 
  2119  0891                     	;# 
  2120  0891                     	;# 
  2121  0891                     	;# 
  2122  0892                     	;# 
  2123  0892                     	;# 
  2124  0892                     	;# 
  2125  0893                     	;# 
  2126  0893                     	;# 
  2127  0893                     	;# 
  2128  0893                     	;# 
  2129  0893                     	;# 
  2130  0893                     	;# 
  2131  0894                     	;# 
  2132  0894                     	;# 
  2133  0894                     	;# 
  2134  0895                     	;# 
  2135  0895                     	;# 
  2136  0895                     	;# 
  2137  0896                     	;# 
  2138  0896                     	;# 
  2139  0896                     	;# 
  2140  089B                     	;# 
  2141  0911                     	;# 
  2142  0912                     	;# 
  2143  0913                     	;# 
  2144  0914                     	;# 
  2145  0915                     	;# 
  2146  0916                     	;# 
  2147  0918                     	;# 
  2148  0919                     	;# 
  2149  091A                     	;# 
  2150  091B                     	;# 
  2151  091C                     	;# 
  2152  091D                     	;# 
  2153  091E                     	;# 
  2154  091F                     	;# 
  2155  0E0F                     	;# 
  2156  0E10                     	;# 
  2157  0E11                     	;# 
  2158  0E12                     	;# 
  2159  0E13                     	;# 
  2160  0E14                     	;# 
  2161  0E15                     	;# 
  2162  0E16                     	;# 
  2163  0E17                     	;# 
  2164  0E18                     	;# 
  2165  0E19                     	;# 
  2166  0E1A                     	;# 
  2167  0E1B                     	;# 
  2168  0E1C                     	;# 
  2169  0E1D                     	;# 
  2170  0E1E                     	;# 
  2171  0E1F                     	;# 
  2172  0E20                     	;# 
  2173  0E21                     	;# 
  2174  0E22                     	;# 
  2175  0E24                     	;# 
  2176  0E25                     	;# 
  2177  0E28                     	;# 
  2178  0E29                     	;# 
  2179  0E2A                     	;# 
  2180  0E2B                     	;# 
  2181  0E2C                     	;# 
  2182  0E2D                     	;# 
  2183  0E2E                     	;# 
  2184  0E2F                     	;# 
  2185  0E90                     	;# 
  2186  0E91                     	;# 
  2187  0E92                     	;# 
  2188  0E94                     	;# 
  2189  0E95                     	;# 
  2190  0E9C                     	;# 
  2191  0E9D                     	;# 
  2192  0E9E                     	;# 
  2193  0E9F                     	;# 
  2194  0EA0                     	;# 
  2195  0EA1                     	;# 
  2196  0EA2                     	;# 
  2197  0EA3                     	;# 
  2198  0EA4                     	;# 
  2199  0EA5                     	;# 
  2200  0EA6                     	;# 
  2201  0EA7                     	;# 
  2202  0F0F                     	;# 
  2203  0F10                     	;# 
  2204  0F11                     	;# 
  2205  0F12                     	;# 
  2206  0F13                     	;# 
  2207  0F14                     	;# 
  2208  0F15                     	;# 
  2209  0F16                     	;# 
  2210  0F17                     	;# 
  2211  0F18                     	;# 
  2212  0F19                     	;# 
  2213  0F1A                     	;# 
  2214  0F1B                     	;# 
  2215  0F1C                     	;# 
  2216  0F1D                     	;# 
  2217  0F1E                     	;# 
  2218  0F1F                     	;# 
  2219  0F20                     	;# 
  2220  0F21                     	;# 
  2221  0F22                     	;# 
  2222  0F23                     	;# 
  2223  0F24                     	;# 
  2224  0F25                     	;# 
  2225  0F26                     	;# 
  2226  0F27                     	;# 
  2227  0F28                     	;# 
  2228  0F29                     	;# 
  2229  0F2A                     	;# 
  2230  0F2B                     	;# 
  2231  0F2C                     	;# 
  2232  0F2D                     	;# 
  2233  0F2E                     	;# 
  2234  0F2F                     	;# 
  2235  0F30                     	;# 
  2236  0F31                     	;# 
  2237  0F32                     	;# 
  2238  0F33                     	;# 
  2239  0F34                     	;# 
  2240  0F35                     	;# 
  2241  0F36                     	;# 
  2242  0F37                     	;# 
  2243  0FE4                     	;# 
  2244  0FE5                     	;# 
  2245  0FE6                     	;# 
  2246  0FE7                     	;# 
  2247  0FE8                     	;# 
  2248  0FE9                     	;# 
  2249  0FEA                     	;# 
  2250  0FEB                     	;# 
  2251  0FED                     	;# 
  2252  0FEE                     	;# 
  2253  0FEF                     	;# 
  2254  0000                     	;# 
  2255  0001                     	;# 
  2256  0002                     	;# 
  2257  0003                     	;# 
  2258  0004                     	;# 
  2259  0005                     	;# 
  2260  0006                     	;# 
  2261  0007                     	;# 
  2262  0008                     	;# 
  2263  0009                     	;# 
  2264  000A                     	;# 
  2265  000B                     	;# 
  2266  000C                     	;# 
  2267  000D                     	;# 
  2268  000E                     	;# 
  2269  0010                     	;# 
  2270  0011                     	;# 
  2271  0012                     	;# 
  2272  0013                     	;# 
  2273  0014                     	;# 
  2274  0015                     	;# 
  2275  0015                     	;# 
  2276  0016                     	;# 
  2277  0016                     	;# 
  2278  0017                     	;# 
  2279  0018                     	;# 
  2280  0019                     	;# 
  2281  0019                     	;# 
  2282  001A                     	;# 
  2283  001B                     	;# 
  2284  001C                     	;# 
  2285  001D                     	;# 
  2286  001E                     	;# 
  2287  001F                     	;# 
  2288  008C                     	;# 
  2289  008D                     	;# 
  2290  008E                     	;# 
  2291  0090                     	;# 
  2292  0091                     	;# 
  2293  0092                     	;# 
  2294  0093                     	;# 
  2295  0094                     	;# 
  2296  0097                     	;# 
  2297  009B                     	;# 
  2298  009B                     	;# 
  2299  009C                     	;# 
  2300  009D                     	;# 
  2301  009E                     	;# 
  2302  009F                     	;# 
  2303  010C                     	;# 
  2304  010D                     	;# 
  2305  010E                     	;# 
  2306  0111                     	;# 
  2307  0112                     	;# 
  2308  0113                     	;# 
  2309  0114                     	;# 
  2310  0115                     	;# 
  2311  0116                     	;# 
  2312  0117                     	;# 
  2313  0118                     	;# 
  2314  0119                     	;# 
  2315  018C                     	;# 
  2316  018D                     	;# 
  2317  018E                     	;# 
  2318  0197                     	;# 
  2319  0199                     	;# 
  2320  0199                     	;# 
  2321  0199                     	;# 
  2322  019A                     	;# 
  2323  019A                     	;# 
  2324  019A                     	;# 
  2325  019B                     	;# 
  2326  019B                     	;# 
  2327  019B                     	;# 
  2328  019B                     	;# 
  2329  019B                     	;# 
  2330  019C                     	;# 
  2331  019C                     	;# 
  2332  019C                     	;# 
  2333  019D                     	;# 
  2334  019D                     	;# 
  2335  019D                     	;# 
  2336  019E                     	;# 
  2337  019E                     	;# 
  2338  019E                     	;# 
  2339  019F                     	;# 
  2340  019F                     	;# 
  2341  019F                     	;# 
  2342  019F                     	;# 
  2343  019F                     	;# 
  2344  020C                     	;# 
  2345  020D                     	;# 
  2346  020E                     	;# 
  2347  0211                     	;# 
  2348  0211                     	;# 
  2349  0212                     	;# 
  2350  0212                     	;# 
  2351  0213                     	;# 
  2352  0213                     	;# 
  2353  0214                     	;# 
  2354  0214                     	;# 
  2355  0215                     	;# 
  2356  0215                     	;# 
  2357  0215                     	;# 
  2358  0215                     	;# 
  2359  0216                     	;# 
  2360  0216                     	;# 
  2361  0217                     	;# 
  2362  0217                     	;# 
  2363  0219                     	;# 
  2364  021A                     	;# 
  2365  021B                     	;# 
  2366  021C                     	;# 
  2367  021D                     	;# 
  2368  021D                     	;# 
  2369  021E                     	;# 
  2370  021F                     	;# 
  2371  028C                     	;# 
  2372  028D                     	;# 
  2373  028E                     	;# 
  2374  0291                     	;# 
  2375  0291                     	;# 
  2376  0292                     	;# 
  2377  0293                     	;# 
  2378  0294                     	;# 
  2379  0295                     	;# 
  2380  0295                     	;# 
  2381  0296                     	;# 
  2382  0297                     	;# 
  2383  0298                     	;# 
  2384  029F                     	;# 
  2385  030C                     	;# 
  2386  030D                     	;# 
  2387  030E                     	;# 
  2388  0311                     	;# 
  2389  0311                     	;# 
  2390  0312                     	;# 
  2391  0313                     	;# 
  2392  0314                     	;# 
  2393  0315                     	;# 
  2394  0315                     	;# 
  2395  0316                     	;# 
  2396  0317                     	;# 
  2397  0318                     	;# 
  2398  038C                     	;# 
  2399  038D                     	;# 
  2400  038E                     	;# 
  2401  0391                     	;# 
  2402  0392                     	;# 
  2403  0393                     	;# 
  2404  0394                     	;# 
  2405  0395                     	;# 
  2406  0396                     	;# 
  2407  0397                     	;# 
  2408  0398                     	;# 
  2409  0399                     	;# 
  2410  039A                     	;# 
  2411  039C                     	;# 
  2412  039D                     	;# 
  2413  039E                     	;# 
  2414  039F                     	;# 
  2415  0411                     	;# 
  2416  0411                     	;# 
  2417  0412                     	;# 
  2418  0413                     	;# 
  2419  0414                     	;# 
  2420  0415                     	;# 
  2421  0416                     	;# 
  2422  0417                     	;# 
  2423  0418                     	;# 
  2424  0418                     	;# 
  2425  0419                     	;# 
  2426  041A                     	;# 
  2427  041B                     	;# 
  2428  041C                     	;# 
  2429  041D                     	;# 
  2430  041E                     	;# 
  2431  041F                     	;# 
  2432  0498                     	;# 
  2433  0498                     	;# 
  2434  0499                     	;# 
  2435  049A                     	;# 
  2436  049B                     	;# 
  2437  049B                     	;# 
  2438  049C                     	;# 
  2439  049D                     	;# 
  2440  049E                     	;# 
  2441  049F                     	;# 
  2442  0617                     	;# 
  2443  0618                     	;# 
  2444  0619                     	;# 
  2445  0619                     	;# 
  2446  061A                     	;# 
  2447  061B                     	;# 
  2448  061C                     	;# 
  2449  061C                     	;# 
  2450  061F                     	;# 
  2451  0691                     	;# 
  2452  0692                     	;# 
  2453  0693                     	;# 
  2454  0694                     	;# 
  2455  0695                     	;# 
  2456  0696                     	;# 
  2457  0697                     	;# 
  2458  0698                     	;# 
  2459  0699                     	;# 
  2460  0711                     	;# 
  2461  0712                     	;# 
  2462  0713                     	;# 
  2463  0714                     	;# 
  2464  0715                     	;# 
  2465  0716                     	;# 
  2466  0717                     	;# 
  2467  0718                     	;# 
  2468  0719                     	;# 
  2469  0891                     	;# 
  2470  0891                     	;# 
  2471  0891                     	;# 
  2472  0891                     	;# 
  2473  0891                     	;# 
  2474  0891                     	;# 
  2475  0892                     	;# 
  2476  0892                     	;# 
  2477  0892                     	;# 
  2478  0893                     	;# 
  2479  0893                     	;# 
  2480  0893                     	;# 
  2481  0893                     	;# 
  2482  0893                     	;# 
  2483  0893                     	;# 
  2484  0894                     	;# 
  2485  0894                     	;# 
  2486  0894                     	;# 
  2487  0895                     	;# 
  2488  0895                     	;# 
  2489  0895                     	;# 
  2490  0896                     	;# 
  2491  0896                     	;# 
  2492  0896                     	;# 
  2493  089B                     	;# 
  2494  0911                     	;# 
  2495  0912                     	;# 
  2496  0913                     	;# 
  2497  0914                     	;# 
  2498  0915                     	;# 
  2499  0916                     	;# 
  2500  0918                     	;# 
  2501  0919                     	;# 
  2502  091A                     	;# 
  2503  091B                     	;# 
  2504  091C                     	;# 
  2505  091D                     	;# 
  2506  091E                     	;# 
  2507  091F                     	;# 
  2508  0E0F                     	;# 
  2509  0E10                     	;# 
  2510  0E11                     	;# 
  2511  0E12                     	;# 
  2512  0E13                     	;# 
  2513  0E14                     	;# 
  2514  0E15                     	;# 
  2515  0E16                     	;# 
  2516  0E17                     	;# 
  2517  0E18                     	;# 
  2518  0E19                     	;# 
  2519  0E1A                     	;# 
  2520  0E1B                     	;# 
  2521  0E1C                     	;# 
  2522  0E1D                     	;# 
  2523  0E1E                     	;# 
  2524  0E1F                     	;# 
  2525  0E20                     	;# 
  2526  0E21                     	;# 
  2527  0E22                     	;# 
  2528  0E24                     	;# 
  2529  0E25                     	;# 
  2530  0E28                     	;# 
  2531  0E29                     	;# 
  2532  0E2A                     	;# 
  2533  0E2B                     	;# 
  2534  0E2C                     	;# 
  2535  0E2D                     	;# 
  2536  0E2E                     	;# 
  2537  0E2F                     	;# 
  2538  0E90                     	;# 
  2539  0E91                     	;# 
  2540  0E92                     	;# 
  2541  0E94                     	;# 
  2542  0E95                     	;# 
  2543  0E9C                     	;# 
  2544  0E9D                     	;# 
  2545  0E9E                     	;# 
  2546  0E9F                     	;# 
  2547  0EA0                     	;# 
  2548  0EA1                     	;# 
  2549  0EA2                     	;# 
  2550  0EA3                     	;# 
  2551  0EA4                     	;# 
  2552  0EA5                     	;# 
  2553  0EA6                     	;# 
  2554  0EA7                     	;# 
  2555  0F0F                     	;# 
  2556  0F10                     	;# 
  2557  0F11                     	;# 
  2558  0F12                     	;# 
  2559  0F13                     	;# 
  2560  0F14                     	;# 
  2561  0F15                     	;# 
  2562  0F16                     	;# 
  2563  0F17                     	;# 
  2564  0F18                     	;# 
  2565  0F19                     	;# 
  2566  0F1A                     	;# 
  2567  0F1B                     	;# 
  2568  0F1C                     	;# 
  2569  0F1D                     	;# 
  2570  0F1E                     	;# 
  2571  0F1F                     	;# 
  2572  0F20                     	;# 
  2573  0F21                     	;# 
  2574  0F22                     	;# 
  2575  0F23                     	;# 
  2576  0F24                     	;# 
  2577  0F25                     	;# 
  2578  0F26                     	;# 
  2579  0F27                     	;# 
  2580  0F28                     	;# 
  2581  0F29                     	;# 
  2582  0F2A                     	;# 
  2583  0F2B                     	;# 
  2584  0F2C                     	;# 
  2585  0F2D                     	;# 
  2586  0F2E                     	;# 
  2587  0F2F                     	;# 
  2588  0F30                     	;# 
  2589  0F31                     	;# 
  2590  0F32                     	;# 
  2591  0F33                     	;# 
  2592  0F34                     	;# 
  2593  0F35                     	;# 
  2594  0F36                     	;# 
  2595  0F37                     	;# 
  2596  0FE4                     	;# 
  2597  0FE5                     	;# 
  2598  0FE6                     	;# 
  2599  0FE7                     	;# 
  2600  0FE8                     	;# 
  2601  0FE9                     	;# 
  2602  0FEA                     	;# 
  2603  0FEB                     	;# 
  2604  0FED                     	;# 
  2605  0FEE                     	;# 
  2606  0FEF                     	;# 
  2607  0000                     	;# 
  2608  0001                     	;# 
  2609  0002                     	;# 
  2610  0003                     	;# 
  2611  0004                     	;# 
  2612  0005                     	;# 
  2613  0006                     	;# 
  2614  0007                     	;# 
  2615  0008                     	;# 
  2616  0009                     	;# 
  2617  000A                     	;# 
  2618  000B                     	;# 
  2619  000C                     	;# 
  2620  000D                     	;# 
  2621  000E                     	;# 
  2622  0010                     	;# 
  2623  0011                     	;# 
  2624  0012                     	;# 
  2625  0013                     	;# 
  2626  0014                     	;# 
  2627  0015                     	;# 
  2628  0015                     	;# 
  2629  0016                     	;# 
  2630  0016                     	;# 
  2631  0017                     	;# 
  2632  0018                     	;# 
  2633  0019                     	;# 
  2634  0019                     	;# 
  2635  001A                     	;# 
  2636  001B                     	;# 
  2637  001C                     	;# 
  2638  001D                     	;# 
  2639  001E                     	;# 
  2640  001F                     	;# 
  2641  008C                     	;# 
  2642  008D                     	;# 
  2643  008E                     	;# 
  2644  0090                     	;# 
  2645  0091                     	;# 
  2646  0092                     	;# 
  2647  0093                     	;# 
  2648  0094                     	;# 
  2649  0097                     	;# 
  2650  009B                     	;# 
  2651  009B                     	;# 
  2652  009C                     	;# 
  2653  009D                     	;# 
  2654  009E                     	;# 
  2655  009F                     	;# 
  2656  010C                     	;# 
  2657  010D                     	;# 
  2658  010E                     	;# 
  2659  0111                     	;# 
  2660  0112                     	;# 
  2661  0113                     	;# 
  2662  0114                     	;# 
  2663  0115                     	;# 
  2664  0116                     	;# 
  2665  0117                     	;# 
  2666  0118                     	;# 
  2667  0119                     	;# 
  2668  018C                     	;# 
  2669  018D                     	;# 
  2670  018E                     	;# 
  2671  0197                     	;# 
  2672  0199                     	;# 
  2673  0199                     	;# 
  2674  0199                     	;# 
  2675  019A                     	;# 
  2676  019A                     	;# 
  2677  019A                     	;# 
  2678  019B                     	;# 
  2679  019B                     	;# 
  2680  019B                     	;# 
  2681  019B                     	;# 
  2682  019B                     	;# 
  2683  019C                     	;# 
  2684  019C                     	;# 
  2685  019C                     	;# 
  2686  019D                     	;# 
  2687  019D                     	;# 
  2688  019D                     	;# 
  2689  019E                     	;# 
  2690  019E                     	;# 
  2691  019E                     	;# 
  2692  019F                     	;# 
  2693  019F                     	;# 
  2694  019F                     	;# 
  2695  019F                     	;# 
  2696  019F                     	;# 
  2697  020C                     	;# 
  2698  020D                     	;# 
  2699  020E                     	;# 
  2700  0211                     	;# 
  2701  0211                     	;# 
  2702  0212                     	;# 
  2703  0212                     	;# 
  2704  0213                     	;# 
  2705  0213                     	;# 
  2706  0214                     	;# 
  2707  0214                     	;# 
  2708  0215                     	;# 
  2709  0215                     	;# 
  2710  0215                     	;# 
  2711  0215                     	;# 
  2712  0216                     	;# 
  2713  0216                     	;# 
  2714  0217                     	;# 
  2715  0217                     	;# 
  2716  0219                     	;# 
  2717  021A                     	;# 
  2718  021B                     	;# 
  2719  021C                     	;# 
  2720  021D                     	;# 
  2721  021D                     	;# 
  2722  021E                     	;# 
  2723  021F                     	;# 
  2724  028C                     	;# 
  2725  028D                     	;# 
  2726  028E                     	;# 
  2727  0291                     	;# 
  2728  0291                     	;# 
  2729  0292                     	;# 
  2730  0293                     	;# 
  2731  0294                     	;# 
  2732  0295                     	;# 
  2733  0295                     	;# 
  2734  0296                     	;# 
  2735  0297                     	;# 
  2736  0298                     	;# 
  2737  029F                     	;# 
  2738  030C                     	;# 
  2739  030D                     	;# 
  2740  030E                     	;# 
  2741  0311                     	;# 
  2742  0311                     	;# 
  2743  0312                     	;# 
  2744  0313                     	;# 
  2745  0314                     	;# 
  2746  0315                     	;# 
  2747  0315                     	;# 
  2748  0316                     	;# 
  2749  0317                     	;# 
  2750  0318                     	;# 
  2751  038C                     	;# 
  2752  038D                     	;# 
  2753  038E                     	;# 
  2754  0391                     	;# 
  2755  0392                     	;# 
  2756  0393                     	;# 
  2757  0394                     	;# 
  2758  0395                     	;# 
  2759  0396                     	;# 
  2760  0397                     	;# 
  2761  0398                     	;# 
  2762  0399                     	;# 
  2763  039A                     	;# 
  2764  039C                     	;# 
  2765  039D                     	;# 
  2766  039E                     	;# 
  2767  039F                     	;# 
  2768  0411                     	;# 
  2769  0411                     	;# 
  2770  0412                     	;# 
  2771  0413                     	;# 
  2772  0414                     	;# 
  2773  0415                     	;# 
  2774  0416                     	;# 
  2775  0417                     	;# 
  2776  0418                     	;# 
  2777  0418                     	;# 
  2778  0419                     	;# 
  2779  041A                     	;# 
  2780  041B                     	;# 
  2781  041C                     	;# 
  2782  041D                     	;# 
  2783  041E                     	;# 
  2784  041F                     	;# 
  2785  0498                     	;# 
  2786  0498                     	;# 
  2787  0499                     	;# 
  2788  049A                     	;# 
  2789  049B                     	;# 
  2790  049B                     	;# 
  2791  049C                     	;# 
  2792  049D                     	;# 
  2793  049E                     	;# 
  2794  049F                     	;# 
  2795  0617                     	;# 
  2796  0618                     	;# 
  2797  0619                     	;# 
  2798  0619                     	;# 
  2799  061A                     	;# 
  2800  061B                     	;# 
  2801  061C                     	;# 
  2802  061C                     	;# 
  2803  061F                     	;# 
  2804  0691                     	;# 
  2805  0692                     	;# 
  2806  0693                     	;# 
  2807  0694                     	;# 
  2808  0695                     	;# 
  2809  0696                     	;# 
  2810  0697                     	;# 
  2811  0698                     	;# 
  2812  0699                     	;# 
  2813  0711                     	;# 
  2814  0712                     	;# 
  2815  0713                     	;# 
  2816  0714                     	;# 
  2817  0715                     	;# 
  2818  0716                     	;# 
  2819  0717                     	;# 
  2820  0718                     	;# 
  2821  0719                     	;# 
  2822  0891                     	;# 
  2823  0891                     	;# 
  2824  0891                     	;# 
  2825  0891                     	;# 
  2826  0891                     	;# 
  2827  0891                     	;# 
  2828  0892                     	;# 
  2829  0892                     	;# 
  2830  0892                     	;# 
  2831  0893                     	;# 
  2832  0893                     	;# 
  2833  0893                     	;# 
  2834  0893                     	;# 
  2835  0893                     	;# 
  2836  0893                     	;# 
  2837  0894                     	;# 
  2838  0894                     	;# 
  2839  0894                     	;# 
  2840  0895                     	;# 
  2841  0895                     	;# 
  2842  0895                     	;# 
  2843  0896                     	;# 
  2844  0896                     	;# 
  2845  0896                     	;# 
  2846  089B                     	;# 
  2847  0911                     	;# 
  2848  0912                     	;# 
  2849  0913                     	;# 
  2850  0914                     	;# 
  2851  0915                     	;# 
  2852  0916                     	;# 
  2853  0918                     	;# 
  2854  0919                     	;# 
  2855  091A                     	;# 
  2856  091B                     	;# 
  2857  091C                     	;# 
  2858  091D                     	;# 
  2859  091E                     	;# 
  2860  091F                     	;# 
  2861  0E0F                     	;# 
  2862  0E10                     	;# 
  2863  0E11                     	;# 
  2864  0E12                     	;# 
  2865  0E13                     	;# 
  2866  0E14                     	;# 
  2867  0E15                     	;# 
  2868  0E16                     	;# 
  2869  0E17                     	;# 
  2870  0E18                     	;# 
  2871  0E19                     	;# 
  2872  0E1A                     	;# 
  2873  0E1B                     	;# 
  2874  0E1C                     	;# 
  2875  0E1D                     	;# 
  2876  0E1E                     	;# 
  2877  0E1F                     	;# 
  2878  0E20                     	;# 
  2879  0E21                     	;# 
  2880  0E22                     	;# 
  2881  0E24                     	;# 
  2882  0E25                     	;# 
  2883  0E28                     	;# 
  2884  0E29                     	;# 
  2885  0E2A                     	;# 
  2886  0E2B                     	;# 
  2887  0E2C                     	;# 
  2888  0E2D                     	;# 
  2889  0E2E                     	;# 
  2890  0E2F                     	;# 
  2891  0E90                     	;# 
  2892  0E91                     	;# 
  2893  0E92                     	;# 
  2894  0E94                     	;# 
  2895  0E95                     	;# 
  2896  0E9C                     	;# 
  2897  0E9D                     	;# 
  2898  0E9E                     	;# 
  2899  0E9F                     	;# 
  2900  0EA0                     	;# 
  2901  0EA1                     	;# 
  2902  0EA2                     	;# 
  2903  0EA3                     	;# 
  2904  0EA4                     	;# 
  2905  0EA5                     	;# 
  2906  0EA6                     	;# 
  2907  0EA7                     	;# 
  2908  0F0F                     	;# 
  2909  0F10                     	;# 
  2910  0F11                     	;# 
  2911  0F12                     	;# 
  2912  0F13                     	;# 
  2913  0F14                     	;# 
  2914  0F15                     	;# 
  2915  0F16                     	;# 
  2916  0F17                     	;# 
  2917  0F18                     	;# 
  2918  0F19                     	;# 
  2919  0F1A                     	;# 
  2920  0F1B                     	;# 
  2921  0F1C                     	;# 
  2922  0F1D                     	;# 
  2923  0F1E                     	;# 
  2924  0F1F                     	;# 
  2925  0F20                     	;# 
  2926  0F21                     	;# 
  2927  0F22                     	;# 
  2928  0F23                     	;# 
  2929  0F24                     	;# 
  2930  0F25                     	;# 
  2931  0F26                     	;# 
  2932  0F27                     	;# 
  2933  0F28                     	;# 
  2934  0F29                     	;# 
  2935  0F2A                     	;# 
  2936  0F2B                     	;# 
  2937  0F2C                     	;# 
  2938  0F2D                     	;# 
  2939  0F2E                     	;# 
  2940  0F2F                     	;# 
  2941  0F30                     	;# 
  2942  0F31                     	;# 
  2943  0F32                     	;# 
  2944  0F33                     	;# 
  2945  0F34                     	;# 
  2946  0F35                     	;# 
  2947  0F36                     	;# 
  2948  0F37                     	;# 
  2949  0FE4                     	;# 
  2950  0FE5                     	;# 
  2951  0FE6                     	;# 
  2952  0FE7                     	;# 
  2953  0FE8                     	;# 
  2954  0FE9                     	;# 
  2955  0FEA                     	;# 
  2956  0FEB                     	;# 
  2957  0FED                     	;# 
  2958  0FEE                     	;# 
  2959  0FEF                     	;# 
  2960  0000                     	;# 
  2961  0001                     	;# 
  2962  0002                     	;# 
  2963  0003                     	;# 
  2964  0004                     	;# 
  2965  0005                     	;# 
  2966  0006                     	;# 
  2967  0007                     	;# 
  2968  0008                     	;# 
  2969  0009                     	;# 
  2970  000A                     	;# 
  2971  000B                     	;# 
  2972  000C                     	;# 
  2973  000D                     	;# 
  2974  000E                     	;# 
  2975  0010                     	;# 
  2976  0011                     	;# 
  2977  0012                     	;# 
  2978  0013                     	;# 
  2979  0014                     	;# 
  2980  0015                     	;# 
  2981  0015                     	;# 
  2982  0016                     	;# 
  2983  0016                     	;# 
  2984  0017                     	;# 
  2985  0018                     	;# 
  2986  0019                     	;# 
  2987  0019                     	;# 
  2988  001A                     	;# 
  2989  001B                     	;# 
  2990  001C                     	;# 
  2991  001D                     	;# 
  2992  001E                     	;# 
  2993  001F                     	;# 
  2994  008C                     	;# 
  2995  008D                     	;# 
  2996  008E                     	;# 
  2997  0090                     	;# 
  2998  0091                     	;# 
  2999  0092                     	;# 
  3000  0093                     	;# 
  3001  0094                     	;# 
  3002  0097                     	;# 
  3003  009B                     	;# 
  3004  009B                     	;# 
  3005  009C                     	;# 
  3006  009D                     	;# 
  3007  009E                     	;# 
  3008  009F                     	;# 
  3009  010C                     	;# 
  3010  010D                     	;# 
  3011  010E                     	;# 
  3012  0111                     	;# 
  3013  0112                     	;# 
  3014  0113                     	;# 
  3015  0114                     	;# 
  3016  0115                     	;# 
  3017  0116                     	;# 
  3018  0117                     	;# 
  3019  0118                     	;# 
  3020  0119                     	;# 
  3021  018C                     	;# 
  3022  018D                     	;# 
  3023  018E                     	;# 
  3024  0197                     	;# 
  3025  0199                     	;# 
  3026  0199                     	;# 
  3027  0199                     	;# 
  3028  019A                     	;# 
  3029  019A                     	;# 
  3030  019A                     	;# 
  3031  019B                     	;# 
  3032  019B                     	;# 
  3033  019B                     	;# 
  3034  019B                     	;# 
  3035  019B                     	;# 
  3036  019C                     	;# 
  3037  019C                     	;# 
  3038  019C                     	;# 
  3039  019D                     	;# 
  3040  019D                     	;# 
  3041  019D                     	;# 
  3042  019E                     	;# 
  3043  019E                     	;# 
  3044  019E                     	;# 
  3045  019F                     	;# 
  3046  019F                     	;# 
  3047  019F                     	;# 
  3048  019F                     	;# 
  3049  019F                     	;# 
  3050  020C                     	;# 
  3051  020D                     	;# 
  3052  020E                     	;# 
  3053  0211                     	;# 
  3054  0211                     	;# 
  3055  0212                     	;# 
  3056  0212                     	;# 
  3057  0213                     	;# 
  3058  0213                     	;# 
  3059  0214                     	;# 
  3060  0214                     	;# 
  3061  0215                     	;# 
  3062  0215                     	;# 
  3063  0215                     	;# 
  3064  0215                     	;# 
  3065  0216                     	;# 
  3066  0216                     	;# 
  3067  0217                     	;# 
  3068  0217                     	;# 
  3069  0219                     	;# 
  3070  021A                     	;# 
  3071  021B                     	;# 
  3072  021C                     	;# 
  3073  021D                     	;# 
  3074  021D                     	;# 
  3075  021E                     	;# 
  3076  021F                     	;# 
  3077  028C                     	;# 
  3078  028D                     	;# 
  3079  028E                     	;# 
  3080  0291                     	;# 
  3081  0291                     	;# 
  3082  0292                     	;# 
  3083  0293                     	;# 
  3084  0294                     	;# 
  3085  0295                     	;# 
  3086  0295                     	;# 
  3087  0296                     	;# 
  3088  0297                     	;# 
  3089  0298                     	;# 
  3090  029F                     	;# 
  3091  030C                     	;# 
  3092  030D                     	;# 
  3093  030E                     	;# 
  3094  0311                     	;# 
  3095  0311                     	;# 
  3096  0312                     	;# 
  3097  0313                     	;# 
  3098  0314                     	;# 
  3099  0315                     	;# 
  3100  0315                     	;# 
  3101  0316                     	;# 
  3102  0317                     	;# 
  3103  0318                     	;# 
  3104  038C                     	;# 
  3105  038D                     	;# 
  3106  038E                     	;# 
  3107  0391                     	;# 
  3108  0392                     	;# 
  3109  0393                     	;# 
  3110  0394                     	;# 
  3111  0395                     	;# 
  3112  0396                     	;# 
  3113  0397                     	;# 
  3114  0398                     	;# 
  3115  0399                     	;# 
  3116  039A                     	;# 
  3117  039C                     	;# 
  3118  039D                     	;# 
  3119  039E                     	;# 
  3120  039F                     	;# 
  3121  0411                     	;# 
  3122  0411                     	;# 
  3123  0412                     	;# 
  3124  0413                     	;# 
  3125  0414                     	;# 
  3126  0415                     	;# 
  3127  0416                     	;# 
  3128  0417                     	;# 
  3129  0418                     	;# 
  3130  0418                     	;# 
  3131  0419                     	;# 
  3132  041A                     	;# 
  3133  041B                     	;# 
  3134  041C                     	;# 
  3135  041D                     	;# 
  3136  041E                     	;# 
  3137  041F                     	;# 
  3138  0498                     	;# 
  3139  0498                     	;# 
  3140  0499                     	;# 
  3141  049A                     	;# 
  3142  049B                     	;# 
  3143  049B                     	;# 
  3144  049C                     	;# 
  3145  049D                     	;# 
  3146  049E                     	;# 
  3147  049F                     	;# 
  3148  0617                     	;# 
  3149  0618                     	;# 
  3150  0619                     	;# 
  3151  0619                     	;# 
  3152  061A                     	;# 
  3153  061B                     	;# 
  3154  061C                     	;# 
  3155  061C                     	;# 
  3156  061F                     	;# 
  3157  0691                     	;# 
  3158  0692                     	;# 
  3159  0693                     	;# 
  3160  0694                     	;# 
  3161  0695                     	;# 
  3162  0696                     	;# 
  3163  0697                     	;# 
  3164  0698                     	;# 
  3165  0699                     	;# 
  3166  0711                     	;# 
  3167  0712                     	;# 
  3168  0713                     	;# 
  3169  0714                     	;# 
  3170  0715                     	;# 
  3171  0716                     	;# 
  3172  0717                     	;# 
  3173  0718                     	;# 
  3174  0719                     	;# 
  3175  0891                     	;# 
  3176  0891                     	;# 
  3177  0891                     	;# 
  3178  0891                     	;# 
  3179  0891                     	;# 
  3180  0891                     	;# 
  3181  0892                     	;# 
  3182  0892                     	;# 
  3183  0892                     	;# 
  3184  0893                     	;# 
  3185  0893                     	;# 
  3186  0893                     	;# 
  3187  0893                     	;# 
  3188  0893                     	;# 
  3189  0893                     	;# 
  3190  0894                     	;# 
  3191  0894                     	;# 
  3192  0894                     	;# 
  3193  0895                     	;# 
  3194  0895                     	;# 
  3195  0895                     	;# 
  3196  0896                     	;# 
  3197  0896                     	;# 
  3198  0896                     	;# 
  3199  089B                     	;# 
  3200  0911                     	;# 
  3201  0912                     	;# 
  3202  0913                     	;# 
  3203  0914                     	;# 
  3204  0915                     	;# 
  3205  0916                     	;# 
  3206  0918                     	;# 
  3207  0919                     	;# 
  3208  091A                     	;# 
  3209  091B                     	;# 
  3210  091C                     	;# 
  3211  091D                     	;# 
  3212  091E                     	;# 
  3213  091F                     	;# 
  3214  0E0F                     	;# 
  3215  0E10                     	;# 
  3216  0E11                     	;# 
  3217  0E12                     	;# 
  3218  0E13                     	;# 
  3219  0E14                     	;# 
  3220  0E15                     	;# 
  3221  0E16                     	;# 
  3222  0E17                     	;# 
  3223  0E18                     	;# 
  3224  0E19                     	;# 
  3225  0E1A                     	;# 
  3226  0E1B                     	;# 
  3227  0E1C                     	;# 
  3228  0E1D                     	;# 
  3229  0E1E                     	;# 
  3230  0E1F                     	;# 
  3231  0E20                     	;# 
  3232  0E21                     	;# 
  3233  0E22                     	;# 
  3234  0E24                     	;# 
  3235  0E25                     	;# 
  3236  0E28                     	;# 
  3237  0E29                     	;# 
  3238  0E2A                     	;# 
  3239  0E2B                     	;# 
  3240  0E2C                     	;# 
  3241  0E2D                     	;# 
  3242  0E2E                     	;# 
  3243  0E2F                     	;# 
  3244  0E90                     	;# 
  3245  0E91                     	;# 
  3246  0E92                     	;# 
  3247  0E94                     	;# 
  3248  0E95                     	;# 
  3249  0E9C                     	;# 
  3250  0E9D                     	;# 
  3251  0E9E                     	;# 
  3252  0E9F                     	;# 
  3253  0EA0                     	;# 
  3254  0EA1                     	;# 
  3255  0EA2                     	;# 
  3256  0EA3                     	;# 
  3257  0EA4                     	;# 
  3258  0EA5                     	;# 
  3259  0EA6                     	;# 
  3260  0EA7                     	;# 
  3261  0F0F                     	;# 
  3262  0F10                     	;# 
  3263  0F11                     	;# 
  3264  0F12                     	;# 
  3265  0F13                     	;# 
  3266  0F14                     	;# 
  3267  0F15                     	;# 
  3268  0F16                     	;# 
  3269  0F17                     	;# 
  3270  0F18                     	;# 
  3271  0F19                     	;# 
  3272  0F1A                     	;# 
  3273  0F1B                     	;# 
  3274  0F1C                     	;# 
  3275  0F1D                     	;# 
  3276  0F1E                     	;# 
  3277  0F1F                     	;# 
  3278  0F20                     	;# 
  3279  0F21                     	;# 
  3280  0F22                     	;# 
  3281  0F23                     	;# 
  3282  0F24                     	;# 
  3283  0F25                     	;# 
  3284  0F26                     	;# 
  3285  0F27                     	;# 
  3286  0F28                     	;# 
  3287  0F29                     	;# 
  3288  0F2A                     	;# 
  3289  0F2B                     	;# 
  3290  0F2C                     	;# 
  3291  0F2D                     	;# 
  3292  0F2E                     	;# 
  3293  0F2F                     	;# 
  3294  0F30                     	;# 
  3295  0F31                     	;# 
  3296  0F32                     	;# 
  3297  0F33                     	;# 
  3298  0F34                     	;# 
  3299  0F35                     	;# 
  3300  0F36                     	;# 
  3301  0F37                     	;# 
  3302  0FE4                     	;# 
  3303  0FE5                     	;# 
  3304  0FE6                     	;# 
  3305  0FE7                     	;# 
  3306  0FE8                     	;# 
  3307  0FE9                     	;# 
  3308  0FEA                     	;# 
  3309  0FEB                     	;# 
  3310  0FED                     	;# 
  3311  0FEE                     	;# 
  3312  0FEF                     	;# 
  3313  0000                     	;# 
  3314  0001                     	;# 
  3315  0002                     	;# 
  3316  0003                     	;# 
  3317  0004                     	;# 
  3318  0005                     	;# 
  3319  0006                     	;# 
  3320  0007                     	;# 
  3321  0008                     	;# 
  3322  0009                     	;# 
  3323  000A                     	;# 
  3324  000B                     	;# 
  3325  000C                     	;# 
  3326  000D                     	;# 
  3327  000E                     	;# 
  3328  0010                     	;# 
  3329  0011                     	;# 
  3330  0012                     	;# 
  3331  0013                     	;# 
  3332  0014                     	;# 
  3333  0015                     	;# 
  3334  0015                     	;# 
  3335  0016                     	;# 
  3336  0016                     	;# 
  3337  0017                     	;# 
  3338  0018                     	;# 
  3339  0019                     	;# 
  3340  0019                     	;# 
  3341  001A                     	;# 
  3342  001B                     	;# 
  3343  001C                     	;# 
  3344  001D                     	;# 
  3345  001E                     	;# 
  3346  001F                     	;# 
  3347  008C                     	;# 
  3348  008D                     	;# 
  3349  008E                     	;# 
  3350  0090                     	;# 
  3351  0091                     	;# 
  3352  0092                     	;# 
  3353  0093                     	;# 
  3354  0094                     	;# 
  3355  0097                     	;# 
  3356  009B                     	;# 
  3357  009B                     	;# 
  3358  009C                     	;# 
  3359  009D                     	;# 
  3360  009E                     	;# 
  3361  009F                     	;# 
  3362  010C                     	;# 
  3363  010D                     	;# 
  3364  010E                     	;# 
  3365  0111                     	;# 
  3366  0112                     	;# 
  3367  0113                     	;# 
  3368  0114                     	;# 
  3369  0115                     	;# 
  3370  0116                     	;# 
  3371  0117                     	;# 
  3372  0118                     	;# 
  3373  0119                     	;# 
  3374  018C                     	;# 
  3375  018D                     	;# 
  3376  018E                     	;# 
  3377  0197                     	;# 
  3378  0199                     	;# 
  3379  0199                     	;# 
  3380  0199                     	;# 
  3381  019A                     	;# 
  3382  019A                     	;# 
  3383  019A                     	;# 
  3384  019B                     	;# 
  3385  019B                     	;# 
  3386  019B                     	;# 
  3387  019B                     	;# 
  3388  019B                     	;# 
  3389  019C                     	;# 
  3390  019C                     	;# 
  3391  019C                     	;# 
  3392  019D                     	;# 
  3393  019D                     	;# 
  3394  019D                     	;# 
  3395  019E                     	;# 
  3396  019E                     	;# 
  3397  019E                     	;# 
  3398  019F                     	;# 
  3399  019F                     	;# 
  3400  019F                     	;# 
  3401  019F                     	;# 
  3402  019F                     	;# 
  3403  020C                     	;# 
  3404  020D                     	;# 
  3405  020E                     	;# 
  3406  0211                     	;# 
  3407  0211                     	;# 
  3408  0212                     	;# 
  3409  0212                     	;# 
  3410  0213                     	;# 
  3411  0213                     	;# 
  3412  0214                     	;# 
  3413  0214                     	;# 
  3414  0215                     	;# 
  3415  0215                     	;# 
  3416  0215                     	;# 
  3417  0215                     	;# 
  3418  0216                     	;# 
  3419  0216                     	;# 
  3420  0217                     	;# 
  3421  0217                     	;# 
  3422  0219                     	;# 
  3423  021A                     	;# 
  3424  021B                     	;# 
  3425  021C                     	;# 
  3426  021D                     	;# 
  3427  021D                     	;# 
  3428  021E                     	;# 
  3429  021F                     	;# 
  3430  028C                     	;# 
  3431  028D                     	;# 
  3432  028E                     	;# 
  3433  0291                     	;# 
  3434  0291                     	;# 
  3435  0292                     	;# 
  3436  0293                     	;# 
  3437  0294                     	;# 
  3438  0295                     	;# 
  3439  0295                     	;# 
  3440  0296                     	;# 
  3441  0297                     	;# 
  3442  0298                     	;# 
  3443  029F                     	;# 
  3444  030C                     	;# 
  3445  030D                     	;# 
  3446  030E                     	;# 
  3447  0311                     	;# 
  3448  0311                     	;# 
  3449  0312                     	;# 
  3450  0313                     	;# 
  3451  0314                     	;# 
  3452  0315                     	;# 
  3453  0315                     	;# 
  3454  0316                     	;# 
  3455  0317                     	;# 
  3456  0318                     	;# 
  3457  038C                     	;# 
  3458  038D                     	;# 
  3459  038E                     	;# 
  3460  0391                     	;# 
  3461  0392                     	;# 
  3462  0393                     	;# 
  3463  0394                     	;# 
  3464  0395                     	;# 
  3465  0396                     	;# 
  3466  0397                     	;# 
  3467  0398                     	;# 
  3468  0399                     	;# 
  3469  039A                     	;# 
  3470  039C                     	;# 
  3471  039D                     	;# 
  3472  039E                     	;# 
  3473  039F                     	;# 
  3474  0411                     	;# 
  3475  0411                     	;# 
  3476  0412                     	;# 
  3477  0413                     	;# 
  3478  0414                     	;# 
  3479  0415                     	;# 
  3480  0416                     	;# 
  3481  0417                     	;# 
  3482  0418                     	;# 
  3483  0418                     	;# 
  3484  0419                     	;# 
  3485  041A                     	;# 
  3486  041B                     	;# 
  3487  041C                     	;# 
  3488  041D                     	;# 
  3489  041E                     	;# 
  3490  041F                     	;# 
  3491  0498                     	;# 
  3492  0498                     	;# 
  3493  0499                     	;# 
  3494  049A                     	;# 
  3495  049B                     	;# 
  3496  049B                     	;# 
  3497  049C                     	;# 
  3498  049D                     	;# 
  3499  049E                     	;# 
  3500  049F                     	;# 
  3501  0617                     	;# 
  3502  0618                     	;# 
  3503  0619                     	;# 
  3504  0619                     	;# 
  3505  061A                     	;# 
  3506  061B                     	;# 
  3507  061C                     	;# 
  3508  061C                     	;# 
  3509  061F                     	;# 
  3510  0691                     	;# 
  3511  0692                     	;# 
  3512  0693                     	;# 
  3513  0694                     	;# 
  3514  0695                     	;# 
  3515  0696                     	;# 
  3516  0697                     	;# 
  3517  0698                     	;# 
  3518  0699                     	;# 
  3519  0711                     	;# 
  3520  0712                     	;# 
  3521  0713                     	;# 
  3522  0714                     	;# 
  3523  0715                     	;# 
  3524  0716                     	;# 
  3525  0717                     	;# 
  3526  0718                     	;# 
  3527  0719                     	;# 
  3528  0891                     	;# 
  3529  0891                     	;# 
  3530  0891                     	;# 
  3531  0891                     	;# 
  3532  0891                     	;# 
  3533  0891                     	;# 
  3534  0892                     	;# 
  3535  0892                     	;# 
  3536  0892                     	;# 
  3537  0893                     	;# 
  3538  0893                     	;# 
  3539  0893                     	;# 
  3540  0893                     	;# 
  3541  0893                     	;# 
  3542  0893                     	;# 
  3543  0894                     	;# 
  3544  0894                     	;# 
  3545  0894                     	;# 
  3546  0895                     	;# 
  3547  0895                     	;# 
  3548  0895                     	;# 
  3549  0896                     	;# 
  3550  0896                     	;# 
  3551  0896                     	;# 
  3552  089B                     	;# 
  3553  0911                     	;# 
  3554  0912                     	;# 
  3555  0913                     	;# 
  3556  0914                     	;# 
  3557  0915                     	;# 
  3558  0916                     	;# 
  3559  0918                     	;# 
  3560  0919                     	;# 
  3561  091A                     	;# 
  3562  091B                     	;# 
  3563  091C                     	;# 
  3564  091D                     	;# 
  3565  091E                     	;# 
  3566  091F                     	;# 
  3567  0E0F                     	;# 
  3568  0E10                     	;# 
  3569  0E11                     	;# 
  3570  0E12                     	;# 
  3571  0E13                     	;# 
  3572  0E14                     	;# 
  3573  0E15                     	;# 
  3574  0E16                     	;# 
  3575  0E17                     	;# 
  3576  0E18                     	;# 
  3577  0E19                     	;# 
  3578  0E1A                     	;# 
  3579  0E1B                     	;# 
  3580  0E1C                     	;# 
  3581  0E1D                     	;# 
  3582  0E1E                     	;# 
  3583  0E1F                     	;# 
  3584  0E20                     	;# 
  3585  0E21                     	;# 
  3586  0E22                     	;# 
  3587  0E24                     	;# 
  3588  0E25                     	;# 
  3589  0E28                     	;# 
  3590  0E29                     	;# 
  3591  0E2A                     	;# 
  3592  0E2B                     	;# 
  3593  0E2C                     	;# 
  3594  0E2D                     	;# 
  3595  0E2E                     	;# 
  3596  0E2F                     	;# 
  3597  0E90                     	;# 
  3598  0E91                     	;# 
  3599  0E92                     	;# 
  3600  0E94                     	;# 
  3601  0E95                     	;# 
  3602  0E9C                     	;# 
  3603  0E9D                     	;# 
  3604  0E9E                     	;# 
  3605  0E9F                     	;# 
  3606  0EA0                     	;# 
  3607  0EA1                     	;# 
  3608  0EA2                     	;# 
  3609  0EA3                     	;# 
  3610  0EA4                     	;# 
  3611  0EA5                     	;# 
  3612  0EA6                     	;# 
  3613  0EA7                     	;# 
  3614  0F0F                     	;# 
  3615  0F10                     	;# 
  3616  0F11                     	;# 
  3617  0F12                     	;# 
  3618  0F13                     	;# 
  3619  0F14                     	;# 
  3620  0F15                     	;# 
  3621  0F16                     	;# 
  3622  0F17                     	;# 
  3623  0F18                     	;# 
  3624  0F19                     	;# 
  3625  0F1A                     	;# 
  3626  0F1B                     	;# 
  3627  0F1C                     	;# 
  3628  0F1D                     	;# 
  3629  0F1E                     	;# 
  3630  0F1F                     	;# 
  3631  0F20                     	;# 
  3632  0F21                     	;# 
  3633  0F22                     	;# 
  3634  0F23                     	;# 
  3635  0F24                     	;# 
  3636  0F25                     	;# 
  3637  0F26                     	;# 
  3638  0F27                     	;# 
  3639  0F28                     	;# 
  3640  0F29                     	;# 
  3641  0F2A                     	;# 
  3642  0F2B                     	;# 
  3643  0F2C                     	;# 
  3644  0F2D                     	;# 
  3645  0F2E                     	;# 
  3646  0F2F                     	;# 
  3647  0F30                     	;# 
  3648  0F31                     	;# 
  3649  0F32                     	;# 
  3650  0F33                     	;# 
  3651  0F34                     	;# 
  3652  0F35                     	;# 
  3653  0F36                     	;# 
  3654  0F37                     	;# 
  3655  0FE4                     	;# 
  3656  0FE5                     	;# 
  3657  0FE6                     	;# 
  3658  0FE7                     	;# 
  3659  0FE8                     	;# 
  3660  0FE9                     	;# 
  3661  0FEA                     	;# 
  3662  0FEB                     	;# 
  3663  0FED                     	;# 
  3664  0FEE                     	;# 
  3665  0FEF                     	;# 
  3666  0000                     	;# 
  3667  0001                     	;# 
  3668  0002                     	;# 
  3669  0003                     	;# 
  3670  0004                     	;# 
  3671  0005                     	;# 
  3672  0006                     	;# 
  3673  0007                     	;# 
  3674  0008                     	;# 
  3675  0009                     	;# 
  3676  000A                     	;# 
  3677  000B                     	;# 
  3678  000C                     	;# 
  3679  000D                     	;# 
  3680  000E                     	;# 
  3681  0010                     	;# 
  3682  0011                     	;# 
  3683  0012                     	;# 
  3684  0013                     	;# 
  3685  0014                     	;# 
  3686  0015                     	;# 
  3687  0015                     	;# 
  3688  0016                     	;# 
  3689  0016                     	;# 
  3690  0017                     	;# 
  3691  0018                     	;# 
  3692  0019                     	;# 
  3693  0019                     	;# 
  3694  001A                     	;# 
  3695  001B                     	;# 
  3696  001C                     	;# 
  3697  001D                     	;# 
  3698  001E                     	;# 
  3699  001F                     	;# 
  3700  008C                     	;# 
  3701  008D                     	;# 
  3702  008E                     	;# 
  3703  0090                     	;# 
  3704  0091                     	;# 
  3705  0092                     	;# 
  3706  0093                     	;# 
  3707  0094                     	;# 
  3708  0097                     	;# 
  3709  009B                     	;# 
  3710  009B                     	;# 
  3711  009C                     	;# 
  3712  009D                     	;# 
  3713  009E                     	;# 
  3714  009F                     	;# 
  3715  010C                     	;# 
  3716  010D                     	;# 
  3717  010E                     	;# 
  3718  0111                     	;# 
  3719  0112                     	;# 
  3720  0113                     	;# 
  3721  0114                     	;# 
  3722  0115                     	;# 
  3723  0116                     	;# 
  3724  0117                     	;# 
  3725  0118                     	;# 
  3726  0119                     	;# 
  3727  018C                     	;# 
  3728  018D                     	;# 
  3729  018E                     	;# 
  3730  0197                     	;# 
  3731  0199                     	;# 
  3732  0199                     	;# 
  3733  0199                     	;# 
  3734  019A                     	;# 
  3735  019A                     	;# 
  3736  019A                     	;# 
  3737  019B                     	;# 
  3738  019B                     	;# 
  3739  019B                     	;# 
  3740  019B                     	;# 
  3741  019B                     	;# 
  3742  019C                     	;# 
  3743  019C                     	;# 
  3744  019C                     	;# 
  3745  019D                     	;# 
  3746  019D                     	;# 
  3747  019D                     	;# 
  3748  019E                     	;# 
  3749  019E                     	;# 
  3750  019E                     	;# 
  3751  019F                     	;# 
  3752  019F                     	;# 
  3753  019F                     	;# 
  3754  019F                     	;# 
  3755  019F                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  0211                     	;# 
  3760  0211                     	;# 
  3761  0212                     	;# 
  3762  0212                     	;# 
  3763  0213                     	;# 
  3764  0213                     	;# 
  3765  0214                     	;# 
  3766  0214                     	;# 
  3767  0215                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0216                     	;# 
  3772  0216                     	;# 
  3773  0217                     	;# 
  3774  0217                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021C                     	;# 
  3779  021D                     	;# 
  3780  021D                     	;# 
  3781  021E                     	;# 
  3782  021F                     	;# 
  3783  028C                     	;# 
  3784  028D                     	;# 
  3785  028E                     	;# 
  3786  0291                     	;# 
  3787  0291                     	;# 
  3788  0292                     	;# 
  3789  0293                     	;# 
  3790  0294                     	;# 
  3791  0295                     	;# 
  3792  0295                     	;# 
  3793  0296                     	;# 
  3794  0297                     	;# 
  3795  0298                     	;# 
  3796  029F                     	;# 
  3797  030C                     	;# 
  3798  030D                     	;# 
  3799  030E                     	;# 
  3800  0311                     	;# 
  3801  0311                     	;# 
  3802  0312                     	;# 
  3803  0313                     	;# 
  3804  0314                     	;# 
  3805  0315                     	;# 
  3806  0315                     	;# 
  3807  0316                     	;# 
  3808  0317                     	;# 
  3809  0318                     	;# 
  3810  038C                     	;# 
  3811  038D                     	;# 
  3812  038E                     	;# 
  3813  0391                     	;# 
  3814  0392                     	;# 
  3815  0393                     	;# 
  3816  0394                     	;# 
  3817  0395                     	;# 
  3818  0396                     	;# 
  3819  0397                     	;# 
  3820  0398                     	;# 
  3821  0399                     	;# 
  3822  039A                     	;# 
  3823  039C                     	;# 
  3824  039D                     	;# 
  3825  039E                     	;# 
  3826  039F                     	;# 
  3827  0411                     	;# 
  3828  0411                     	;# 
  3829  0412                     	;# 
  3830  0413                     	;# 
  3831  0414                     	;# 
  3832  0415                     	;# 
  3833  0416                     	;# 
  3834  0417                     	;# 
  3835  0418                     	;# 
  3836  0418                     	;# 
  3837  0419                     	;# 
  3838  041A                     	;# 
  3839  041B                     	;# 
  3840  041C                     	;# 
  3841  041D                     	;# 
  3842  041E                     	;# 
  3843  041F                     	;# 
  3844  0498                     	;# 
  3845  0498                     	;# 
  3846  0499                     	;# 
  3847  049A                     	;# 
  3848  049B                     	;# 
  3849  049B                     	;# 
  3850  049C                     	;# 
  3851  049D                     	;# 
  3852  049E                     	;# 
  3853  049F                     	;# 
  3854  0617                     	;# 
  3855  0618                     	;# 
  3856  0619                     	;# 
  3857  0619                     	;# 
  3858  061A                     	;# 
  3859  061B                     	;# 
  3860  061C                     	;# 
  3861  061C                     	;# 
  3862  061F                     	;# 
  3863  0691                     	;# 
  3864  0692                     	;# 
  3865  0693                     	;# 
  3866  0694                     	;# 
  3867  0695                     	;# 
  3868  0696                     	;# 
  3869  0697                     	;# 
  3870  0698                     	;# 
  3871  0699                     	;# 
  3872  0711                     	;# 
  3873  0712                     	;# 
  3874  0713                     	;# 
  3875  0714                     	;# 
  3876  0715                     	;# 
  3877  0716                     	;# 
  3878  0717                     	;# 
  3879  0718                     	;# 
  3880  0719                     	;# 
  3881  0891                     	;# 
  3882  0891                     	;# 
  3883  0891                     	;# 
  3884  0891                     	;# 
  3885  0891                     	;# 
  3886  0891                     	;# 
  3887  0892                     	;# 
  3888  0892                     	;# 
  3889  0892                     	;# 
  3890  0893                     	;# 
  3891  0893                     	;# 
  3892  0893                     	;# 
  3893  0893                     	;# 
  3894  0893                     	;# 
  3895  0893                     	;# 
  3896  0894                     	;# 
  3897  0894                     	;# 
  3898  0894                     	;# 
  3899  0895                     	;# 
  3900  0895                     	;# 
  3901  0895                     	;# 
  3902  0896                     	;# 
  3903  0896                     	;# 
  3904  0896                     	;# 
  3905  089B                     	;# 
  3906  0911                     	;# 
  3907  0912                     	;# 
  3908  0913                     	;# 
  3909  0914                     	;# 
  3910  0915                     	;# 
  3911  0916                     	;# 
  3912  0918                     	;# 
  3913  0919                     	;# 
  3914  091A                     	;# 
  3915  091B                     	;# 
  3916  091C                     	;# 
  3917  091D                     	;# 
  3918  091E                     	;# 
  3919  091F                     	;# 
  3920  0E0F                     	;# 
  3921  0E10                     	;# 
  3922  0E11                     	;# 
  3923  0E12                     	;# 
  3924  0E13                     	;# 
  3925  0E14                     	;# 
  3926  0E15                     	;# 
  3927  0E16                     	;# 
  3928  0E17                     	;# 
  3929  0E18                     	;# 
  3930  0E19                     	;# 
  3931  0E1A                     	;# 
  3932  0E1B                     	;# 
  3933  0E1C                     	;# 
  3934  0E1D                     	;# 
  3935  0E1E                     	;# 
  3936  0E1F                     	;# 
  3937  0E20                     	;# 
  3938  0E21                     	;# 
  3939  0E22                     	;# 
  3940  0E24                     	;# 
  3941  0E25                     	;# 
  3942  0E28                     	;# 
  3943  0E29                     	;# 
  3944  0E2A                     	;# 
  3945  0E2B                     	;# 
  3946  0E2C                     	;# 
  3947  0E2D                     	;# 
  3948  0E2E                     	;# 
  3949  0E2F                     	;# 
  3950  0E90                     	;# 
  3951  0E91                     	;# 
  3952  0E92                     	;# 
  3953  0E94                     	;# 
  3954  0E95                     	;# 
  3955  0E9C                     	;# 
  3956  0E9D                     	;# 
  3957  0E9E                     	;# 
  3958  0E9F                     	;# 
  3959  0EA0                     	;# 
  3960  0EA1                     	;# 
  3961  0EA2                     	;# 
  3962  0EA3                     	;# 
  3963  0EA4                     	;# 
  3964  0EA5                     	;# 
  3965  0EA6                     	;# 
  3966  0EA7                     	;# 
  3967  0F0F                     	;# 
  3968  0F10                     	;# 
  3969  0F11                     	;# 
  3970  0F12                     	;# 
  3971  0F13                     	;# 
  3972  0F14                     	;# 
  3973  0F15                     	;# 
  3974  0F16                     	;# 
  3975  0F17                     	;# 
  3976  0F18                     	;# 
  3977  0F19                     	;# 
  3978  0F1A                     	;# 
  3979  0F1B                     	;# 
  3980  0F1C                     	;# 
  3981  0F1D                     	;# 
  3982  0F1E                     	;# 
  3983  0F1F                     	;# 
  3984  0F20                     	;# 
  3985  0F21                     	;# 
  3986  0F22                     	;# 
  3987  0F23                     	;# 
  3988  0F24                     	;# 
  3989  0F25                     	;# 
  3990  0F26                     	;# 
  3991  0F27                     	;# 
  3992  0F28                     	;# 
  3993  0F29                     	;# 
  3994  0F2A                     	;# 
  3995  0F2B                     	;# 
  3996  0F2C                     	;# 
  3997  0F2D                     	;# 
  3998  0F2E                     	;# 
  3999  0F2F                     	;# 
  4000  0F30                     	;# 
  4001  0F31                     	;# 
  4002  0F32                     	;# 
  4003  0F33                     	;# 
  4004  0F34                     	;# 
  4005  0F35                     	;# 
  4006  0F36                     	;# 
  4007  0F37                     	;# 
  4008  0FE4                     	;# 
  4009  0FE5                     	;# 
  4010  0FE6                     	;# 
  4011  0FE7                     	;# 
  4012  0FE8                     	;# 
  4013  0FE9                     	;# 
  4014  0FEA                     	;# 
  4015  0FEB                     	;# 
  4016  0FED                     	;# 
  4017  0FEE                     	;# 
  4018  0FEF                     	;# 
  4019  0000                     	;# 
  4020  0001                     	;# 
  4021  0002                     	;# 
  4022  0003                     	;# 
  4023  0004                     	;# 
  4024  0005                     	;# 
  4025  0006                     	;# 
  4026  0007                     	;# 
  4027  0008                     	;# 
  4028  0009                     	;# 
  4029  000A                     	;# 
  4030  000B                     	;# 
  4031  000C                     	;# 
  4032  000D                     	;# 
  4033  000E                     	;# 
  4034  0010                     	;# 
  4035  0011                     	;# 
  4036  0012                     	;# 
  4037  0013                     	;# 
  4038  0014                     	;# 
  4039  0015                     	;# 
  4040  0015                     	;# 
  4041  0016                     	;# 
  4042  0016                     	;# 
  4043  0017                     	;# 
  4044  0018                     	;# 
  4045  0019                     	;# 
  4046  0019                     	;# 
  4047  001A                     	;# 
  4048  001B                     	;# 
  4049  001C                     	;# 
  4050  001D                     	;# 
  4051  001E                     	;# 
  4052  001F                     	;# 
  4053  008C                     	;# 
  4054  008D                     	;# 
  4055  008E                     	;# 
  4056  0090                     	;# 
  4057  0091                     	;# 
  4058  0092                     	;# 
  4059  0093                     	;# 
  4060  0094                     	;# 
  4061  0097                     	;# 
  4062  009B                     	;# 
  4063  009B                     	;# 
  4064  009C                     	;# 
  4065  009D                     	;# 
  4066  009E                     	;# 
  4067  009F                     	;# 
  4068  010C                     	;# 
  4069  010D                     	;# 
  4070  010E                     	;# 
  4071  0111                     	;# 
  4072  0112                     	;# 
  4073  0113                     	;# 
  4074  0114                     	;# 
  4075  0115                     	;# 
  4076  0116                     	;# 
  4077  0117                     	;# 
  4078  0118                     	;# 
  4079  0119                     	;# 
  4080  018C                     	;# 
  4081  018D                     	;# 
  4082  018E                     	;# 
  4083  0197                     	;# 
  4084  0199                     	;# 
  4085  0199                     	;# 
  4086  0199                     	;# 
  4087  019A                     	;# 
  4088  019A                     	;# 
  4089  019A                     	;# 
  4090  019B                     	;# 
  4091  019B                     	;# 
  4092  019B                     	;# 
  4093  019B                     	;# 
  4094  019B                     	;# 
  4095  019C                     	;# 
  4096  019C                     	;# 
  4097  019C                     	;# 
  4098  019D                     	;# 
  4099  019D                     	;# 
  4100  019D                     	;# 
  4101  019E                     	;# 
  4102  019E                     	;# 
  4103  019E                     	;# 
  4104  019F                     	;# 
  4105  019F                     	;# 
  4106  019F                     	;# 
  4107  019F                     	;# 
  4108  019F                     	;# 
  4109  020C                     	;# 
  4110  020D                     	;# 
  4111  020E                     	;# 
  4112  0211                     	;# 
  4113  0211                     	;# 
  4114  0212                     	;# 
  4115  0212                     	;# 
  4116  0213                     	;# 
  4117  0213                     	;# 
  4118  0214                     	;# 
  4119  0214                     	;# 
  4120  0215                     	;# 
  4121  0215                     	;# 
  4122  0215                     	;# 
  4123  0215                     	;# 
  4124  0216                     	;# 
  4125  0216                     	;# 
  4126  0217                     	;# 
  4127  0217                     	;# 
  4128  0219                     	;# 
  4129  021A                     	;# 
  4130  021B                     	;# 
  4131  021C                     	;# 
  4132  021D                     	;# 
  4133  021D                     	;# 
  4134  021E                     	;# 
  4135  021F                     	;# 
  4136  028C                     	;# 
  4137  028D                     	;# 
  4138  028E                     	;# 
  4139  0291                     	;# 
  4140  0291                     	;# 
  4141  0292                     	;# 
  4142  0293                     	;# 
  4143  0294                     	;# 
  4144  0295                     	;# 
  4145  0295                     	;# 
  4146  0296                     	;# 
  4147  0297                     	;# 
  4148  0298                     	;# 
  4149  029F                     	;# 
  4150  030C                     	;# 
  4151  030D                     	;# 
  4152  030E                     	;# 
  4153  0311                     	;# 
  4154  0311                     	;# 
  4155  0312                     	;# 
  4156  0313                     	;# 
  4157  0314                     	;# 
  4158  0315                     	;# 
  4159  0315                     	;# 
  4160  0316                     	;# 
  4161  0317                     	;# 
  4162  0318                     	;# 
  4163  038C                     	;# 
  4164  038D                     	;# 
  4165  038E                     	;# 
  4166  0391                     	;# 
  4167  0392                     	;# 
  4168  0393                     	;# 
  4169  0394                     	;# 
  4170  0395                     	;# 
  4171  0396                     	;# 
  4172  0397                     	;# 
  4173  0398                     	;# 
  4174  0399                     	;# 
  4175  039A                     	;# 
  4176  039C                     	;# 
  4177  039D                     	;# 
  4178  039E                     	;# 
  4179  039F                     	;# 
  4180  0411                     	;# 
  4181  0411                     	;# 
  4182  0412                     	;# 
  4183  0413                     	;# 
  4184  0414                     	;# 
  4185  0415                     	;# 
  4186  0416                     	;# 
  4187  0417                     	;# 
  4188  0418                     	;# 
  4189  0418                     	;# 
  4190  0419                     	;# 
  4191  041A                     	;# 
  4192  041B                     	;# 
  4193  041C                     	;# 
  4194  041D                     	;# 
  4195  041E                     	;# 
  4196  041F                     	;# 
  4197  0498                     	;# 
  4198  0498                     	;# 
  4199  0499                     	;# 
  4200  049A                     	;# 
  4201  049B                     	;# 
  4202  049B                     	;# 
  4203  049C                     	;# 
  4204  049D                     	;# 
  4205  049E                     	;# 
  4206  049F                     	;# 
  4207  0617                     	;# 
  4208  0618                     	;# 
  4209  0619                     	;# 
  4210  0619                     	;# 
  4211  061A                     	;# 
  4212  061B                     	;# 
  4213  061C                     	;# 
  4214  061C                     	;# 
  4215  061F                     	;# 
  4216  0691                     	;# 
  4217  0692                     	;# 
  4218  0693                     	;# 
  4219  0694                     	;# 
  4220  0695                     	;# 
  4221  0696                     	;# 
  4222  0697                     	;# 
  4223  0698                     	;# 
  4224  0699                     	;# 
  4225  0711                     	;# 
  4226  0712                     	;# 
  4227  0713                     	;# 
  4228  0714                     	;# 
  4229  0715                     	;# 
  4230  0716                     	;# 
  4231  0717                     	;# 
  4232  0718                     	;# 
  4233  0719                     	;# 
  4234  0891                     	;# 
  4235  0891                     	;# 
  4236  0891                     	;# 
  4237  0891                     	;# 
  4238  0891                     	;# 
  4239  0891                     	;# 
  4240  0892                     	;# 
  4241  0892                     	;# 
  4242  0892                     	;# 
  4243  0893                     	;# 
  4244  0893                     	;# 
  4245  0893                     	;# 
  4246  0893                     	;# 
  4247  0893                     	;# 
  4248  0893                     	;# 
  4249  0894                     	;# 
  4250  0894                     	;# 
  4251  0894                     	;# 
  4252  0895                     	;# 
  4253  0895                     	;# 
  4254  0895                     	;# 
  4255  0896                     	;# 
  4256  0896                     	;# 
  4257  0896                     	;# 
  4258  089B                     	;# 
  4259  0911                     	;# 
  4260  0912                     	;# 
  4261  0913                     	;# 
  4262  0914                     	;# 
  4263  0915                     	;# 
  4264  0916                     	;# 
  4265  0918                     	;# 
  4266  0919                     	;# 
  4267  091A                     	;# 
  4268  091B                     	;# 
  4269  091C                     	;# 
  4270  091D                     	;# 
  4271  091E                     	;# 
  4272  091F                     	;# 
  4273  0E0F                     	;# 
  4274  0E10                     	;# 
  4275  0E11                     	;# 
  4276  0E12                     	;# 
  4277  0E13                     	;# 
  4278  0E14                     	;# 
  4279  0E15                     	;# 
  4280  0E16                     	;# 
  4281  0E17                     	;# 
  4282  0E18                     	;# 
  4283  0E19                     	;# 
  4284  0E1A                     	;# 
  4285  0E1B                     	;# 
  4286  0E1C                     	;# 
  4287  0E1D                     	;# 
  4288  0E1E                     	;# 
  4289  0E1F                     	;# 
  4290  0E20                     	;# 
  4291  0E21                     	;# 
  4292  0E22                     	;# 
  4293  0E24                     	;# 
  4294  0E25                     	;# 
  4295  0E28                     	;# 
  4296  0E29                     	;# 
  4297  0E2A                     	;# 
  4298  0E2B                     	;# 
  4299  0E2C                     	;# 
  4300  0E2D                     	;# 
  4301  0E2E                     	;# 
  4302  0E2F                     	;# 
  4303  0E90                     	;# 
  4304  0E91                     	;# 
  4305  0E92                     	;# 
  4306  0E94                     	;# 
  4307  0E95                     	;# 
  4308  0E9C                     	;# 
  4309  0E9D                     	;# 
  4310  0E9E                     	;# 
  4311  0E9F                     	;# 
  4312  0EA0                     	;# 
  4313  0EA1                     	;# 
  4314  0EA2                     	;# 
  4315  0EA3                     	;# 
  4316  0EA4                     	;# 
  4317  0EA5                     	;# 
  4318  0EA6                     	;# 
  4319  0EA7                     	;# 
  4320  0F0F                     	;# 
  4321  0F10                     	;# 
  4322  0F11                     	;# 
  4323  0F12                     	;# 
  4324  0F13                     	;# 
  4325  0F14                     	;# 
  4326  0F15                     	;# 
  4327  0F16                     	;# 
  4328  0F17                     	;# 
  4329  0F18                     	;# 
  4330  0F19                     	;# 
  4331  0F1A                     	;# 
  4332  0F1B                     	;# 
  4333  0F1C                     	;# 
  4334  0F1D                     	;# 
  4335  0F1E                     	;# 
  4336  0F1F                     	;# 
  4337  0F20                     	;# 
  4338  0F21                     	;# 
  4339  0F22                     	;# 
  4340  0F23                     	;# 
  4341  0F24                     	;# 
  4342  0F25                     	;# 
  4343  0F26                     	;# 
  4344  0F27                     	;# 
  4345  0F28                     	;# 
  4346  0F29                     	;# 
  4347  0F2A                     	;# 
  4348  0F2B                     	;# 
  4349  0F2C                     	;# 
  4350  0F2D                     	;# 
  4351  0F2E                     	;# 
  4352  0F2F                     	;# 
  4353  0F30                     	;# 
  4354  0F31                     	;# 
  4355  0F32                     	;# 
  4356  0F33                     	;# 
  4357  0F34                     	;# 
  4358  0F35                     	;# 
  4359  0F36                     	;# 
  4360  0F37                     	;# 
  4361  0FE4                     	;# 
  4362  0FE5                     	;# 
  4363  0FE6                     	;# 
  4364  0FE7                     	;# 
  4365  0FE8                     	;# 
  4366  0FE9                     	;# 
  4367  0FEA                     	;# 
  4368  0FEB                     	;# 
  4369  0FED                     	;# 
  4370  0FEE                     	;# 
  4371  0FEF                     	;# 
  4372  0000                     	;# 
  4373  0001                     	;# 
  4374  0002                     	;# 
  4375  0003                     	;# 
  4376  0004                     	;# 
  4377  0005                     	;# 
  4378  0006                     	;# 
  4379  0007                     	;# 
  4380  0008                     	;# 
  4381  0009                     	;# 
  4382  000A                     	;# 
  4383  000B                     	;# 
  4384  000C                     	;# 
  4385  000D                     	;# 
  4386  000E                     	;# 
  4387  0010                     	;# 
  4388  0011                     	;# 
  4389  0012                     	;# 
  4390  0013                     	;# 
  4391  0014                     	;# 
  4392  0015                     	;# 
  4393  0015                     	;# 
  4394  0016                     	;# 
  4395  0016                     	;# 
  4396  0017                     	;# 
  4397  0018                     	;# 
  4398  0019                     	;# 
  4399  0019                     	;# 
  4400  001A                     	;# 
  4401  001B                     	;# 
  4402  001C                     	;# 
  4403  001D                     	;# 
  4404  001E                     	;# 
  4405  001F                     	;# 
  4406  008C                     	;# 
  4407  008D                     	;# 
  4408  008E                     	;# 
  4409  0090                     	;# 
  4410  0091                     	;# 
  4411  0092                     	;# 
  4412  0093                     	;# 
  4413  0094                     	;# 
  4414  0097                     	;# 
  4415  009B                     	;# 
  4416  009B                     	;# 
  4417  009C                     	;# 
  4418  009D                     	;# 
  4419  009E                     	;# 
  4420  009F                     	;# 
  4421  010C                     	;# 
  4422  010D                     	;# 
  4423  010E                     	;# 
  4424  0111                     	;# 
  4425  0112                     	;# 
  4426  0113                     	;# 
  4427  0114                     	;# 
  4428  0115                     	;# 
  4429  0116                     	;# 
  4430  0117                     	;# 
  4431  0118                     	;# 
  4432  0119                     	;# 
  4433  018C                     	;# 
  4434  018D                     	;# 
  4435  018E                     	;# 
  4436  0197                     	;# 
  4437  0199                     	;# 
  4438  0199                     	;# 
  4439  0199                     	;# 
  4440  019A                     	;# 
  4441  019A                     	;# 
  4442  019A                     	;# 
  4443  019B                     	;# 
  4444  019B                     	;# 
  4445  019B                     	;# 
  4446  019B                     	;# 
  4447  019B                     	;# 
  4448  019C                     	;# 
  4449  019C                     	;# 
  4450  019C                     	;# 
  4451  019D                     	;# 
  4452  019D                     	;# 
  4453  019D                     	;# 
  4454  019E                     	;# 
  4455  019E                     	;# 
  4456  019E                     	;# 
  4457  019F                     	;# 
  4458  019F                     	;# 
  4459  019F                     	;# 
  4460  019F                     	;# 
  4461  019F                     	;# 
  4462  020C                     	;# 
  4463  020D                     	;# 
  4464  020E                     	;# 
  4465  0211                     	;# 
  4466  0211                     	;# 
  4467  0212                     	;# 
  4468  0212                     	;# 
  4469  0213                     	;# 
  4470  0213                     	;# 
  4471  0214                     	;# 
  4472  0214                     	;# 
  4473  0215                     	;# 
  4474  0215                     	;# 
  4475  0215                     	;# 
  4476  0215                     	;# 
  4477  0216                     	;# 
  4478  0216                     	;# 
  4479  0217                     	;# 
  4480  0217                     	;# 
  4481  0219                     	;# 
  4482  021A                     	;# 
  4483  021B                     	;# 
  4484  021C                     	;# 
  4485  021D                     	;# 
  4486  021D                     	;# 
  4487  021E                     	;# 
  4488  021F                     	;# 
  4489  028C                     	;# 
  4490  028D                     	;# 
  4491  028E                     	;# 
  4492  0291                     	;# 
  4493  0291                     	;# 
  4494  0292                     	;# 
  4495  0293                     	;# 
  4496  0294                     	;# 
  4497  0295                     	;# 
  4498  0295                     	;# 
  4499  0296                     	;# 
  4500  0297                     	;# 
  4501  0298                     	;# 
  4502  029F                     	;# 
  4503  030C                     	;# 
  4504  030D                     	;# 
  4505  030E                     	;# 
  4506  0311                     	;# 
  4507  0311                     	;# 
  4508  0312                     	;# 
  4509  0313                     	;# 
  4510  0314                     	;# 
  4511  0315                     	;# 
  4512  0315                     	;# 
  4513  0316                     	;# 
  4514  0317                     	;# 
  4515  0318                     	;# 
  4516  038C                     	;# 
  4517  038D                     	;# 
  4518  038E                     	;# 
  4519  0391                     	;# 
  4520  0392                     	;# 
  4521  0393                     	;# 
  4522  0394                     	;# 
  4523  0395                     	;# 
  4524  0396                     	;# 
  4525  0397                     	;# 
  4526  0398                     	;# 
  4527  0399                     	;# 
  4528  039A                     	;# 
  4529  039C                     	;# 
  4530  039D                     	;# 
  4531  039E                     	;# 
  4532  039F                     	;# 
  4533  0411                     	;# 
  4534  0411                     	;# 
  4535  0412                     	;# 
  4536  0413                     	;# 
  4537  0414                     	;# 
  4538  0415                     	;# 
  4539  0416                     	;# 
  4540  0417                     	;# 
  4541  0418                     	;# 
  4542  0418                     	;# 
  4543  0419                     	;# 
  4544  041A                     	;# 
  4545  041B                     	;# 
  4546  041C                     	;# 
  4547  041D                     	;# 
  4548  041E                     	;# 
  4549  041F                     	;# 
  4550  0498                     	;# 
  4551  0498                     	;# 
  4552  0499                     	;# 
  4553  049A                     	;# 
  4554  049B                     	;# 
  4555  049B                     	;# 
  4556  049C                     	;# 
  4557  049D                     	;# 
  4558  049E                     	;# 
  4559  049F                     	;# 
  4560  0617                     	;# 
  4561  0618                     	;# 
  4562  0619                     	;# 
  4563  0619                     	;# 
  4564  061A                     	;# 
  4565  061B                     	;# 
  4566  061C                     	;# 
  4567  061C                     	;# 
  4568  061F                     	;# 
  4569  0691                     	;# 
  4570  0692                     	;# 
  4571  0693                     	;# 
  4572  0694                     	;# 
  4573  0695                     	;# 
  4574  0696                     	;# 
  4575  0697                     	;# 
  4576  0698                     	;# 
  4577  0699                     	;# 
  4578  0711                     	;# 
  4579  0712                     	;# 
  4580  0713                     	;# 
  4581  0714                     	;# 
  4582  0715                     	;# 
  4583  0716                     	;# 
  4584  0717                     	;# 
  4585  0718                     	;# 
  4586  0719                     	;# 
  4587  0891                     	;# 
  4588  0891                     	;# 
  4589  0891                     	;# 
  4590  0891                     	;# 
  4591  0891                     	;# 
  4592  0891                     	;# 
  4593  0892                     	;# 
  4594  0892                     	;# 
  4595  0892                     	;# 
  4596  0893                     	;# 
  4597  0893                     	;# 
  4598  0893                     	;# 
  4599  0893                     	;# 
  4600  0893                     	;# 
  4601  0893                     	;# 
  4602  0894                     	;# 
  4603  0894                     	;# 
  4604  0894                     	;# 
  4605  0895                     	;# 
  4606  0895                     	;# 
  4607  0895                     	;# 
  4608  0896                     	;# 
  4609  0896                     	;# 
  4610  0896                     	;# 
  4611  089B                     	;# 
  4612  0911                     	;# 
  4613  0912                     	;# 
  4614  0913                     	;# 
  4615  0914                     	;# 
  4616  0915                     	;# 
  4617  0916                     	;# 
  4618  0918                     	;# 
  4619  0919                     	;# 
  4620  091A                     	;# 
  4621  091B                     	;# 
  4622  091C                     	;# 
  4623  091D                     	;# 
  4624  091E                     	;# 
  4625  091F                     	;# 
  4626  0E0F                     	;# 
  4627  0E10                     	;# 
  4628  0E11                     	;# 
  4629  0E12                     	;# 
  4630  0E13                     	;# 
  4631  0E14                     	;# 
  4632  0E15                     	;# 
  4633  0E16                     	;# 
  4634  0E17                     	;# 
  4635  0E18                     	;# 
  4636  0E19                     	;# 
  4637  0E1A                     	;# 
  4638  0E1B                     	;# 
  4639  0E1C                     	;# 
  4640  0E1D                     	;# 
  4641  0E1E                     	;# 
  4642  0E1F                     	;# 
  4643  0E20                     	;# 
  4644  0E21                     	;# 
  4645  0E22                     	;# 
  4646  0E24                     	;# 
  4647  0E25                     	;# 
  4648  0E28                     	;# 
  4649  0E29                     	;# 
  4650  0E2A                     	;# 
  4651  0E2B                     	;# 
  4652  0E2C                     	;# 
  4653  0E2D                     	;# 
  4654  0E2E                     	;# 
  4655  0E2F                     	;# 
  4656  0E90                     	;# 
  4657  0E91                     	;# 
  4658  0E92                     	;# 
  4659  0E94                     	;# 
  4660  0E95                     	;# 
  4661  0E9C                     	;# 
  4662  0E9D                     	;# 
  4663  0E9E                     	;# 
  4664  0E9F                     	;# 
  4665  0EA0                     	;# 
  4666  0EA1                     	;# 
  4667  0EA2                     	;# 
  4668  0EA3                     	;# 
  4669  0EA4                     	;# 
  4670  0EA5                     	;# 
  4671  0EA6                     	;# 
  4672  0EA7                     	;# 
  4673  0F0F                     	;# 
  4674  0F10                     	;# 
  4675  0F11                     	;# 
  4676  0F12                     	;# 
  4677  0F13                     	;# 
  4678  0F14                     	;# 
  4679  0F15                     	;# 
  4680  0F16                     	;# 
  4681  0F17                     	;# 
  4682  0F18                     	;# 
  4683  0F19                     	;# 
  4684  0F1A                     	;# 
  4685  0F1B                     	;# 
  4686  0F1C                     	;# 
  4687  0F1D                     	;# 
  4688  0F1E                     	;# 
  4689  0F1F                     	;# 
  4690  0F20                     	;# 
  4691  0F21                     	;# 
  4692  0F22                     	;# 
  4693  0F23                     	;# 
  4694  0F24                     	;# 
  4695  0F25                     	;# 
  4696  0F26                     	;# 
  4697  0F27                     	;# 
  4698  0F28                     	;# 
  4699  0F29                     	;# 
  4700  0F2A                     	;# 
  4701  0F2B                     	;# 
  4702  0F2C                     	;# 
  4703  0F2D                     	;# 
  4704  0F2E                     	;# 
  4705  0F2F                     	;# 
  4706  0F30                     	;# 
  4707  0F31                     	;# 
  4708  0F32                     	;# 
  4709  0F33                     	;# 
  4710  0F34                     	;# 
  4711  0F35                     	;# 
  4712  0F36                     	;# 
  4713  0F37                     	;# 
  4714  0FE4                     	;# 
  4715  0FE5                     	;# 
  4716  0FE6                     	;# 
  4717  0FE7                     	;# 
  4718  0FE8                     	;# 
  4719  0FE9                     	;# 
  4720  0FEA                     	;# 
  4721  0FEB                     	;# 
  4722  0FED                     	;# 
  4723  0FEE                     	;# 
  4724  0FEF                     	;# 
  4725                           
  4726                           	psect	idataBANK4
  4727  10D3                     __pidataBANK4:	
  4728                           
  4729                           ;initializer for _Default_PWM_Table
  4730  10D3  34D8               	retlw	-40
  4731  10D4  34E2               	retlw	-30
  4732  10D5  34EC               	retlw	-20
  4733  10D6  34F6               	retlw	-10
  4734  10D7  3400               	retlw	0
  4735  10D8  3464               	retlw	100
  4736  10D9  3450               	retlw	80
  4737  10DA  343C               	retlw	60
  4738  10DB  3428               	retlw	40
  4739  10DC  3414               	retlw	20
  4740  10DD  3400               	retlw	0
  4741  1FFF                     _NVFlag_absaddr	set	8191
  4742  1FFF                     _NVFlag_absaddr	set	8191
  4743                           
  4744                           	psect	_NVFlag_text
  4745  1FFF                     __p_NVFlag_text:	
  4746  1FFF                     _NVFlag:	
  4747  1FFF  3455               	retlw	85
  4748  2000                     __end_of_NVFlag:	
  4749                           
  4750                           	psect	nvBANK3
  4751  01DF                     __pnvBANK3:	
  4752  01DF                     _TMR0_InterruptHandler:	
  4753  01DF                     	ds	2
  4754  01E1                     _EUSART_ErrorHandler:	
  4755  01E1                     	ds	2
  4756  01E3                     _EUSART_OverrunErrorHandler:	
  4757  01E3                     	ds	2
  4758  01E5                     _EUSART_FramingErrorHandler:	
  4759  01E5                     	ds	2
  4760  01E7                     _EUSART_RxDefaultInterruptHandler:	
  4761  01E7                     	ds	2
  4762  01E9                     _EUSART_TxDefaultInterruptHandler:	
  4763  01E9                     	ds	2
  4764  01EB                     _eusartTxBufferRemaining:	
  4765  01EB                     	ds	1
  4766  000E                     _PORTCbits	set	14
  4767  000C                     _PORTAbits	set	12
  4768  0017                     _T0CON0bits	set	23
  4769  0017                     _T0CON0	set	23
  4770  0015                     _TMR0L	set	21
  4771  0016                     _TMR0H	set	22
  4772  0018                     _T0CON1	set	24
  4773  001F                     _T2CONbits	set	31
  4774  001F                     _T2CON	set	31
  4775  001D                     _TMR2	set	29
  4776  001E                     _PR2	set	30
  4777  0011                     _PIR1bits	set	17
  4778  000B                     _INTCONbits	set	11
  4779  0010                     _PIR0bits	set	16
  4780  0090                     _PIE0bits	set	144
  4781  0091                     _PIE1bits	set	145
  4782  009D                     _ADCON0bits	set	157
  4783  009C                     _ADRESH	set	156
  4784  009B                     _ADRESL	set	155
  4785  009F                     _ADACT	set	159
  4786  009E                     _ADCON1	set	158
  4787  009D                     _ADCON0	set	157
  4788  008E                     _TRISC	set	142
  4789  008D                     _TRISB	set	141
  4790  008C                     _TRISA	set	140
  4791  0097                     _WDTCON	set	151
  4792  010E                     _LATC	set	270
  4793  010D                     _LATB	set	269
  4794  010C                     _LATA	set	268
  4795  0199                     _RC1REG	set	409
  4796  019D                     _RC1STAbits	set	413
  4797  019A                     _TX1REG	set	410
  4798  019E                     _TX1STAbits	set	414
  4799  019C                     _SP1BRGH	set	412
  4800  019B                     _SP1BRGL	set	411
  4801  019E                     _TX1STA	set	414
  4802  019D                     _RC1STA	set	413
  4803  019F                     _BAUD1CON	set	415
  4804  018C                     _ANSELA	set	396
  4805  018D                     _ANSELB	set	397
  4806  018E                     _ANSELC	set	398
  4807  0211                     _SSP1BUF	set	529
  4808  0216                     _SSP1CON2bits	set	534
  4809  0215                     _SSP1CON1bits	set	533
  4810  0212                     _SSP1ADD	set	530
  4811  0217                     _SSP1CON3	set	535
  4812  0215                     _SSP1CON1	set	533
  4813  0214                     _SSP1STAT	set	532
  4814  020E                     _WPUC	set	526
  4815  020C                     _WPUA	set	524
  4816  020D                     _WPUB	set	525
  4817  028E                     _ODCONC	set	654
  4818  028D                     _ODCONB	set	653
  4819  028C                     _ODCONA	set	652
  4820  030E                     _SLRCONC	set	782
  4821  030D                     _SLRCONB	set	781
  4822  030C                     _SLRCONA	set	780
  4823  038E                     _INLVLC	set	910
  4824  038D                     _INLVLB	set	909
  4825  038C                     _INLVLA	set	908
  4826  061A                     _PWM6DCL	set	1562
  4827  061B                     _PWM6DCH	set	1563
  4828  061C                     _PWM6CON	set	1564
  4829  061F                     _PWMTMRSbits	set	1567
  4830  0617                     _PWM5DCL	set	1559
  4831  0618                     _PWM5DCH	set	1560
  4832  0619                     _PWM5CON	set	1561
  4833  0895                     _NVMCON1	set	2197
  4834  0896                     _NVMCON2	set	2198
  4835  0893                     _NVMDATL	set	2195
  4836  0894                     _NVMDATH	set	2196
  4837  0895                     _NVMCON1bits	set	2197
  4838  0892                     _NVMADRH	set	2194
  4839  0891                     _NVMADRL	set	2193
  4840  0916                     _PMD5	set	2326
  4841  0915                     _PMD4	set	2325
  4842  0914                     _PMD3	set	2324
  4843  0913                     _PMD2	set	2323
  4844  0912                     _PMD1	set	2322
  4845  0911                     _PMD0	set	2321
  4846  091E                     _OSCTUNE	set	2334
  4847  091F                     _OSCFRQ	set	2335
  4848  091D                     _OSCEN	set	2333
  4849  091B                     _OSCCON3	set	2331
  4850  0919                     _OSCCON1	set	2329
  4851  0E21                     _SSP1DATPPS	set	3617
  4852  0E20                     _SSP1CLKPPS	set	3616
  4853  0E24                     _RXPPS	set	3620
  4854  0EA7                     _RC7PPS	set	3751
  4855  0EA6                     _RC6PPS	set	3750
  4856  0E95                     _RA5PPS	set	3733
  4857  0E9F                     _RB7PPS	set	3743
  4858  0E94                     _RA4PPS	set	3732
  4859                           
  4860                           	psect	stringtext1
  4861  1800                     __pstringtext1:	
  4862  1800                     STR_2:	
  4863  1800  3446               	retlw	70	;'F'
  4864  1801  3461               	retlw	97	;'a'
  4865  1802  346E               	retlw	110	;'n'
  4866  1803  345F               	retlw	95	;'_'
  4867  1804  3450               	retlw	80	;'P'
  4868  1805  3457               	retlw	87	;'W'
  4869  1806  344D               	retlw	77	;'M'
  4870  1807  345F               	retlw	95	;'_'
  4871  1808  3456               	retlw	86	;'V'
  4872  1809  3461               	retlw	97	;'a'
  4873  180A  346C               	retlw	108	;'l'
  4874  180B  3475               	retlw	117	;'u'
  4875  180C  3465               	retlw	101	;'e'
  4876  180D  3420               	retlw	32	;' '
  4877  180E  3469               	retlw	105	;'i'
  4878  180F  3473               	retlw	115	;'s'
  4879  1810  3420               	retlw	32	;' '
  4880  1811  3425               	retlw	37	;'%'
  4881  1812  3464               	retlw	100	;'d'
  4882  1813  3420               	retlw	32	;' '
  4883  1814  3476               	retlw	118	;'v'
  4884  1815  3461               	retlw	97	;'a'
  4885  1816  346C               	retlw	108	;'l'
  4886  1817  3475               	retlw	117	;'u'
  4887  1818  3465               	retlw	101	;'e'
  4888  1819  3420               	retlw	32	;' '
  4889  181A  3469               	retlw	105	;'i'
  4890  181B  3473               	retlw	115	;'s'
  4891  181C  3420               	retlw	32	;' '
  4892  181D  3425               	retlw	37	;'%'
  4893  181E  3464               	retlw	100	;'d'
  4894  181F  3420               	retlw	32	;' '
  4895  1820  340A               	retlw	10
  4896  1821  3400               	retlw	0
  4897                           
  4898                           	psect	stringtext2
  4899  1822                     __pstringtext2:	
  4900  1822                     STR_1:	
  4901  1822  3446               	retlw	70	;'F'
  4902  1823  3461               	retlw	97	;'a'
  4903  1824  346E               	retlw	110	;'n'
  4904  1825  345F               	retlw	95	;'_'
  4905  1826  3450               	retlw	80	;'P'
  4906  1827  3457               	retlw	87	;'W'
  4907  1828  344D               	retlw	77	;'M'
  4908  1829  345F               	retlw	95	;'_'
  4909  182A  3456               	retlw	86	;'V'
  4910  182B  3461               	retlw	97	;'a'
  4911  182C  346C               	retlw	108	;'l'
  4912  182D  3475               	retlw	117	;'u'
  4913  182E  3465               	retlw	101	;'e'
  4914  182F  3420               	retlw	32	;' '
  4915  1830  3469               	retlw	105	;'i'
  4916  1831  3473               	retlw	115	;'s'
  4917  1832  3420               	retlw	32	;' '
  4918  1833  3425               	retlw	37	;'%'
  4919  1834  3464               	retlw	100	;'d'
  4920  1835  3420               	retlw	32	;' '
  4921  1836  340A               	retlw	10
  4922  1837  3400               	retlw	0
  4923                           
  4924                           	psect	stringtext3
  4925  0000                     __pstringtext3:	
  4926                           
  4927                           ; #config settings
  4928  0000                     
  4929                           	psect	cinit
  4930  0443                     start_initialization:	
  4931  0443                     __initialization:	
  4932                           
  4933                           ; Initialize objects allocated to BANK4
  4934  0443  30D3               	movlw	low __pidataBANK4
  4935  0444  0084               	movwf	4
  4936  0445  3090               	movlw	(high __pidataBANK4)| (0+128)
  4937  0446  0085               	movwf	5
  4938  0447  3060               	movlw	low __pdataBANK4
  4939  0448  0086               	movwf	6
  4940  0449  3002               	movlw	high __pdataBANK4
  4941  044A  0087               	movwf	7
  4942  044B  300B               	movlw	11
  4943  044C  3190  204B  3184   	fcall	init_ram
  4944                           
  4945                           ; Clear objects allocated to COMMON
  4946  044F  01F0               	clrf	__pbssCOMMON& (0+127)
  4947  0450  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4948  0451  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4949  0452  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4950  0453  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4951  0454  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4952  0455  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  4953                           
  4954                           ; Clear objects allocated to BANK1
  4955  0456  30CB               	movlw	low __pbssBANK1
  4956  0457  0084               	movwf	4
  4957  0458  3000               	movlw	high __pbssBANK1
  4958  0459  0085               	movwf	5
  4959  045A  3025               	movlw	37
  4960  045B  3190  2045  3184   	fcall	clear_ram0
  4961                           
  4962                           ; Clear objects allocated to BANK2
  4963  045E  3062               	movlw	low __pbssBANK2
  4964  045F  0084               	movwf	4
  4965  0460  3001               	movlw	high __pbssBANK2
  4966  0461  0085               	movwf	5
  4967  0462  300E               	movlw	14
  4968  0463  3190  2045  3184   	fcall	clear_ram0
  4969                           
  4970                           ; Clear objects allocated to BANK3
  4971  0466  30A0               	movlw	low __pbssBANK3
  4972  0467  0084               	movwf	4
  4973  0468  3001               	movlw	high __pbssBANK3
  4974  0469  0085               	movwf	5
  4975  046A  303F               	movlw	63
  4976  046B  3190  2045  3184   	fcall	clear_ram0
  4977                           
  4978                           ; Clear objects allocated to BANK4
  4979  046E  3020               	movlw	low __pbssBANK4
  4980  046F  0084               	movwf	4
  4981  0470  3002               	movlw	high __pbssBANK4
  4982  0471  0085               	movwf	5
  4983  0472  3040               	movlw	64
  4984  0473  3190  2045  3184   	fcall	clear_ram0
  4985                           
  4986                           ; Clear objects allocated to BANK5
  4987  0476  30A0               	movlw	low __pbssBANK5
  4988  0477  0084               	movwf	4
  4989  0478  3002               	movlw	high __pbssBANK5
  4990  0479  0085               	movwf	5
  4991  047A  3050               	movlw	80
  4992  047B  3190  2045  3184   	fcall	clear_ram0
  4993                           
  4994                           ; Clear objects allocated to BANK6
  4995  047E  3020               	movlw	low __pbssBANK6
  4996  047F  0084               	movwf	4
  4997  0480  3003               	movlw	high __pbssBANK6
  4998  0481  0085               	movwf	5
  4999  0482  3040               	movlw	64
  5000  0483  3190  2045  3184   	fcall	clear_ram0
  5001                           
  5002                           ; Clear objects allocated to BANK7
  5003  0486  30A0               	movlw	low __pbssBANK7
  5004  0487  0084               	movwf	4
  5005  0488  3003               	movlw	high __pbssBANK7
  5006  0489  0085               	movwf	5
  5007  048A  3040               	movlw	64
  5008  048B  3190  2045  3184   	fcall	clear_ram0
  5009                           
  5010                           ; Clear objects allocated to BANK8
  5011  048E  3020               	movlw	low __pbssBANK8
  5012  048F  0084               	movwf	4
  5013  0490  3004               	movlw	high __pbssBANK8
  5014  0491  0085               	movwf	5
  5015  0492  3040               	movlw	64
  5016  0493  3190  2045  3184   	fcall	clear_ram0
  5017                           
  5018                           ; Clear objects allocated to BANK9
  5019  0496  30A0               	movlw	low __pbssBANK9
  5020  0497  0084               	movwf	4
  5021  0498  3004               	movlw	high __pbssBANK9
  5022  0499  0085               	movwf	5
  5023  049A  3040               	movlw	64
  5024  049B  3190  2045         	fcall	clear_ram0
  5025  049D                     end_of_initialization:	
  5026                           ;End of C runtime variable initialization code
  5027                           
  5028  049D                     __end_of__initialization:	
  5029  049D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5030  049E  0020               	movlb	0
  5031  049F  3191  29D4         	ljmp	_main	;jump to C main() function
  5032                           
  5033                           	psect	bssCOMMON
  5034  0070                     __pbssCOMMON:	
  5035  0070                     _Temp_Heater2:	
  5036  0070                     	ds	1
  5037  0071                     _Temp_Heater1:	
  5038  0071                     	ds	1
  5039  0072                     _eusartRxTail:	
  5040  0072                     	ds	1
  5041  0073                     _eusartRxHead:	
  5042  0073                     	ds	1
  5043  0074                     _eusartTxHead:	
  5044  0074                     	ds	1
  5045  0075                     I2C1_ISR@i2c_address:	
  5046  0075                     	ds	2
  5047                           
  5048                           	psect	bssBANK1
  5049  00CB                     __pbssBANK1:	
  5050  00CB                     _i2c1_object:	
  5051  00CB                     	ds	5
  5052  00D0                     _Read_SI7020_Temp:	
  5053  00D0                     	ds	4
  5054  00D4                     _prec:	
  5055  00D4                     	ds	2
  5056  00D6                     _flags:	
  5057  00D6                     	ds	2
  5058  00D8                     _p_i2c1_trb_current:	
  5059  00D8                     	ds	2
  5060  00DA                     _Fan_PWM_Value:	
  5061  00DA                     	ds	1
  5062  00DB                     _Temp_1:	
  5063  00DB                     	ds	1
  5064  00DC                     _CurrentPWM2:	
  5065  00DC                     	ds	1
  5066  00DD                     _CurrentPWM1:	
  5067  00DD                     	ds	1
  5068  00DE                     _PWM_6:	
  5069  00DE                     	ds	1
  5070  00DF                     _PWM_5:	
  5071  00DF                     	ds	1
  5072  00E0                     _PWM_4:	
  5073  00E0                     	ds	1
  5074  00E1                     _PWM_3:	
  5075  00E1                     	ds	1
  5076  00E2                     _PWM_2:	
  5077  00E2                     	ds	1
  5078  00E3                     _PWM_1:	
  5079  00E3                     	ds	1
  5080  00E4                     _PWM_Table_Temp5:	
  5081  00E4                     	ds	1
  5082  00E5                     _PWM_Table_Temp4:	
  5083  00E5                     	ds	1
  5084  00E6                     _PWM_Table_Temp3:	
  5085  00E6                     	ds	1
  5086  00E7                     _PWM_Table_Temp2:	
  5087  00E7                     	ds	1
  5088  00E8                     _PWM_Table_Temp1:	
  5089  00E8                     	ds	1
  5090  00E9                     I2C1_ISR@i2c_10bit_address_restart:	
  5091  00E9                     	ds	1
  5092  00EA                     I2C1_ISR@i2c_bytes_left:	
  5093  00EA                     	ds	1
  5094  00EB                     _p_i2c1_current:	
  5095  00EB                     	ds	1
  5096  00EC                     _i2c1_trb_count:	
  5097  00EC                     	ds	1
  5098  00ED                     _i2c1_state:	
  5099  00ED                     	ds	1
  5100  00EE                     _eusartRxLastError:	
  5101  00EE                     	ds	1
  5102  00EF                     _eusartTxTail:	
  5103  00EF                     	ds	1
  5104                           
  5105                           	psect	bssBANK2
  5106  0162                     __pbssBANK2:	
  5107  0162                     Handler_I2c@F7391:	
  5108  0162                     	ds	1
  5109  0163                     _Temp_6_lo:	
  5110  0163                     	ds	1
  5111  0164                     _Temp_5_lo:	
  5112  0164                     	ds	1
  5113  0165                     _Temp_4_lo:	
  5114  0165                     	ds	1
  5115  0166                     _Temp_3_lo:	
  5116  0166                     	ds	1
  5117  0167                     _Temp_2_lo:	
  5118  0167                     	ds	1
  5119  0168                     _Temp_1_lo:	
  5120  0168                     	ds	1
  5121  0169                     _Temp_6:	
  5122  0169                     	ds	1
  5123  016A                     _Temp_5:	
  5124  016A                     	ds	1
  5125  016B                     _Temp_4:	
  5126  016B                     	ds	1
  5127  016C                     _Temp_3:	
  5128  016C                     	ds	1
  5129  016D                     _Temp_2:	
  5130  016D                     	ds	1
  5131  016E                     _flg_reset:	
  5132  016E                     	ds	1
  5133  016F                     _eusartRxCount:	
  5134  016F                     	ds	1
  5135                           
  5136                           	psect	bssBANK3
  5137  01A0                     __pbssBANK3:	
  5138  01A0                     UartResponse_WriteCmd@F7379:	
  5139  01A0                     	ds	4
  5140  01A4                     _Read_EMC1704_Temp6:	
  5141  01A4                     	ds	4
  5142  01A8                     _Read_EMC1704_Temp5:	
  5143  01A8                     	ds	4
  5144  01AC                     _Read_EMC1704_Temp4:	
  5145  01AC                     	ds	4
  5146  01B0                     _Read_EMC1704_Temp3:	
  5147  01B0                     	ds	4
  5148  01B4                     _Read_EMC1704_Temp2:	
  5149  01B4                     	ds	4
  5150  01B8                     _Read_EMC1704_Temp1:	
  5151  01B8                     	ds	4
  5152  01BC                     _nout:	
  5153  01BC                     	ds	2
  5154  01BE                     _width:	
  5155  01BE                     	ds	2
  5156  01C0                     Handler_I2c@F7393:	
  5157  01C0                     	ds	2
  5158  01C2                     TMR0_ISR@CountCallBack:	
  5159  01C2                     	ds	2
  5160  01C4                     I2C1_ISR@pi2c_buf_ptr:	
  5161  01C4                     	ds	2
  5162  01C6                     I2C1_RBlk@readTRB:	
  5163  01C6                     	ds	10
  5164  01D0                     I2C1_MasterRead@trBlock:	
  5165  01D0                     	ds	5
  5166  01D5                     I2C1_MasterWrite@trBlock:	
  5167  01D5                     	ds	5
  5168  01DA                     _i2c1_tr_queue:	
  5169  01DA                     	ds	5
  5170                           
  5171                           	psect	bssBANK4
  5172  0220                     __pbssBANK4:	
  5173  0220                     _cmd:	
  5174  0220                     	ds	64
  5175                           
  5176                           	psect	dataBANK4
  5177  0260                     __pdataBANK4:	
  5178  0260                     _Default_PWM_Table:	
  5179  0260                     	ds	11
  5180                           
  5181                           	psect	bssBANK5
  5182  02A0                     __pbssBANK5:	
  5183  02A0                     init@F7366:	
  5184  02A0                     	ds	32
  5185  02C0                     UartResponse_ReadCmd@F7371:	
  5186  02C0                     	ds	16
  5187  02D0                     _dbuf:	
  5188  02D0                     	ds	32
  5189                           
  5190                           	psect	bssBANK6
  5191  0320                     __pbssBANK6:	
  5192  0320                     _eusartRxStatusBuffer:	
  5193  0320                     	ds	64
  5194                           
  5195                           	psect	bssBANK7
  5196  03A0                     __pbssBANK7:	
  5197  03A0                     _eusartRxBuffer:	
  5198  03A0                     	ds	64
  5199                           
  5200                           	psect	bssBANK8
  5201  0420                     __pbssBANK8:	
  5202  0420                     _eusartTxBuffer:	
  5203  0420                     	ds	64
  5204                           
  5205                           	psect	bssBANK9
  5206  04A0                     __pbssBANK9:	
  5207  04A0                     Handler_Uart@F7386:	
  5208  04A0                     	ds	64
  5209                           
  5210                           	psect	inittext
  5211  104B                     init_ram:	
  5212  104B  00FE               	movwf	126
  5213  104C                     initloop:	
  5214  104C  0012               	moviw fsr0++
  5215  104D  001E               	movwi fsr1++
  5216  104E  0BFE               	decfsz	126,f
  5217  104F  284C               	goto	initloop
  5218  1050  3400               	retlw	0
  5219                           
  5220                           	psect	clrtext
  5221  1045                     clear_ram0:	
  5222                           ;	Called with FSR0 containing the base address, and
  5223                           ;	WREG with the size to clear
  5224                           
  5225  1045  0064               	clrwdt	;clear the watchdog before getting into this loop
  5226  1046                     clrloop0:	
  5227  1046  0180               	clrf	0	;clear RAM location pointed to by FSR
  5228  1047  3101               	addfsr 0,1
  5229  1048  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5230  1049  2846               	goto	clrloop0	;have we reached the end yet?
  5231  104A  3400               	retlw	0	;all done for this memory range, return
  5232                           
  5233                           	psect	cstackBANK2
  5234  0120                     __pcstackBANK2:	
  5235  0120                     Handler_Uart@rcv_Buff:	
  5236                           
  5237                           ; 64 bytes @ 0x0
  5238  0120                     	ds	64
  5239  0160                     Handler_Uart@rx_len:	
  5240                           
  5241                           ; 1 bytes @ 0x40
  5242  0160                     	ds	1
  5243  0161                     Handler_Uart@i:	
  5244                           
  5245                           ; 1 bytes @ 0x41
  5246  0161                     	ds	1
  5247                           
  5248                           	psect	cstackBANK1
  5249  00A0                     __pcstackBANK1:	
  5250  00A0                     vfprintf@fp:	
  5251                           
  5252                           ; 1 bytes @ 0x0
  5253  00A0                     	ds	1
  5254  00A1                     vfprintf@cfmt:	
  5255                           
  5256                           ; 2 bytes @ 0x1
  5257  00A1                     	ds	2
  5258  00A3                     ?_printf:	
  5259  00A3                     printf@fmt:	
  5260                           ; 2 bytes @ 0x3
  5261                           
  5262                           
  5263                           ; 2 bytes @ 0x3
  5264  00A3                     	ds	8
  5265  00AB                     printf@ap:	
  5266                           
  5267                           ; 1 bytes @ 0xB
  5268  00AB                     	ds	1
  5269  00AC                     ??_UartResponse_ReadCmd:	
  5270  00AC                     ?_UartResponse_WriteCmd:	
  5271                           ; 1 bytes @ 0xC
  5272                           
  5273  00AC                     UartResponse_WriteCmd@value:	
  5274                           ; 1 bytes @ 0xC
  5275                           
  5276                           
  5277                           ; 1 bytes @ 0xC
  5278  00AC                     	ds	1
  5279  00AD                     ??_UartResponse_WriteCmd:	
  5280                           
  5281                           ; 1 bytes @ 0xD
  5282  00AD                     	ds	4
  5283  00B1                     UartResponse_WriteCmd@data:	
  5284                           
  5285                           ; 2 bytes @ 0x11
  5286  00B1                     	ds	1
  5287  00B2                     UartResponse_ReadCmd@type:	
  5288                           
  5289                           ; 1 bytes @ 0x12
  5290  00B2                     	ds	1
  5291  00B3                     UartResponse_ReadCmd@reg:	
  5292  00B3                     UartResponse_WriteCmd@i:	
  5293                           ; 1 bytes @ 0x13
  5294                           
  5295                           
  5296                           ; 1 bytes @ 0x13
  5297  00B3                     	ds	1
  5298  00B4                     UartResponse_ReadCmd@i:	
  5299  00B4                     UartResponse_WriteCmd@type:	
  5300                           ; 1 bytes @ 0x14
  5301                           
  5302                           
  5303                           ; 1 bytes @ 0x14
  5304  00B4                     	ds	1
  5305  00B5                     UartResponse_WriteCmd@sendBuff:	
  5306  00B5                     UartResponse_ReadCmd@sendBuff:	
  5307                           ; 4 bytes @ 0x15
  5308                           
  5309                           
  5310                           ; 16 bytes @ 0x15
  5311  00B5                     	ds	16
  5312  00C5                     UartResponse_ReadCmd@ADC_result:	
  5313                           
  5314                           ; 2 bytes @ 0x25
  5315  00C5                     	ds	2
  5316  00C7                     ??_Handler_Uart:	
  5317                           
  5318                           ; 1 bytes @ 0x27
  5319  00C7                     	ds	2
  5320  00C9                     ??_main:	
  5321                           
  5322                           ; 1 bytes @ 0x29
  5323  00C9                     	ds	2
  5324                           
  5325                           	psect	cstackCOMMON
  5326  0077                     __pcstackCOMMON:	
  5327  0077                     ?_PMD_Initialize:	
  5328  0077                     ?_PIN_MANAGER_Initialize:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331  0077                     ?_OSCILLATOR_Initialize:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334  0077                     ?_WDT_Initialize:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337  0077                     ?_I2C1_Initialize:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340  0077                     ?_PWM6_Initialize:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343  0077                     ?_ADC_Initialize:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0077                     ?_TMR2_Initialize:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0077                     ?_PWM5_Initialize:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0077                     ?_TMR0_Initialize:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0077                     ?_EUSART_Initialize:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0077                     ?_EUSART_Receive_ISR:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0077                     ?_EUSART_Transmit_ISR:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0077                     ??_EUSART_Transmit_ISR:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367  0077                     ?_EUSART_DefaultFramingErrorHandler:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370  0077                     ??_EUSART_DefaultFramingErrorHandler:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373  0077                     ?_EUSART_DefaultOverrunErrorHandler:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0077                     ??_EUSART_DefaultOverrunErrorHandler:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0077                     ?_EUSART_DefaultErrorHandler:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382  0077                     ?_EUSART_RxDataHandler:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385  0077                     ??_EUSART_RxDataHandler:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388  0077                     ?_TMR0_ISR:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0077                     ??_TMR0_ISR:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0077                     ?_I2C1_BusCollisionISR:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0077                     ??_I2C1_BusCollisionISR:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400  0077                     ?_I2C1_ISR:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403  0077                     ?_I2C1_Stop:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406  0077                     ??_I2C1_Stop:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409  0077                     ?_I2C1_FunctionComplete:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412  0077                     ??_I2C1_FunctionComplete:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415  0077                     ?_TMR0_DefaultInterruptHandler:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418  0077                     ??_TMR0_DefaultInterruptHandler:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421  0077                     ?_TMR0_CallBack:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424  0077                     ??_TMR0_CallBack:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427  0077                     ?_SYSTEM_Initialize:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430  0077                     ?_EUSART_Read_N:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433  0077                     ?_EUSART_Write:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436  0077                     ?_putch:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439  0077                     ?_INTERRUPT_InterruptManager:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442  0077                     ?_I2C1_WaitForLastPacketToComplete:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445  0077                     ?_Signal_BL_Requested:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448  0077                     ?_EraseResetVector:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451  0077                     ?_init:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454  0077                     ?_UartResponse_ReadCmd:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457  0077                     ?_UartResponse_Err:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460  0077                     ?_Handler_Uart:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463  0077                     ?_Handler_I2c:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466  0077                     ?_main:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469                           
  5470                           ; 1 bytes @ 0x0
  5471  0077                     	ds	1
  5472  0078                     ??_EUSART_Receive_ISR:	
  5473  0078                     ??_EUSART_DefaultErrorHandler:	
  5474                           ; 1 bytes @ 0x1
  5475                           
  5476                           
  5477                           ; 1 bytes @ 0x1
  5478  0078                     	ds	1
  5479  0079                     I2C1_Stop@completion_code:	
  5480                           
  5481                           ; 1 bytes @ 0x2
  5482  0079                     	ds	1
  5483  007A                     ??_I2C1_ISR:	
  5484                           
  5485                           ; 1 bytes @ 0x3
  5486  007A                     	ds	4
  5487  007E                     ??_INTERRUPT_InterruptManager:	
  5488                           
  5489                           	psect	cstackBANK0
  5490  0020                     __pcstackBANK0:	
  5491                           ; 1 bytes @ 0x7
  5492                           
  5493  0020                     ??_PMD_Initialize:	
  5494  0020                     ??_PIN_MANAGER_Initialize:	
  5495                           ; 1 bytes @ 0x0
  5496                           
  5497  0020                     ??_OSCILLATOR_Initialize:	
  5498                           ; 1 bytes @ 0x0
  5499                           
  5500  0020                     ??_WDT_Initialize:	
  5501                           ; 1 bytes @ 0x0
  5502                           
  5503  0020                     ??_I2C1_Initialize:	
  5504                           ; 1 bytes @ 0x0
  5505                           
  5506  0020                     ??_PWM6_Initialize:	
  5507                           ; 1 bytes @ 0x0
  5508                           
  5509  0020                     ??_ADC_Initialize:	
  5510                           ; 1 bytes @ 0x0
  5511                           
  5512  0020                     ??_TMR2_Initialize:	
  5513                           ; 1 bytes @ 0x0
  5514                           
  5515  0020                     ??_PWM5_Initialize:	
  5516                           ; 1 bytes @ 0x0
  5517                           
  5518  0020                     ?_EUSART_SetRxInterruptHandler:	
  5519                           ; 1 bytes @ 0x0
  5520                           
  5521  0020                     ?_EUSART_SetTxInterruptHandler:	
  5522                           ; 1 bytes @ 0x0
  5523                           
  5524  0020                     ?_EUSART_SetFramingErrorHandler:	
  5525                           ; 1 bytes @ 0x0
  5526                           
  5527  0020                     ?_EUSART_SetOverrunErrorHandler:	
  5528                           ; 1 bytes @ 0x0
  5529                           
  5530  0020                     ?_EUSART_SetErrorHandler:	
  5531                           ; 1 bytes @ 0x0
  5532                           
  5533  0020                     ?_I2C1_MasterWriteTRBBuild:	
  5534                           ; 1 bytes @ 0x0
  5535                           
  5536  0020                     ?_I2C1_MasterTRBInsert:	
  5537                           ; 1 bytes @ 0x0
  5538                           
  5539  0020                     ?_I2C1_MasterReadTRBBuild:	
  5540                           ; 1 bytes @ 0x0
  5541                           
  5542  0020                     ?_TMR0_SetInterruptHandler:	
  5543                           ; 1 bytes @ 0x0
  5544                           
  5545  0020                     ??_EUSART_Read_N:	
  5546                           ; 1 bytes @ 0x0
  5547                           
  5548  0020                     ??_EUSART_Write:	
  5549                           ; 1 bytes @ 0x0
  5550                           
  5551  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  5552                           ; 1 bytes @ 0x0
  5553                           
  5554  0020                     ?_DATAEE_WriteByte:	
  5555                           ; 1 bytes @ 0x0
  5556                           
  5557  0020                     ?_DATAEE_ReadByte:	
  5558                           ; 1 bytes @ 0x0
  5559                           
  5560  0020                     ??_Signal_BL_Requested:	
  5561                           ; 1 bytes @ 0x0
  5562                           
  5563  0020                     ??_EraseResetVector:	
  5564                           ; 1 bytes @ 0x0
  5565                           
  5566  0020                     ?_memset:	
  5567                           ; 1 bytes @ 0x0
  5568                           
  5569  0020                     ?_strlen:	
  5570                           ; 2 bytes @ 0x0
  5571                           
  5572  0020                     ?_ADC_GetConversion:	
  5573                           ; 2 bytes @ 0x0
  5574                           
  5575  0020                     ?___wmul:	
  5576                           ; 2 bytes @ 0x0
  5577                           
  5578  0020                     ?___lmul:	
  5579                           ; 2 bytes @ 0x0
  5580                           
  5581  0020                     ?___aldiv:	
  5582                           ; 4 bytes @ 0x0
  5583                           
  5584  0020                     ?___aodiv:	
  5585                           ; 4 bytes @ 0x0
  5586                           
  5587  0020                     ?___aomod:	
  5588                           ; 8 bytes @ 0x0
  5589                           
  5590  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  5591                           ; 8 bytes @ 0x0
  5592                           
  5593  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  5594                           ; 2 bytes @ 0x0
  5595                           
  5596  0020                     EUSART_SetErrorHandler@interruptHandler:	
  5597                           ; 2 bytes @ 0x0
  5598                           
  5599  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  5600                           ; 2 bytes @ 0x0
  5601                           
  5602  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  5603                           ; 2 bytes @ 0x0
  5604                           
  5605  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  5606                           ; 2 bytes @ 0x0
  5607                           
  5608  0020                     I2C1_MasterReadTRBBuild@pdata:	
  5609                           ; 2 bytes @ 0x0
  5610                           
  5611  0020                     I2C1_MasterWriteTRBBuild@ptrb:	
  5612                           ; 2 bytes @ 0x0
  5613                           
  5614  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  5615                           ; 2 bytes @ 0x0
  5616                           
  5617  0020                     DATAEE_WriteByte@bAdd:	
  5618                           ; 2 bytes @ 0x0
  5619                           
  5620  0020                     DATAEE_ReadByte@bAdd:	
  5621                           ; 2 bytes @ 0x0
  5622                           
  5623  0020                     ___wmul@multiplier:	
  5624                           ; 2 bytes @ 0x0
  5625                           
  5626  0020                     memset@dest:	
  5627                           ; 2 bytes @ 0x0
  5628                           
  5629  0020                     ___lmul@multiplier:	
  5630                           ; 2 bytes @ 0x0
  5631                           
  5632  0020                     ___aldiv@divisor:	
  5633                           ; 4 bytes @ 0x0
  5634                           
  5635  0020                     ___aodiv@divisor:	
  5636                           ; 4 bytes @ 0x0
  5637                           
  5638  0020                     ___aomod@divisor:	
  5639                           ; 8 bytes @ 0x0
  5640                           
  5641                           
  5642                           ; 8 bytes @ 0x0
  5643  0020                     	ds	1
  5644  0021                     EUSART_Read_N@rcv_Buff:	
  5645  0021                     EUSART_Write@txData:	
  5646                           ; 1 bytes @ 0x1
  5647                           
  5648                           
  5649                           ; 1 bytes @ 0x1
  5650  0021                     	ds	1
  5651  0022                     ??_TMR0_Initialize:	
  5652  0022                     ??_EUSART_Initialize:	
  5653                           ; 1 bytes @ 0x2
  5654                           
  5655  0022                     ??_EUSART_SetRxInterruptHandler:	
  5656                           ; 1 bytes @ 0x2
  5657                           
  5658  0022                     ??_EUSART_SetTxInterruptHandler:	
  5659                           ; 1 bytes @ 0x2
  5660                           
  5661  0022                     ??_EUSART_SetFramingErrorHandler:	
  5662                           ; 1 bytes @ 0x2
  5663                           
  5664  0022                     ??_EUSART_SetOverrunErrorHandler:	
  5665                           ; 1 bytes @ 0x2
  5666                           
  5667  0022                     ??_EUSART_SetErrorHandler:	
  5668                           ; 1 bytes @ 0x2
  5669                           
  5670  0022                     ??_TMR0_SetInterruptHandler:	
  5671                           ; 1 bytes @ 0x2
  5672                           
  5673  0022                     ??_strlen:	
  5674                           ; 1 bytes @ 0x2
  5675                           
  5676  0022                     ??_ADC_GetConversion:	
  5677                           ; 1 bytes @ 0x2
  5678                           
  5679  0022                     ??_putch:	
  5680                           ; 1 bytes @ 0x2
  5681                           
  5682  0022                     ??_DATAEE_ReadByte:	
  5683                           ; 1 bytes @ 0x2
  5684                           
  5685  0022                     ?_UART_Write_Buffer:	
  5686                           ; 1 bytes @ 0x2
  5687                           
  5688  0022                     EUSART_Read_N@readcnt:	
  5689                           ; 1 bytes @ 0x2
  5690                           
  5691  0022                     putch@txData:	
  5692                           ; 1 bytes @ 0x2
  5693                           
  5694  0022                     I2C1_MasterTRBInsert@pflag:	
  5695                           ; 1 bytes @ 0x2
  5696                           
  5697  0022                     I2C1_MasterReadTRBBuild@length:	
  5698                           ; 1 bytes @ 0x2
  5699                           
  5700  0022                     I2C1_MasterWriteTRBBuild@pdata:	
  5701                           ; 1 bytes @ 0x2
  5702                           
  5703  0022                     DATAEE_WriteByte@bData:	
  5704                           ; 1 bytes @ 0x2
  5705                           
  5706  0022                     UART_Write_Buffer@size:	
  5707                           ; 1 bytes @ 0x2
  5708                           
  5709  0022                     ___wmul@multiplicand:	
  5710                           ; 1 bytes @ 0x2
  5711                           
  5712  0022                     memset@c:	
  5713                           ; 2 bytes @ 0x2
  5714                           
  5715                           
  5716                           ; 2 bytes @ 0x2
  5717  0022                     	ds	1
  5718  0023                     ??_I2C1_MasterTRBInsert:	
  5719  0023                     ??_SYSTEM_Initialize:	
  5720                           ; 1 bytes @ 0x3
  5721                           
  5722  0023                     ??_DATAEE_WriteByte:	
  5723                           ; 1 bytes @ 0x3
  5724                           
  5725  0023                     ??_UART_Write_Buffer:	
  5726                           ; 1 bytes @ 0x3
  5727                           
  5728  0023                     ?_fputc:	
  5729                           ; 1 bytes @ 0x3
  5730                           
  5731  0023                     ADC_GetConversion@channel:	
  5732                           ; 2 bytes @ 0x3
  5733                           
  5734  0023                     I2C1_MasterWriteTRBBuild@length:	
  5735                           ; 1 bytes @ 0x3
  5736                           
  5737  0023                     DATAEE_WriteByte@GIEBitValue:	
  5738                           ; 1 bytes @ 0x3
  5739                           
  5740  0023                     strlen@a:	
  5741                           ; 1 bytes @ 0x3
  5742                           
  5743  0023                     I2C1_MasterReadTRBBuild@address:	
  5744                           ; 1 bytes @ 0x3
  5745                           
  5746  0023                     fputc@c:	
  5747                           ; 2 bytes @ 0x3
  5748                           
  5749                           
  5750                           ; 2 bytes @ 0x3
  5751  0023                     	ds	1
  5752  0024                     ??_init:	
  5753  0024                     ??___wmul:	
  5754                           ; 1 bytes @ 0x4
  5755                           
  5756  0024                     I2C1_MasterTRBInsert@count:	
  5757                           ; 1 bytes @ 0x4
  5758                           
  5759  0024                     UART_Write_Buffer@sendBuff:	
  5760                           ; 1 bytes @ 0x4
  5761                           
  5762  0024                     strlen@s:	
  5763                           ; 1 bytes @ 0x4
  5764                           
  5765  0024                     I2C1_MasterWriteTRBBuild@address:	
  5766                           ; 1 bytes @ 0x4
  5767                           
  5768  0024                     ___wmul@product:	
  5769                           ; 2 bytes @ 0x4
  5770                           
  5771  0024                     memset@n:	
  5772                           ; 2 bytes @ 0x4
  5773                           
  5774  0024                     ___lmul@multiplicand:	
  5775                           ; 2 bytes @ 0x4
  5776                           
  5777  0024                     ___aldiv@dividend:	
  5778                           ; 4 bytes @ 0x4
  5779                           
  5780                           
  5781                           ; 4 bytes @ 0x4
  5782  0024                     	ds	1
  5783  0025                     ??_I2C1_MasterReadTRBBuild:	
  5784  0025                     fputc@fp:	
  5785                           ; 1 bytes @ 0x5
  5786                           
  5787  0025                     UART_Write_Buffer@i:	
  5788                           ; 1 bytes @ 0x5
  5789                           
  5790                           
  5791                           ; 2 bytes @ 0x5
  5792  0025                     	ds	1
  5793  0026                     ??_I2C1_MasterWriteTRBBuild:	
  5794  0026                     ??_memset:	
  5795                           ; 1 bytes @ 0x6
  5796                           
  5797  0026                     ??_fputc:	
  5798                           ; 1 bytes @ 0x6
  5799                           
  5800  0026                     ?___awdiv:	
  5801                           ; 1 bytes @ 0x6
  5802                           
  5803  0026                     ___awdiv@divisor:	
  5804                           ; 2 bytes @ 0x6
  5805                           
  5806  0026                     init@Read_EEPROM:	
  5807                           ; 2 bytes @ 0x6
  5808                           
  5809                           
  5810                           ; 32 bytes @ 0x6
  5811  0026                     	ds	1
  5812  0027                     ??_UartResponse_Err:	
  5813  0027                     I2C1_MasterReadTRBBuild@ptrb:	
  5814                           ; 1 bytes @ 0x7
  5815                           
  5816                           
  5817                           ; 1 bytes @ 0x7
  5818  0027                     	ds	1
  5819  0028                     ?_I2C1_RBlk:	
  5820  0028                     ?_I2C1_WBlk:	
  5821                           ; 1 bytes @ 0x8
  5822                           
  5823  0028                     ??___lmul:	
  5824                           ; 1 bytes @ 0x8
  5825                           
  5826  0028                     ??___aldiv:	
  5827                           ; 1 bytes @ 0x8
  5828                           
  5829  0028                     UartResponse_Err@sendBuff:	
  5830                           ; 1 bytes @ 0x8
  5831                           
  5832  0028                     I2C1_RBlk@slaveDeviceAddress:	
  5833                           ; 1 bytes @ 0x8
  5834                           
  5835  0028                     I2C1_WBlk@slaveDeviceAddress:	
  5836                           ; 2 bytes @ 0x8
  5837                           
  5838  0028                     ___awdiv@dividend:	
  5839                           ; 2 bytes @ 0x8
  5840                           
  5841  0028                     ___lmul@product:	
  5842                           ; 2 bytes @ 0x8
  5843                           
  5844  0028                     ___aodiv@dividend:	
  5845                           ; 4 bytes @ 0x8
  5846                           
  5847  0028                     ___aomod@dividend:	
  5848                           ; 8 bytes @ 0x8
  5849                           
  5850                           
  5851                           ; 8 bytes @ 0x8
  5852  0028                     	ds	1
  5853  0029                     ___aldiv@counter:	
  5854                           
  5855                           ; 1 bytes @ 0x9
  5856  0029                     	ds	1
  5857  002A                     ??___awdiv:	
  5858  002A                     I2C1_RBlk@wblk:	
  5859                           ; 1 bytes @ 0xA
  5860                           
  5861  002A                     I2C1_WBlk@pData:	
  5862                           ; 1 bytes @ 0xA
  5863                           
  5864  002A                     ___aldiv@sign:	
  5865                           ; 1 bytes @ 0xA
  5866                           
  5867  002A                     memset@k:	
  5868                           ; 1 bytes @ 0xA
  5869                           
  5870                           
  5871                           ; 2 bytes @ 0xA
  5872  002A                     	ds	1
  5873  002B                     ?_fputs:	
  5874  002B                     ___awdiv@counter:	
  5875                           ; 2 bytes @ 0xB
  5876                           
  5877  002B                     fputs@fp:	
  5878                           ; 1 bytes @ 0xB
  5879                           
  5880  002B                     I2C1_RBlk@wCount:	
  5881                           ; 1 bytes @ 0xB
  5882                           
  5883  002B                     I2C1_WBlk@nCount:	
  5884                           ; 2 bytes @ 0xB
  5885                           
  5886  002B                     ___aldiv@quotient:	
  5887                           ; 2 bytes @ 0xB
  5888                           
  5889                           
  5890                           ; 4 bytes @ 0xB
  5891  002B                     	ds	1
  5892  002C                     ??_fputs:	
  5893  002C                     ___awdiv@sign:	
  5894                           ; 1 bytes @ 0xC
  5895                           
  5896  002C                     memset@s:	
  5897                           ; 1 bytes @ 0xC
  5898                           
  5899                           
  5900                           ; 2 bytes @ 0xC
  5901  002C                     	ds	1
  5902  002D                     ??_I2C1_WBlk:	
  5903  002D                     I2C1_RBlk@pData:	
  5904                           ; 1 bytes @ 0xD
  5905                           
  5906  002D                     ___awdiv@quotient:	
  5907                           ; 2 bytes @ 0xD
  5908                           
  5909                           
  5910                           ; 2 bytes @ 0xD
  5911  002D                     	ds	2
  5912  002F                     ?_PWM5_LoadDutyValue:	
  5913  002F                     ?_PWM6_LoadDutyValue:	
  5914                           ; 1 bytes @ 0xF
  5915                           
  5916  002F                     I2C1_WBlk@timeOut:	
  5917                           ; 1 bytes @ 0xF
  5918                           
  5919  002F                     fputs@c:	
  5920                           ; 1 bytes @ 0xF
  5921                           
  5922  002F                     PWM5_LoadDutyValue@dutyValue:	
  5923                           ; 1 bytes @ 0xF
  5924                           
  5925  002F                     PWM6_LoadDutyValue@dutyValue:	
  5926                           ; 2 bytes @ 0xF
  5927                           
  5928  002F                     I2C1_RBlk@rCount:	
  5929                           ; 2 bytes @ 0xF
  5930                           
  5931                           
  5932                           ; 2 bytes @ 0xF
  5933  002F                     	ds	1
  5934  0030                     ??___aodiv:	
  5935  0030                     ??___aomod:	
  5936                           ; 1 bytes @ 0x10
  5937                           
  5938  0030                     fputs@i:	
  5939                           ; 1 bytes @ 0x10
  5940                           
  5941  0030                     I2C1_WBlk@WriteTRB:	
  5942                           ; 2 bytes @ 0x10
  5943                           
  5944                           
  5945                           ; 5 bytes @ 0x10
  5946  0030                     	ds	1
  5947  0031                     ??_PWM5_LoadDutyValue:	
  5948  0031                     ??_PWM6_LoadDutyValue:	
  5949                           ; 1 bytes @ 0x11
  5950                           
  5951  0031                     ??_I2C1_RBlk:	
  5952                           ; 1 bytes @ 0x11
  5953                           
  5954  0031                     ___aodiv@counter:	
  5955                           ; 1 bytes @ 0x11
  5956                           
  5957  0031                     ___aomod@counter:	
  5958                           ; 1 bytes @ 0x11
  5959                           
  5960                           
  5961                           ; 1 bytes @ 0x11
  5962  0031                     	ds	1
  5963  0032                     ___aodiv@sign:	
  5964  0032                     ___aomod@sign:	
  5965                           ; 1 bytes @ 0x12
  5966                           
  5967  0032                     fputs@s:	
  5968                           ; 1 bytes @ 0x12
  5969                           
  5970                           
  5971                           ; 1 bytes @ 0x12
  5972  0032                     	ds	1
  5973  0033                     ?_abs:	
  5974  0033                     ?_pad:	
  5975                           ; 2 bytes @ 0x13
  5976                           
  5977  0033                     I2C1_RBlk@timeOut:	
  5978                           ; 2 bytes @ 0x13
  5979                           
  5980  0033                     pad@buf:	
  5981                           ; 1 bytes @ 0x13
  5982                           
  5983  0033                     abs@a:	
  5984                           ; 1 bytes @ 0x13
  5985                           
  5986  0033                     ___aodiv@quotient:	
  5987                           ; 2 bytes @ 0x13
  5988                           
  5989                           
  5990                           ; 8 bytes @ 0x13
  5991  0033                     	ds	1
  5992  0034                     I2C1_RBlk@status:	
  5993  0034                     pad@p:	
  5994                           ; 1 bytes @ 0x14
  5995                           
  5996                           
  5997                           ; 2 bytes @ 0x14
  5998  0034                     	ds	1
  5999  0035                     ??_abs:	
  6000  0035                     ??_Handler_I2c:	
  6001                           ; 1 bytes @ 0x15
  6002                           
  6003  0035                     I2C1_WBlk@status:	
  6004                           ; 1 bytes @ 0x15
  6005                           
  6006                           
  6007                           ; 1 bytes @ 0x15
  6008  0035                     	ds	1
  6009  0036                     ??_pad:	
  6010                           
  6011                           ; 1 bytes @ 0x16
  6012  0036                     	ds	1
  6013  0037                     pad@i:	
  6014                           
  6015                           ; 2 bytes @ 0x17
  6016  0037                     	ds	2
  6017  0039                     pad@w:	
  6018                           
  6019                           ; 2 bytes @ 0x19
  6020  0039                     	ds	1
  6021  003A                     Handler_I2c@Reg:	
  6022                           
  6023                           ; 1 bytes @ 0x1A
  6024  003A                     	ds	1
  6025  003B                     pad@fp:	
  6026  003B                     Handler_I2c@ReadBuffer:	
  6027                           ; 1 bytes @ 0x1B
  6028                           
  6029                           
  6030                           ; 2 bytes @ 0x1B
  6031  003B                     	ds	1
  6032  003C                     ?_dtoa:	
  6033  003C                     dtoa@d:	
  6034                           ; 2 bytes @ 0x1C
  6035                           
  6036                           
  6037                           ; 8 bytes @ 0x1C
  6038  003C                     	ds	8
  6039  0044                     ??_dtoa:	
  6040                           
  6041                           ; 1 bytes @ 0x24
  6042  0044                     	ds	2
  6043  0046                     init@i:	
  6044                           
  6045                           ; 2 bytes @ 0x26
  6046  0046                     	ds	1
  6047  0047                     _dtoa$1513:	
  6048                           
  6049                           ; 2 bytes @ 0x27
  6050  0047                     	ds	2
  6051  0049                     dtoa@fp:	
  6052                           
  6053                           ; 1 bytes @ 0x29
  6054  0049                     	ds	1
  6055  004A                     dtoa@p:	
  6056                           
  6057                           ; 2 bytes @ 0x2A
  6058  004A                     	ds	2
  6059  004C                     dtoa@w:	
  6060                           
  6061                           ; 2 bytes @ 0x2C
  6062  004C                     	ds	2
  6063  004E                     dtoa@s:	
  6064                           
  6065                           ; 2 bytes @ 0x2E
  6066  004E                     	ds	2
  6067  0050                     dtoa@n:	
  6068                           
  6069                           ; 8 bytes @ 0x30
  6070  0050                     	ds	8
  6071  0058                     dtoa@i:	
  6072                           
  6073                           ; 2 bytes @ 0x38
  6074  0058                     	ds	2
  6075  005A                     ?_vfpfcnvrt:	
  6076  005A                     vfpfcnvrt@fmt:	
  6077                           ; 2 bytes @ 0x3A
  6078                           
  6079                           
  6080                           ; 1 bytes @ 0x3A
  6081  005A                     	ds	1
  6082  005B                     vfpfcnvrt@ap:	
  6083                           
  6084                           ; 1 bytes @ 0x3B
  6085  005B                     	ds	1
  6086  005C                     ??_vfpfcnvrt:	
  6087                           
  6088                           ; 1 bytes @ 0x3C
  6089  005C                     	ds	5
  6090  0061                     vfpfcnvrt@ll:	
  6091                           
  6092                           ; 8 bytes @ 0x41
  6093  0061                     	ds	8
  6094  0069                     vfpfcnvrt@fp:	
  6095                           
  6096                           ; 1 bytes @ 0x49
  6097  0069                     	ds	1
  6098  006A                     ?_vfprintf:	
  6099  006A                     vfprintf@fmt:	
  6100                           ; 2 bytes @ 0x4A
  6101                           
  6102                           
  6103                           ; 2 bytes @ 0x4A
  6104  006A                     	ds	2
  6105  006C                     vfprintf@ap:	
  6106                           
  6107                           ; 1 bytes @ 0x4C
  6108  006C                     	ds	1
  6109  006D                     ??_vfprintf:	
  6110                           
  6111                           ; 1 bytes @ 0x4D
  6112  006D                     	ds	2
  6113  006F                     ??_printf:	
  6114                           
  6115                           ; 1 bytes @ 0x4F
  6116  006F                     	ds	1
  6117                           
  6118                           	psect	maintext
  6119  11D4                     __pmaintext:	
  6120 ;;
  6121 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6122 ;;
  6123 ;; *************** function _main *****************
  6124 ;; Defined at:
  6125 ;;		line 696 in file "main.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;		None
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : B1F/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;Total ram usage:        2 bytes
  6144 ;; Hardware stack levels required when called:   15
  6145 ;; This function calls:
  6146 ;;		_Handler_I2c
  6147 ;;		_Handler_Uart
  6148 ;;		_init
  6149 ;; This function is called by:
  6150 ;;		Startup code after reset
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           
  6155                           ;psect for function _main
  6156  11D4                     _main:	
  6157                           
  6158                           ;main.c: 698:     init();
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6162  11D4  3188  207B  3191   	fcall	_init
  6163  11D7                     l6019:	
  6164                           
  6165                           ;main.c: 700:     {;main.c: 701:         _delay((unsigned long)((1000)*(32000000/4000.0)
      +                          ));
  6166  11D7  3029               	movlw	41
  6167  11D8  0021               	movlb	1	; select bank1
  6168  11D9  00CA               	movwf	(??_main^(0+128)+1)
  6169  11DA  3096               	movlw	150
  6170  11DB  00C9               	movwf	??_main^(0+128)
  6171  11DC  307F               	movlw	127
  6172  11DD                     u5027:	
  6173  11DD  0B89               	decfsz	9,f
  6174  11DE  29DD               	goto	u5027
  6175  11DF  0BC9               	decfsz	??_main^(0+128),f
  6176  11E0  29DD               	goto	u5027
  6177  11E1  0BCA               	decfsz	(??_main^(0+128)+1),f
  6178  11E2  29DD               	goto	u5027
  6179                           
  6180                           ;main.c: 703:         Handler_I2c();
  6181  11E3  3184  24A1  3191   	fcall	_Handler_I2c
  6182                           
  6183                           ;main.c: 704:         Handler_Uart();
  6184  11E6  3196  2698  3191   	fcall	_Handler_Uart
  6185                           
  6186                           ;main.c: 706:         if (flg_reset) {
  6187  11E9  0022               	movlb	2	; select bank2
  6188  11EA  086E               	movf	_flg_reset^(0+256),w
  6189  11EB  1903               	btfsc	3,2
  6190  11EC  29D7               	goto	l6019
  6191  11ED  0001               	reset	;# 
  6192  11EE  29D7               	goto	l6019
  6193  11EF                     __end_of_main:	
  6194                           
  6195                           	psect	text1
  6196  087B                     __ptext1:	
  6197 ;; *************** function _init *****************
  6198 ;; Defined at:
  6199 ;;		line 233 in file "main.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  Read_EEPROM    32    6[BANK0 ] unsigned char [32]
  6204 ;;  i               2   38[BANK0 ] unsigned short 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;Total ram usage:       36 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    7
  6221 ;; This function calls:
  6222 ;;		_DATAEE_ReadByte
  6223 ;;		_DATAEE_WriteByte
  6224 ;;		_SYSTEM_Initialize
  6225 ;; This function is called by:
  6226 ;;		_main
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function _init
  6232  087B                     _init:	
  6233                           
  6234                           ;main.c: 235:     uint8_t Read_EEPROM[32] = {0};
  6235                           
  6236                           ;incstack = 0
  6237                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6238  087B  3026               	movlw	low init@Read_EEPROM
  6239  087C  0086               	movwf	6
  6240  087D  3000               	movlw	high init@Read_EEPROM
  6241  087E  0087               	movwf	7
  6242  087F  3020               	movlw	32
  6243  0880  0020               	movlb	0	; select bank0
  6244  0881  00A4               	movwf	??_init
  6245  0882  3000               	movlw	0
  6246  0883                     u4500:	
  6247  0883  001E               	movwi fsr1++
  6248  0884  0BA4               	decfsz	??_init,f
  6249  0885  2883               	goto	u4500
  6250                           
  6251                           ;main.c: 236:     uint16_t i;;main.c: 238:     SYSTEM_Initialize();
  6252  0886  3192  22A5  3188   	fcall	_SYSTEM_Initialize
  6253                           
  6254                           ;main.c: 239:     (INTCONbits.GIE = 1);
  6255  0889  178B               	bsf	11,7	;volatile
  6256                           
  6257                           ;main.c: 240:     (INTCONbits.PEIE = 1);
  6258  088A  170B               	bsf	11,6	;volatile
  6259                           
  6260                           ;main.c: 241:         for(i=0;i<(1 +3 +sizeof(Default_PWM_Table));i++){
  6261  088B  0020               	movlb	0	; select bank0
  6262  088C  01C6               	clrf	init@i
  6263  088D  01C7               	clrf	init@i+1
  6264  088E                     l5803:	
  6265                           
  6266                           ;main.c: 242:         Read_EEPROM[i] = DATAEE_ReadByte(0xF000 +i);
  6267  088E  0846               	movf	init@i,w
  6268  088F  3E00               	addlw	0
  6269  0890  00A0               	movwf	DATAEE_ReadByte@bAdd
  6270  0891  30F0               	movlw	240
  6271  0892  3D47               	addwfc	init@i+1,w
  6272  0893  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  6273  0894  3190  20EC  3188   	fcall	_DATAEE_ReadByte
  6274  0897  0020               	movlb	0	; select bank0
  6275  0898  00A4               	movwf	??_init
  6276  0899  0846               	movf	init@i,w
  6277  089A  3E26               	addlw	(low (init@Read_EEPROM| 0))& (0+255)
  6278  089B  0086               	movwf	6
  6279  089C  0187               	clrf	7
  6280  089D  0824               	movf	??_init,w
  6281  089E  0081               	movwf	1
  6282                           
  6283                           ;main.c: 243:     }
  6284  089F  3001               	movlw	1
  6285  08A0  07C6               	addwf	init@i,f
  6286  08A1  3000               	movlw	0
  6287  08A2  3DC7               	addwfc	init@i+1,f
  6288  08A3  3000               	movlw	0
  6289  08A4  0247               	subwf	init@i+1,w
  6290  08A5  300F               	movlw	15
  6291  08A6  1903               	skipnz
  6292  08A7  0246               	subwf	init@i,w
  6293  08A8  1C03               	skipc
  6294  08A9  288E               	goto	l5803
  6295                           
  6296                           ;main.c: 245:     if(Read_EEPROM[0] == 0xFF){
  6297  08AA  0A26               	incf	init@Read_EEPROM,w
  6298  08AB  1D03               	btfss	3,2
  6299  08AC  2905               	goto	l5839
  6300                           
  6301                           ;main.c: 246:         DATAEE_WriteByte(0xF000, 0xAA);
  6302  08AD  3000               	movlw	0
  6303  08AE  00A0               	movwf	DATAEE_WriteByte@bAdd
  6304  08AF  30F0               	movlw	240
  6305  08B0  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  6306  08B1  30AA               	movlw	170
  6307  08B2  00A4               	movwf	??_init
  6308  08B3  0824               	movf	??_init,w
  6309  08B4  00A2               	movwf	DATAEE_WriteByte@bData
  6310  08B5  3192  22C6  3188   	fcall	_DATAEE_WriteByte
  6311                           
  6312                           ;main.c: 247:         for(i=0;i<sizeof(Default_PWM_Table);i++){
  6313  08B8  0020               	movlb	0	; select bank0
  6314  08B9  01C6               	clrf	init@i
  6315  08BA  01C7               	clrf	init@i+1
  6316  08BB                     l5819:	
  6317                           
  6318                           ;main.c: 248:             DATAEE_WriteByte(0xF000 +1 +3 +i, Default_PWM_Table[i]);
  6319  08BB  0846               	movf	init@i,w
  6320  08BC  3E04               	addlw	4
  6321  08BD  00A0               	movwf	DATAEE_WriteByte@bAdd
  6322  08BE  30F0               	movlw	240
  6323  08BF  3D47               	addwfc	init@i+1,w
  6324  08C0  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  6325  08C1  0846               	movf	init@i,w
  6326  08C2  3E60               	addlw	(low (_Default_PWM_Table| (0+512)))& (0+255)
  6327  08C3  0086               	movwf	6
  6328  08C4  3002               	movlw	2	; select bank4/5
  6329  08C5  0087               	movwf	7
  6330  08C6  0801               	movf	1,w
  6331  08C7  00A4               	movwf	??_init
  6332  08C8  0824               	movf	??_init,w
  6333  08C9  00A2               	movwf	DATAEE_WriteByte@bData
  6334  08CA  3192  22C6  3188   	fcall	_DATAEE_WriteByte
  6335                           
  6336                           ;main.c: 249:         }
  6337  08CD  3001               	movlw	1
  6338  08CE  0020               	movlb	0	; select bank0
  6339  08CF  07C6               	addwf	init@i,f
  6340  08D0  3000               	movlw	0
  6341  08D1  3DC7               	addwfc	init@i+1,f
  6342  08D2  3000               	movlw	0
  6343  08D3  0247               	subwf	init@i+1,w
  6344  08D4  300B               	movlw	11
  6345  08D5  1903               	skipnz
  6346  08D6  0246               	subwf	init@i,w
  6347  08D7  1C03               	skipc
  6348  08D8  28BB               	goto	l5819
  6349                           
  6350                           ;main.c: 250:         _delay((unsigned long)((200)*(32000000/4000.0)));
  6351  08D9  3009               	movlw	9
  6352  08DA  0020               	movlb	0	; select bank0
  6353  08DB  00A5               	movwf	??_init+1
  6354  08DC  301E               	movlw	30
  6355  08DD  00A4               	movwf	??_init
  6356  08DE  30E4               	movlw	228
  6357  08DF                     u5037:	
  6358  08DF  0B89               	decfsz	9,f
  6359  08E0  28DF               	goto	u5037
  6360  08E1  0BA4               	decfsz	??_init,f
  6361  08E2  28DF               	goto	u5037
  6362  08E3  0BA5               	decfsz	??_init+1,f
  6363  08E4  28DF               	goto	u5037
  6364  08E5  0000               	nop
  6365                           
  6366                           ;main.c: 251:         for(i=0;i<(1 +3 +sizeof(Default_PWM_Table));i++){
  6367  08E6  0020               	movlb	0	; select bank0
  6368  08E7  01C6               	clrf	init@i
  6369  08E8  01C7               	clrf	init@i+1
  6370  08E9                     l5833:	
  6371                           
  6372                           ;main.c: 252:             Read_EEPROM[i] = DATAEE_ReadByte(0xF000 +i);
  6373  08E9  0846               	movf	init@i,w
  6374  08EA  3E00               	addlw	0
  6375  08EB  00A0               	movwf	DATAEE_ReadByte@bAdd
  6376  08EC  30F0               	movlw	240
  6377  08ED  3D47               	addwfc	init@i+1,w
  6378  08EE  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  6379  08EF  3190  20EC  3188   	fcall	_DATAEE_ReadByte
  6380  08F2  0020               	movlb	0	; select bank0
  6381  08F3  00A4               	movwf	??_init
  6382  08F4  0846               	movf	init@i,w
  6383  08F5  3E26               	addlw	(low (init@Read_EEPROM| 0))& (0+255)
  6384  08F6  0086               	movwf	6
  6385  08F7  0187               	clrf	7
  6386  08F8  0824               	movf	??_init,w
  6387  08F9  0081               	movwf	1
  6388                           
  6389                           ;main.c: 253:         }
  6390  08FA  3001               	movlw	1
  6391  08FB  07C6               	addwf	init@i,f
  6392  08FC  3000               	movlw	0
  6393  08FD  3DC7               	addwfc	init@i+1,f
  6394  08FE  3000               	movlw	0
  6395  08FF  0247               	subwf	init@i+1,w
  6396  0900  300F               	movlw	15
  6397  0901  1903               	skipnz
  6398  0902  0246               	subwf	init@i,w
  6399  0903  1C03               	skipc
  6400  0904  28E9               	goto	l5833
  6401  0905                     l5839:	
  6402                           
  6403                           ;main.c: 255:     PWM_Table_Temp1 = (int8_t*)Read_EEPROM[4];
  6404  0905  082A               	movf	init@Read_EEPROM+4,w
  6405  0906  00A4               	movwf	??_init
  6406  0907  0824               	movf	??_init,w
  6407  0908  0021               	movlb	1	; select bank1
  6408  0909  00E8               	movwf	_PWM_Table_Temp1^(0+128)
  6409                           
  6410                           ;main.c: 256:     PWM_Table_Temp2 = (int8_t*)Read_EEPROM[5];
  6411  090A  0020               	movlb	0	; select bank0
  6412  090B  082B               	movf	init@Read_EEPROM+5,w
  6413  090C  00A4               	movwf	??_init
  6414  090D  0824               	movf	??_init,w
  6415  090E  0021               	movlb	1	; select bank1
  6416  090F  00E7               	movwf	_PWM_Table_Temp2^(0+128)
  6417                           
  6418                           ;main.c: 257:     PWM_Table_Temp3 = (int8_t*)Read_EEPROM[6];
  6419  0910  0020               	movlb	0	; select bank0
  6420  0911  082C               	movf	init@Read_EEPROM+6,w
  6421  0912  00A4               	movwf	??_init
  6422  0913  0824               	movf	??_init,w
  6423  0914  0021               	movlb	1	; select bank1
  6424  0915  00E6               	movwf	_PWM_Table_Temp3^(0+128)
  6425                           
  6426                           ;main.c: 258:     PWM_Table_Temp4 = (int8_t*)Read_EEPROM[7];
  6427  0916  0020               	movlb	0	; select bank0
  6428  0917  082D               	movf	init@Read_EEPROM+7,w
  6429  0918  00A4               	movwf	??_init
  6430  0919  0824               	movf	??_init,w
  6431  091A  0021               	movlb	1	; select bank1
  6432  091B  00E5               	movwf	_PWM_Table_Temp4^(0+128)
  6433                           
  6434                           ;main.c: 259:     PWM_Table_Temp5 = (int8_t*)Read_EEPROM[8];
  6435  091C  0020               	movlb	0	; select bank0
  6436  091D  082E               	movf	init@Read_EEPROM+8,w
  6437  091E  00A4               	movwf	??_init
  6438  091F  0824               	movf	??_init,w
  6439  0920  0021               	movlb	1	; select bank1
  6440  0921  00E4               	movwf	_PWM_Table_Temp5^(0+128)
  6441                           
  6442                           ;main.c: 260:     PWM_1 = Read_EEPROM[9];
  6443  0922  0020               	movlb	0	; select bank0
  6444  0923  082F               	movf	init@Read_EEPROM+9,w
  6445  0924  00A4               	movwf	??_init
  6446  0925  0824               	movf	??_init,w
  6447  0926  0021               	movlb	1	; select bank1
  6448  0927  00E3               	movwf	_PWM_1^(0+128)
  6449                           
  6450                           ;main.c: 261:     PWM_2 = Read_EEPROM[10];
  6451  0928  0020               	movlb	0	; select bank0
  6452  0929  0830               	movf	init@Read_EEPROM+10,w
  6453  092A  00A4               	movwf	??_init
  6454  092B  0824               	movf	??_init,w
  6455  092C  0021               	movlb	1	; select bank1
  6456  092D  00E2               	movwf	_PWM_2^(0+128)
  6457                           
  6458                           ;main.c: 262:     PWM_3 = Read_EEPROM[11];
  6459  092E  0020               	movlb	0	; select bank0
  6460  092F  0831               	movf	init@Read_EEPROM+11,w
  6461  0930  00A4               	movwf	??_init
  6462  0931  0824               	movf	??_init,w
  6463  0932  0021               	movlb	1	; select bank1
  6464  0933  00E1               	movwf	_PWM_3^(0+128)
  6465                           
  6466                           ;main.c: 263:     PWM_4 = Read_EEPROM[12];
  6467  0934  0020               	movlb	0	; select bank0
  6468  0935  0832               	movf	init@Read_EEPROM+12,w
  6469  0936  00A4               	movwf	??_init
  6470  0937  0824               	movf	??_init,w
  6471  0938  0021               	movlb	1	; select bank1
  6472  0939  00E0               	movwf	_PWM_4^(0+128)
  6473                           
  6474                           ;main.c: 264:     PWM_5 = Read_EEPROM[13];
  6475  093A  0020               	movlb	0	; select bank0
  6476  093B  0833               	movf	init@Read_EEPROM+13,w
  6477  093C  00A4               	movwf	??_init
  6478  093D  0824               	movf	??_init,w
  6479  093E  0021               	movlb	1	; select bank1
  6480  093F  00DF               	movwf	_PWM_5^(0+128)
  6481                           
  6482                           ;main.c: 265:     PWM_6 = Read_EEPROM[14];
  6483  0940  0020               	movlb	0	; select bank0
  6484  0941  0834               	movf	init@Read_EEPROM+14,w
  6485  0942  00A4               	movwf	??_init
  6486  0943  0824               	movf	??_init,w
  6487  0944  0021               	movlb	1	; select bank1
  6488  0945  00DE               	movwf	_PWM_6^(0+128)
  6489  0946  0008               	return
  6490  0947                     __end_of_init:	
  6491                           
  6492                           	psect	text2
  6493  12A5                     __ptext2:	
  6494 ;; *************** function _SYSTEM_Initialize *****************
  6495 ;; Defined at:
  6496 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      void 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0, pclath, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;Total ram usage:        0 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    6
  6517 ;; This function calls:
  6518 ;;		_ADC_Initialize
  6519 ;;		_EUSART_Initialize
  6520 ;;		_I2C1_Initialize
  6521 ;;		_OSCILLATOR_Initialize
  6522 ;;		_PIN_MANAGER_Initialize
  6523 ;;		_PMD_Initialize
  6524 ;;		_PWM5_Initialize
  6525 ;;		_PWM6_Initialize
  6526 ;;		_TMR0_Initialize
  6527 ;;		_TMR2_Initialize
  6528 ;;		_WDT_Initialize
  6529 ;; This function is called by:
  6530 ;;		_init
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function _SYSTEM_Initialize
  6536  12A5                     _SYSTEM_Initialize:	
  6537                           
  6538                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6539                           
  6540                           ;incstack = 0
  6541                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6542  12A5  3190  2051  3192   	fcall	_PMD_Initialize
  6543                           
  6544                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6545  12A8  3194  246A  3192   	fcall	_PIN_MANAGER_Initialize
  6546                           
  6547                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6548  12AB  3190  2097  3192   	fcall	_OSCILLATOR_Initialize
  6549                           
  6550                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  6551  12AE  3190  2036  3192   	fcall	_WDT_Initialize
  6552                           
  6553                           ;mcc_generated_files/mcc.c: 57:     I2C1_Initialize();
  6554  12B1  3192  220B  3192   	fcall	_I2C1_Initialize
  6555                           
  6556                           ;mcc_generated_files/mcc.c: 58:     PWM6_Initialize();
  6557  12B4  3190  20B3  3192   	fcall	_PWM6_Initialize
  6558                           
  6559                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
  6560  12B7  3190  2061  3192   	fcall	_ADC_Initialize
  6561                           
  6562                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  6563  12BA  3190  2059  3192   	fcall	_TMR2_Initialize
  6564                           
  6565                           ;mcc_generated_files/mcc.c: 61:     PWM5_Initialize();
  6566  12BD  3190  20A9  3192   	fcall	_PWM5_Initialize
  6567                           
  6568                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
  6569  12C0  3191  212F  3192   	fcall	_TMR0_Initialize
  6570                           
  6571                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
  6572  12C3  3194  24E2         	fcall	_EUSART_Initialize
  6573  12C5  0008               	return
  6574  12C6                     __end_of_SYSTEM_Initialize:	
  6575                           
  6576                           	psect	text3
  6577  1036                     __ptext3:	
  6578 ;; *************** function _WDT_Initialize *****************
  6579 ;; Defined at:
  6580 ;;		line 80 in file "mcc_generated_files/mcc.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    4
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		_SYSTEM_Initialize
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           
  6609                           ;psect for function _WDT_Initialize
  6610  1036                     _WDT_Initialize:	
  6611                           
  6612                           ;mcc_generated_files/mcc.c: 83:     WDTCON = 0x16;
  6613                           
  6614                           ;incstack = 0
  6615                           ; Regs used in _WDT_Initialize: [wreg]
  6616  1036  3016               	movlw	22
  6617  1037  0021               	movlb	1	; select bank1
  6618  1038  0097               	movwf	23	;volatile
  6619  1039  0008               	return
  6620  103A                     __end_of_WDT_Initialize:	
  6621                           
  6622                           	psect	text4
  6623  1059                     __ptext4:	
  6624 ;; *************** function _TMR2_Initialize *****************
  6625 ;; Defined at:
  6626 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, status,2
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;Total ram usage:        0 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    4
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_SYSTEM_Initialize
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _TMR2_Initialize
  6656  1059                     _TMR2_Initialize:	
  6657                           
  6658                           ;mcc_generated_files/tmr2.c: 66:     PR2 = 0x4F;
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6662  1059  304F               	movlw	79
  6663  105A  0020               	movlb	0	; select bank0
  6664  105B  009E               	movwf	30	;volatile
  6665                           
  6666                           ;mcc_generated_files/tmr2.c: 69:     TMR2 = 0x00;
  6667  105C  019D               	clrf	29	;volatile
  6668                           
  6669                           ;mcc_generated_files/tmr2.c: 72:     PIR1bits.TMR2IF = 0;
  6670  105D  1091               	bcf	17,1	;volatile
  6671                           
  6672                           ;mcc_generated_files/tmr2.c: 75:     T2CON = 0x04;
  6673  105E  3004               	movlw	4
  6674  105F  009F               	movwf	31	;volatile
  6675  1060  0008               	return
  6676  1061                     __end_of_TMR2_Initialize:	
  6677                           
  6678                           	psect	text5
  6679  112F                     __ptext5:	
  6680 ;; *************** function _TMR0_Initialize *****************
  6681 ;; Defined at:
  6682 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2, status,0, pclath, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    5
  6703 ;; This function calls:
  6704 ;;		_TMR0_SetInterruptHandler
  6705 ;; This function is called by:
  6706 ;;		_SYSTEM_Initialize
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           
  6711                           ;psect for function _TMR0_Initialize
  6712  112F                     _TMR0_Initialize:	
  6713                           
  6714                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x46;
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6718  112F  3046               	movlw	70
  6719  1130  0020               	movlb	0	; select bank0
  6720  1131  0098               	movwf	24	;volatile
  6721                           
  6722                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  6723  1132  30F9               	movlw	249
  6724  1133  0096               	movwf	22	;volatile
  6725                           
  6726                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  6727  1134  0195               	clrf	21	;volatile
  6728                           
  6729                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  6730  1135  1290               	bcf	16,5	;volatile
  6731                           
  6732                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  6733  1136  0021               	movlb	1	; select bank1
  6734  1137  1690               	bsf	16,5	;volatile
  6735                           
  6736                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6737  1138  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  6738  1139  0020               	movlb	0	; select bank0
  6739  113A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6740  113B  3007               	movlw	high _TMR0_DefaultInterruptHandler
  6741  113C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6742  113D  3190  20A0         	fcall	_TMR0_SetInterruptHandler
  6743                           
  6744                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x89;
  6745  113F  3089               	movlw	137
  6746  1140  0020               	movlb	0	; select bank0
  6747  1141  0097               	movwf	23	;volatile
  6748  1142  0008               	return
  6749  1143                     __end_of_TMR0_Initialize:	
  6750                           
  6751                           	psect	text6
  6752  10A0                     __ptext6:	
  6753 ;; *************** function _TMR0_SetInterruptHandler *****************
  6754 ;; Defined at:
  6755 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6758 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		wreg
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;Total ram usage:        2 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    4
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_TMR0_Initialize
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function _TMR0_SetInterruptHandler
  6786  10A0                     _TMR0_SetInterruptHandler:	
  6787                           
  6788                           ;mcc_generated_files/tmr0.c: 151:     TMR0_InterruptHandler = InterruptHandler;
  6789                           
  6790                           ;incstack = 0
  6791                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6792  10A0  0020               	movlb	0	; select bank0
  6793  10A1  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6794  10A2  0023               	movlb	3	; select bank3
  6795  10A3  00E0               	movwf	(_TMR0_InterruptHandler+1)^(0+384)
  6796  10A4  0020               	movlb	0	; select bank0
  6797  10A5  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6798  10A6  0023               	movlb	3	; select bank3
  6799  10A7  00DF               	movwf	_TMR0_InterruptHandler^(0+384)
  6800  10A8  0008               	return
  6801  10A9                     __end_of_TMR0_SetInterruptHandler:	
  6802                           
  6803                           	psect	text7
  6804  10B3                     __ptext7:	
  6805 ;; *************** function _PWM6_Initialize *****************
  6806 ;; Defined at:
  6807 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;		None
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    4
  6828 ;; This function calls:
  6829 ;;		Nothing
  6830 ;; This function is called by:
  6831 ;;		_SYSTEM_Initialize
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           
  6836                           ;psect for function _PWM6_Initialize
  6837  10B3                     _PWM6_Initialize:	
  6838                           
  6839                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  6843  10B3  3080               	movlw	128
  6844  10B4  002C               	movlb	12	; select bank12
  6845  10B5  009C               	movwf	28	;volatile
  6846                           
  6847                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x00;
  6848  10B6  019B               	clrf	27	;volatile
  6849                           
  6850                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x00;
  6851  10B7  019A               	clrf	26	;volatile
  6852                           
  6853                           ;mcc_generated_files/pwm6.c: 71:     PWMTMRSbits.P6TSEL = 1;
  6854  10B8  081F               	movf	31,w	;volatile
  6855  10B9  39F3               	andlw	-13
  6856  10BA  3804               	iorlw	4
  6857  10BB  009F               	movwf	31	;volatile
  6858  10BC  0008               	return
  6859  10BD                     __end_of_PWM6_Initialize:	
  6860                           
  6861                           	psect	text8
  6862  10A9                     __ptext8:	
  6863 ;; *************** function _PWM5_Initialize *****************
  6864 ;; Defined at:
  6865 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;		None
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      void 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;Total ram usage:        0 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    4
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_SYSTEM_Initialize
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           
  6894                           ;psect for function _PWM5_Initialize
  6895  10A9                     _PWM5_Initialize:	
  6896                           
  6897                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  6898                           
  6899                           ;incstack = 0
  6900                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  6901  10A9  3080               	movlw	128
  6902  10AA  002C               	movlb	12	; select bank12
  6903  10AB  0099               	movwf	25	;volatile
  6904                           
  6905                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x00;
  6906  10AC  0198               	clrf	24	;volatile
  6907                           
  6908                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x00;
  6909  10AD  0197               	clrf	23	;volatile
  6910                           
  6911                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
  6912  10AE  081F               	movf	31,w	;volatile
  6913  10AF  39FC               	andlw	-4
  6914  10B0  3801               	iorlw	1
  6915  10B1  009F               	movwf	31	;volatile
  6916  10B2  0008               	return
  6917  10B3                     __end_of_PWM5_Initialize:	
  6918                           
  6919                           	psect	text9
  6920  1051                     __ptext9:	
  6921 ;; *************** function _PMD_Initialize *****************
  6922 ;; Defined at:
  6923 ;;		line 86 in file "mcc_generated_files/mcc.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		status,2
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    4
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_SYSTEM_Initialize
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           
  6952                           ;psect for function _PMD_Initialize
  6953  1051                     _PMD_Initialize:	
  6954                           
  6955                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  6956                           
  6957                           ;incstack = 0
  6958                           ; Regs used in _PMD_Initialize: [status,2]
  6959  1051  0032               	movlb	18	; select bank18
  6960  1052  0191               	clrf	17	;volatile
  6961                           
  6962                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  6963  1053  0192               	clrf	18	;volatile
  6964                           
  6965                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  6966  1054  0193               	clrf	19	;volatile
  6967                           
  6968                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  6969  1055  0194               	clrf	20	;volatile
  6970                           
  6971                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  6972  1056  0195               	clrf	21	;volatile
  6973                           
  6974                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  6975  1057  0196               	clrf	22	;volatile
  6976  1058  0008               	return
  6977  1059                     __end_of_PMD_Initialize:	
  6978                           
  6979                           	psect	text10
  6980  146A                     __ptext10:	
  6981 ;; *************** function _PIN_MANAGER_Initialize *****************
  6982 ;; Defined at:
  6983 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;		None
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, status,2
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;Total ram usage:        0 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    4
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_SYSTEM_Initialize
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           
  7012                           ;psect for function _PIN_MANAGER_Initialize
  7013  146A                     _PIN_MANAGER_Initialize:	
  7014                           
  7015                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7016                           
  7017                           ;incstack = 0
  7018                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7019  146A  0022               	movlb	2	; select bank2
  7020  146B  018C               	clrf	12	;volatile
  7021                           
  7022                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7023  146C  018D               	clrf	13	;volatile
  7024                           
  7025                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7026  146D  018E               	clrf	14	;volatile
  7027                           
  7028                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  7029  146E  3037               	movlw	55
  7030  146F  0021               	movlb	1	; select bank1
  7031  1470  008C               	movwf	12	;volatile
  7032                           
  7033                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x40;
  7034  1471  3040               	movlw	64
  7035  1472  008D               	movwf	13	;volatile
  7036                           
  7037                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x2F;
  7038  1473  302F               	movlw	47
  7039  1474  008E               	movwf	14	;volatile
  7040                           
  7041                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  7042  1475  303C               	movlw	60
  7043  1476  0023               	movlb	3	; select bank3
  7044  1477  008E               	movwf	14	;volatile
  7045                           
  7046                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  7047  1478  018D               	clrf	13	;volatile
  7048                           
  7049                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  7050  1479  018C               	clrf	12	;volatile
  7051                           
  7052                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7053  147A  0024               	movlb	4	; select bank4
  7054  147B  018D               	clrf	13	;volatile
  7055                           
  7056                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x30;
  7057  147C  3030               	movlw	48
  7058  147D  008C               	movwf	12	;volatile
  7059                           
  7060                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  7061  147E  018E               	clrf	14	;volatile
  7062                           
  7063                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  7064  147F  0025               	movlb	5	; select bank5
  7065  1480  018C               	clrf	12	;volatile
  7066                           
  7067                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  7068  1481  018D               	clrf	13	;volatile
  7069                           
  7070                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  7071  1482  018E               	clrf	14	;volatile
  7072                           
  7073                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  7074  1483  3037               	movlw	55
  7075  1484  0026               	movlb	6	; select bank6
  7076  1485  008C               	movwf	12	;volatile
  7077                           
  7078                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  7079  1486  30F0               	movlw	240
  7080  1487  008D               	movwf	13	;volatile
  7081                           
  7082                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  7083  1488  30FF               	movlw	255
  7084  1489  008E               	movwf	14	;volatile
  7085                           
  7086                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  7087  148A  303F               	movlw	63
  7088  148B  0027               	movlb	7	; select bank7
  7089  148C  008C               	movwf	12	;volatile
  7090                           
  7091                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  7092  148D  30F0               	movlw	240
  7093  148E  008D               	movwf	13	;volatile
  7094                           
  7095                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  7096  148F  30FF               	movlw	255
  7097  1490  008E               	movwf	14	;volatile
  7098                           
  7099                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0E;
  7100  1491  300E               	movlw	14
  7101  1492  003C               	movlb	28	; select bank28
  7102  1493  00A4               	movwf	36	;volatile
  7103                           
  7104                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x04;
  7105  1494  3004               	movlw	4
  7106  1495  00A0               	movwf	32	;volatile
  7107                           
  7108                           ;mcc_generated_files/pin_manager.c: 115:     RA4PPS = 0x18;
  7109  1496  3018               	movlw	24
  7110  1497  003D               	movlb	29	; select bank29
  7111  1498  0094               	movwf	20	;volatile
  7112                           
  7113                           ;mcc_generated_files/pin_manager.c: 116:     RB7PPS = 0x14;
  7114  1499  3014               	movlw	20
  7115  149A  009F               	movwf	31	;volatile
  7116                           
  7117                           ;mcc_generated_files/pin_manager.c: 117:     RA5PPS = 0x19;
  7118  149B  3019               	movlw	25
  7119  149C  0095               	movwf	21	;volatile
  7120                           
  7121                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x02;
  7122  149D  3002               	movlw	2
  7123  149E  00A6               	movwf	38	;volatile
  7124                           
  7125                           ;mcc_generated_files/pin_manager.c: 119:     RC7PPS = 0x03;
  7126  149F  3003               	movlw	3
  7127  14A0  00A7               	movwf	39	;volatile
  7128                           
  7129                           ;mcc_generated_files/pin_manager.c: 120:     SSP1DATPPS = 0x05;
  7130  14A1  3005               	movlw	5
  7131  14A2  003C               	movlb	28	; select bank28
  7132  14A3  00A1               	movwf	33	;volatile
  7133  14A4  0008               	return
  7134  14A5                     __end_of_PIN_MANAGER_Initialize:	
  7135                           
  7136                           	psect	text11
  7137  1097                     __ptext11:	
  7138 ;; *************** function _OSCILLATOR_Initialize *****************
  7139 ;; Defined at:
  7140 ;;		line 66 in file "mcc_generated_files/mcc.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;Total ram usage:        0 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    4
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_SYSTEM_Initialize
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function _OSCILLATOR_Initialize
  7170  1097                     _OSCILLATOR_Initialize:	
  7171                           
  7172                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
  7173                           
  7174                           ;incstack = 0
  7175                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7176  1097  3060               	movlw	96
  7177  1098  0032               	movlb	18	; select bank18
  7178  1099  0099               	movwf	25	;volatile
  7179                           
  7180                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
  7181  109A  019B               	clrf	27	;volatile
  7182                           
  7183                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
  7184  109B  019D               	clrf	29	;volatile
  7185                           
  7186                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x07;
  7187  109C  3007               	movlw	7
  7188  109D  009F               	movwf	31	;volatile
  7189                           
  7190                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
  7191  109E  019E               	clrf	30	;volatile
  7192  109F  0008               	return
  7193  10A0                     __end_of_OSCILLATOR_Initialize:	
  7194                           
  7195                           	psect	text12
  7196  120B                     __ptext12:	
  7197 ;; *************** function _I2C1_Initialize *****************
  7198 ;; Defined at:
  7199 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;		None
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      void 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;Total ram usage:        1 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    4
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_SYSTEM_Initialize
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function _I2C1_Initialize
  7229  120B                     _I2C1_Initialize:	
  7230                           
  7231                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  7232                           
  7233                           ;incstack = 0
  7234                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  7235  120B  30DA               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  7236  120C  0020               	movlb	0	; select bank0
  7237  120D  00A0               	movwf	??_I2C1_Initialize
  7238  120E  0820               	movf	??_I2C1_Initialize,w
  7239  120F  0021               	movlb	1	; select bank1
  7240  1210  00CC               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  7241                           
  7242                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  7243  1211  30DA               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  7244  1212  0020               	movlb	0	; select bank0
  7245  1213  00A0               	movwf	??_I2C1_Initialize
  7246  1214  0820               	movf	??_I2C1_Initialize,w
  7247  1215  0021               	movlb	1	; select bank1
  7248  1216  00CB               	movwf	_i2c1_object^(0+128)
  7249                           
  7250                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  7251  1217  14CD               	bsf	(_i2c1_object^(0+128)+2),1
  7252                           
  7253                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  7254  1218  104D               	bcf	(_i2c1_object^(0+128)+2),0
  7255                           
  7256                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  7257  1219  01CF               	clrf	(_i2c1_object^(0+128)+4)
  7258                           
  7259                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  7260  121A  0024               	movlb	4	; select bank4
  7261  121B  0194               	clrf	20	;volatile
  7262                           
  7263                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  7264  121C  3028               	movlw	40
  7265  121D  0095               	movwf	21	;volatile
  7266                           
  7267                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  7268  121E  0197               	clrf	23	;volatile
  7269                           
  7270                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x30;
  7271  121F  3030               	movlw	48
  7272  1220  0092               	movwf	18	;volatile
  7273                           
  7274                           ;mcc_generated_files/i2c1.c: 217:     PIR1bits.SSP1IF = 0;
  7275  1221  0020               	movlb	0	; select bank0
  7276  1222  1191               	bcf	17,3	;volatile
  7277                           
  7278                           ;mcc_generated_files/i2c1.c: 218:     PIR1bits.BCL1IF = 0;
  7279  1223  1111               	bcf	17,2	;volatile
  7280                           
  7281                           ;mcc_generated_files/i2c1.c: 221:     PIE1bits.SSP1IE = 1;
  7282  1224  0021               	movlb	1	; select bank1
  7283  1225  1591               	bsf	17,3	;volatile
  7284                           
  7285                           ;mcc_generated_files/i2c1.c: 222:     PIE1bits.BCL1IE = 1;
  7286  1226  1511               	bsf	17,2	;volatile
  7287  1227  0008               	return
  7288  1228                     __end_of_I2C1_Initialize:	
  7289                           
  7290                           	psect	text13
  7291  14E2                     __ptext13:	
  7292 ;; *************** function _EUSART_Initialize *****************
  7293 ;; Defined at:
  7294 ;;		line 87 in file "mcc_generated_files/eusart.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0, pclath, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;Total ram usage:        1 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    5
  7315 ;; This function calls:
  7316 ;;		_EUSART_SetErrorHandler
  7317 ;;		_EUSART_SetFramingErrorHandler
  7318 ;;		_EUSART_SetOverrunErrorHandler
  7319 ;;		_EUSART_SetRxInterruptHandler
  7320 ;;		_EUSART_SetTxInterruptHandler
  7321 ;; This function is called by:
  7322 ;;		_SYSTEM_Initialize
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _EUSART_Initialize
  7328  14E2                     _EUSART_Initialize:	
  7329                           
  7330                           ;mcc_generated_files/eusart.c: 90:     PIE1bits.RCIE = 0;
  7331                           
  7332                           ;incstack = 0
  7333                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7334  14E2  0021               	movlb	1	; select bank1
  7335  14E3  1291               	bcf	17,5	;volatile
  7336                           
  7337                           ;mcc_generated_files/eusart.c: 91:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  7338  14E4  3090               	movlw	low _EUSART_Receive_ISR
  7339  14E5  0020               	movlb	0	; select bank0
  7340  14E6  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  7341  14E7  3013               	movlw	high _EUSART_Receive_ISR
  7342  14E8  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  7343  14E9  3190  2085  3194   	fcall	_EUSART_SetRxInterruptHandler
  7344                           
  7345                           ;mcc_generated_files/eusart.c: 92:     PIE1bits.TXIE = 0;
  7346  14EC  0021               	movlb	1	; select bank1
  7347  14ED  1211               	bcf	17,4	;volatile
  7348                           
  7349                           ;mcc_generated_files/eusart.c: 93:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  7350  14EE  3065               	movlw	low _EUSART_Transmit_ISR
  7351  14EF  0020               	movlb	0	; select bank0
  7352  14F0  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  7353  14F1  3012               	movlw	high _EUSART_Transmit_ISR
  7354  14F2  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  7355  14F3  3190  208E  3194   	fcall	_EUSART_SetTxInterruptHandler
  7356                           
  7357                           ;mcc_generated_files/eusart.c: 97:     BAUD1CON = 0x08;
  7358  14F6  3008               	movlw	8
  7359  14F7  0023               	movlb	3	; select bank3
  7360  14F8  009F               	movwf	31	;volatile
  7361                           
  7362                           ;mcc_generated_files/eusart.c: 100:     RC1STA = 0x90;
  7363  14F9  3090               	movlw	144
  7364  14FA  009D               	movwf	29	;volatile
  7365                           
  7366                           ;mcc_generated_files/eusart.c: 103:     TX1STA = 0x24;
  7367  14FB  3024               	movlw	36
  7368  14FC  009E               	movwf	30	;volatile
  7369                           
  7370                           ;mcc_generated_files/eusart.c: 106:     SP1BRGL = 0x40;
  7371  14FD  3040               	movlw	64
  7372  14FE  009B               	movwf	27	;volatile
  7373                           
  7374                           ;mcc_generated_files/eusart.c: 109:     SP1BRGH = 0x03;
  7375  14FF  3003               	movlw	3
  7376  1500  009C               	movwf	28	;volatile
  7377                           
  7378                           ;mcc_generated_files/eusart.c: 112:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  7379  1501  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
  7380  1502  0020               	movlb	0	; select bank0
  7381  1503  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7382  1504  3004               	movlw	high _EUSART_DefaultFramingErrorHandler
  7383  1505  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7384  1506  3190  2073  3194   	fcall	_EUSART_SetFramingErrorHandler
  7385                           
  7386                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  7387  1509  3032               	movlw	low _EUSART_DefaultOverrunErrorHandler
  7388  150A  0020               	movlb	0	; select bank0
  7389  150B  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7390  150C  3010               	movlw	high _EUSART_DefaultOverrunErrorHandler
  7391  150D  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7392  150E  3190  207C  3194   	fcall	_EUSART_SetOverrunErrorHandler
  7393                           
  7394                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  7395  1511  302C               	movlw	low _EUSART_DefaultErrorHandler
  7396  1512  0020               	movlb	0	; select bank0
  7397  1513  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7398  1514  3010               	movlw	high _EUSART_DefaultErrorHandler
  7399  1515  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7400  1516  3190  206A         	fcall	_EUSART_SetErrorHandler
  7401                           
  7402                           ;mcc_generated_files/eusart.c: 116:     eusartRxLastError.status = 0;
  7403  1518  0021               	movlb	1	; select bank1
  7404  1519  01EE               	clrf	_eusartRxLastError^(0+128)	;volatile
  7405                           
  7406                           ;mcc_generated_files/eusart.c: 119:     eusartTxHead = 0;
  7407  151A  01F4               	clrf	_eusartTxHead	;volatile
  7408                           
  7409                           ;mcc_generated_files/eusart.c: 120:     eusartTxTail = 0;
  7410  151B  01EF               	clrf	_eusartTxTail^(0+128)	;volatile
  7411                           
  7412                           ;mcc_generated_files/eusart.c: 121:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  7413  151C  3040               	movlw	64
  7414  151D  0020               	movlb	0	; select bank0
  7415  151E  00A2               	movwf	??_EUSART_Initialize
  7416  151F  0822               	movf	??_EUSART_Initialize,w
  7417  1520  0023               	movlb	3	; select bank3
  7418  1521  00EB               	movwf	_eusartTxBufferRemaining^(0+384)	;volatile
  7419                           
  7420                           ;mcc_generated_files/eusart.c: 123:     eusartRxHead = 0;
  7421  1522  01F3               	clrf	_eusartRxHead	;volatile
  7422                           
  7423                           ;mcc_generated_files/eusart.c: 124:     eusartRxTail = 0;
  7424  1523  01F2               	clrf	_eusartRxTail	;volatile
  7425                           
  7426                           ;mcc_generated_files/eusart.c: 125:     eusartRxCount = 0;
  7427  1524  0022               	movlb	2	; select bank2
  7428  1525  01EF               	clrf	_eusartRxCount^(0+256)	;volatile
  7429                           
  7430                           ;mcc_generated_files/eusart.c: 128:     PIE1bits.RCIE = 1;
  7431  1526  0021               	movlb	1	; select bank1
  7432  1527  1691               	bsf	17,5	;volatile
  7433  1528  0008               	return
  7434  1529                     __end_of_EUSART_Initialize:	
  7435                           
  7436                           	psect	text14
  7437  108E                     __ptext14:	
  7438 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  7439 ;; Defined at:
  7440 ;;		line 300 in file "mcc_generated_files/eusart.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7443 ;;		 -> EUSART_Transmit_ISR(1), 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      void 
  7448 ;; Registers used:
  7449 ;;		wreg
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;Total ram usage:        2 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:    4
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_EUSART_Initialize
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           
  7470                           ;psect for function _EUSART_SetTxInterruptHandler
  7471  108E                     _EUSART_SetTxInterruptHandler:	
  7472                           
  7473                           ;mcc_generated_files/eusart.c: 301:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7474                           
  7475                           ;incstack = 0
  7476                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  7477  108E  0020               	movlb	0	; select bank0
  7478  108F  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  7479  1090  0023               	movlb	3	; select bank3
  7480  1091  00EA               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384)
  7481  1092  0020               	movlb	0	; select bank0
  7482  1093  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  7483  1094  0023               	movlb	3	; select bank3
  7484  1095  00E9               	movwf	_EUSART_TxDefaultInterruptHandler^(0+384)
  7485  1096  0008               	return
  7486  1097                     __end_of_EUSART_SetTxInterruptHandler:	
  7487                           
  7488                           	psect	text15
  7489  1085                     __ptext15:	
  7490 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7491 ;; Defined at:
  7492 ;;		line 304 in file "mcc_generated_files/eusart.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7495 ;;		 -> EUSART_Receive_ISR(1), 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;Total ram usage:        2 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    4
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_EUSART_Initialize
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           
  7522                           ;psect for function _EUSART_SetRxInterruptHandler
  7523  1085                     _EUSART_SetRxInterruptHandler:	
  7524                           
  7525                           ;mcc_generated_files/eusart.c: 305:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7526                           
  7527                           ;incstack = 0
  7528                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  7529  1085  0020               	movlb	0	; select bank0
  7530  1086  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  7531  1087  0023               	movlb	3	; select bank3
  7532  1088  00E8               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384)
  7533  1089  0020               	movlb	0	; select bank0
  7534  108A  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  7535  108B  0023               	movlb	3	; select bank3
  7536  108C  00E7               	movwf	_EUSART_RxDefaultInterruptHandler^(0+384)
  7537  108D  0008               	return
  7538  108E                     __end_of_EUSART_SetRxInterruptHandler:	
  7539                           
  7540                           	psect	text16
  7541  107C                     __ptext16:	
  7542 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7543 ;; Defined at:
  7544 ;;		line 292 in file "mcc_generated_files/eusart.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7547 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;		None
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  1    wreg      void 
  7552 ;; Registers used:
  7553 ;;		wreg
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7559 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;Total ram usage:        2 bytes
  7564 ;; Hardware stack levels used:    1
  7565 ;; Hardware stack levels required when called:    4
  7566 ;; This function calls:
  7567 ;;		Nothing
  7568 ;; This function is called by:
  7569 ;;		_EUSART_Initialize
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           
  7574                           ;psect for function _EUSART_SetOverrunErrorHandler
  7575  107C                     _EUSART_SetOverrunErrorHandler:	
  7576                           
  7577                           ;mcc_generated_files/eusart.c: 293:     EUSART_OverrunErrorHandler = interruptHandler;
  7578                           
  7579                           ;incstack = 0
  7580                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7581  107C  0020               	movlb	0	; select bank0
  7582  107D  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7583  107E  0023               	movlb	3	; select bank3
  7584  107F  00E4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
  7585  1080  0020               	movlb	0	; select bank0
  7586  1081  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7587  1082  0023               	movlb	3	; select bank3
  7588  1083  00E3               	movwf	_EUSART_OverrunErrorHandler^(0+384)
  7589  1084  0008               	return
  7590  1085                     __end_of_EUSART_SetOverrunErrorHandler:	
  7591                           
  7592                           	psect	text17
  7593  1073                     __ptext17:	
  7594 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7595 ;; Defined at:
  7596 ;;		line 288 in file "mcc_generated_files/eusart.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7599 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;		None
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  1    wreg      void 
  7604 ;; Registers used:
  7605 ;;		wreg
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;Total ram usage:        2 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    4
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_EUSART_Initialize
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           
  7626                           ;psect for function _EUSART_SetFramingErrorHandler
  7627  1073                     _EUSART_SetFramingErrorHandler:	
  7628                           
  7629                           ;mcc_generated_files/eusart.c: 289:     EUSART_FramingErrorHandler = interruptHandler;
  7630                           
  7631                           ;incstack = 0
  7632                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7633  1073  0020               	movlb	0	; select bank0
  7634  1074  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7635  1075  0023               	movlb	3	; select bank3
  7636  1076  00E6               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
  7637  1077  0020               	movlb	0	; select bank0
  7638  1078  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7639  1079  0023               	movlb	3	; select bank3
  7640  107A  00E5               	movwf	_EUSART_FramingErrorHandler^(0+384)
  7641  107B  0008               	return
  7642  107C                     __end_of_EUSART_SetFramingErrorHandler:	
  7643                           
  7644                           	psect	text18
  7645  106A                     __ptext18:	
  7646 ;; *************** function _EUSART_SetErrorHandler *****************
  7647 ;; Defined at:
  7648 ;;		line 296 in file "mcc_generated_files/eusart.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7651 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  1    wreg      void 
  7656 ;; Registers used:
  7657 ;;		wreg
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;Total ram usage:        2 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    4
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_EUSART_Initialize
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function _EUSART_SetErrorHandler
  7679  106A                     _EUSART_SetErrorHandler:	
  7680                           
  7681                           ;mcc_generated_files/eusart.c: 297:     EUSART_ErrorHandler = interruptHandler;
  7682                           
  7683                           ;incstack = 0
  7684                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7685  106A  0020               	movlb	0	; select bank0
  7686  106B  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7687  106C  0023               	movlb	3	; select bank3
  7688  106D  00E2               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
  7689  106E  0020               	movlb	0	; select bank0
  7690  106F  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7691  1070  0023               	movlb	3	; select bank3
  7692  1071  00E1               	movwf	_EUSART_ErrorHandler^(0+384)
  7693  1072  0008               	return
  7694  1073                     __end_of_EUSART_SetErrorHandler:	
  7695                           
  7696                           	psect	text19
  7697  1061                     __ptext19:	
  7698 ;; *************** function _ADC_Initialize *****************
  7699 ;; Defined at:
  7700 ;;		line 65 in file "mcc_generated_files/adc.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    4
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_SYSTEM_Initialize
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           
  7729                           ;psect for function _ADC_Initialize
  7730  1061                     _ADC_Initialize:	
  7731                           
  7732                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  7733                           
  7734                           ;incstack = 0
  7735                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7736  1061  3001               	movlw	1
  7737  1062  0021               	movlb	1	; select bank1
  7738  1063  009D               	movwf	29	;volatile
  7739                           
  7740                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xE0;
  7741  1064  30E0               	movlw	224
  7742  1065  009E               	movwf	30	;volatile
  7743                           
  7744                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
  7745  1066  019F               	clrf	31	;volatile
  7746                           
  7747                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  7748  1067  019B               	clrf	27	;volatile
  7749                           
  7750                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  7751  1068  019C               	clrf	28	;volatile
  7752  1069  0008               	return
  7753  106A                     __end_of_ADC_Initialize:	
  7754                           
  7755                           	psect	text20
  7756  1698                     __ptext20:	
  7757 ;; *************** function _Handler_Uart *****************
  7758 ;; Defined at:
  7759 ;;		line 516 in file "main.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  rcv_Buff       64    0[BANK2 ] unsigned char [64]
  7764 ;;  i               1   65[BANK2 ] unsigned char 
  7765 ;;  rx_len          1   64[BANK2 ] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1    wreg      void 
  7768 ;; Registers used:
  7769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7776 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Totals:         0       0       2      66       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;Total ram usage:       68 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:   14
  7782 ;; This function calls:
  7783 ;;		_EUSART_Read_N
  7784 ;;		_UartResponse_Err
  7785 ;;		_UartResponse_ReadCmd
  7786 ;;		_UartResponse_WriteCmd
  7787 ;;		_memset
  7788 ;; This function is called by:
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function _Handler_Uart
  7795  1698                     _Handler_Uart:	
  7796                           
  7797                           ;main.c: 518:     uint8_t rcv_Buff[64] = {0};
  7798                           
  7799                           ;incstack = 0
  7800                           ; Regs used in _Handler_Uart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7801  1698  3020               	movlw	low Handler_Uart@rcv_Buff
  7802  1699  0086               	movwf	6
  7803  169A  3001               	movlw	high Handler_Uart@rcv_Buff
  7804  169B  0087               	movwf	7
  7805  169C  3040               	movlw	64
  7806  169D  0021               	movlb	1	; select bank1
  7807  169E  00C7               	movwf	??_Handler_Uart^(0+128)
  7808  169F  3000               	movlw	0
  7809  16A0                     u4550:	
  7810  16A0  001E               	movwi fsr1++
  7811  16A1  0BC7               	decfsz	??_Handler_Uart^(0+128),f
  7812  16A2  2EA0               	goto	u4550
  7813                           
  7814                           ;main.c: 522:    if ((eusartRxCount==0) || (eusartRxCount>64)) return;
  7815  16A3  0022               	movlb	2	; select bank2
  7816  16A4  086F               	movf	_eusartRxCount^(0+256),w	;volatile
  7817  16A5  1903               	btfsc	3,2
  7818  16A6  0008               	return
  7819  16A7  3041               	movlw	65
  7820  16A8  026F               	subwf	_eusartRxCount^(0+256),w	;volatile
  7821  16A9  1803               	btfsc	3,0
  7822  16AA  0008               	return
  7823                           
  7824                           ;main.c: 525:     memset(rcv_Buff,0,sizeof(rcv_Buff));
  7825  16AB  3020               	movlw	low Handler_Uart@rcv_Buff
  7826  16AC  0020               	movlb	0	; select bank0
  7827  16AD  00A0               	movwf	memset@dest
  7828  16AE  3001               	movlw	high Handler_Uart@rcv_Buff
  7829  16AF  00A1               	movwf	memset@dest+1
  7830  16B0  3000               	movlw	0
  7831  16B1  00A2               	movwf	memset@c
  7832  16B2  00A3               	movwf	memset@c+1
  7833  16B3  3040               	movlw	64
  7834  16B4  00A4               	movwf	memset@n
  7835  16B5  3000               	movlw	0
  7836  16B6  00A5               	movwf	memset@n+1
  7837  16B7  3197  2744  3196   	fcall	_memset
  7838                           
  7839                           ;main.c: 526:     rx_len = EUSART_Read_N((uint8_t*)rcv_Buff);
  7840  16BA  3020               	movlw	(low (Handler_Uart@rcv_Buff| (0+256)))& (0+255)
  7841  16BB  3194  24A5  3196   	fcall	_EUSART_Read_N
  7842  16BE  0021               	movlb	1	; select bank1
  7843  16BF  00C7               	movwf	??_Handler_Uart^(0+128)
  7844  16C0  0847               	movf	??_Handler_Uart^(0+128),w
  7845  16C1  0022               	movlb	2	; select bank2
  7846  16C2  00E0               	movwf	Handler_Uart@rx_len^(0+256)
  7847                           
  7848                           ;main.c: 527:     cmd.Command_type = rcv_Buff[0];
  7849  16C3  0820               	movf	Handler_Uart@rcv_Buff^(0+256),w
  7850  16C4  0021               	movlb	1	; select bank1
  7851  16C5  00C7               	movwf	??_Handler_Uart^(0+128)
  7852  16C6  0847               	movf	??_Handler_Uart^(0+128),w
  7853  16C7  0024               	movlb	4	; select bank4
  7854  16C8  00A0               	movwf	_cmd^(0+512)
  7855                           
  7856                           ;main.c: 528:     cmd.Total_Length = rcv_Buff[1];
  7857  16C9  0022               	movlb	2	; select bank2
  7858  16CA  0821               	movf	(Handler_Uart@rcv_Buff^(0+256)+1),w
  7859  16CB  0021               	movlb	1	; select bank1
  7860  16CC  00C7               	movwf	??_Handler_Uart^(0+128)
  7861  16CD  0847               	movf	??_Handler_Uart^(0+128),w
  7862  16CE  0024               	movlb	4	; select bank4
  7863  16CF  00A1               	movwf	(_cmd^(0+512)+1)
  7864                           
  7865                           ;main.c: 529:     cmd.Data_Type = rcv_Buff[2];
  7866  16D0  0022               	movlb	2	; select bank2
  7867  16D1  0822               	movf	(Handler_Uart@rcv_Buff^(0+256)+2),w
  7868  16D2  0021               	movlb	1	; select bank1
  7869  16D3  00C7               	movwf	??_Handler_Uart^(0+128)
  7870  16D4  0847               	movf	??_Handler_Uart^(0+128),w
  7871  16D5  0024               	movlb	4	; select bank4
  7872  16D6  00A2               	movwf	(_cmd^(0+512)+2)
  7873                           
  7874                           ;main.c: 531:     cmd.Command_type = rcv_Buff[0];
  7875  16D7  0022               	movlb	2	; select bank2
  7876  16D8  0820               	movf	Handler_Uart@rcv_Buff^(0+256),w
  7877  16D9  0021               	movlb	1	; select bank1
  7878  16DA  00C7               	movwf	??_Handler_Uart^(0+128)
  7879  16DB  0847               	movf	??_Handler_Uart^(0+128),w
  7880  16DC  0024               	movlb	4	; select bank4
  7881  16DD  00A0               	movwf	_cmd^(0+512)
  7882                           
  7883                           ;main.c: 532:     cmd.Total_Length = rcv_Buff[1];
  7884  16DE  0022               	movlb	2	; select bank2
  7885  16DF  0821               	movf	(Handler_Uart@rcv_Buff^(0+256)+1),w
  7886  16E0  0021               	movlb	1	; select bank1
  7887  16E1  00C7               	movwf	??_Handler_Uart^(0+128)
  7888  16E2  0847               	movf	??_Handler_Uart^(0+128),w
  7889  16E3  0024               	movlb	4	; select bank4
  7890  16E4  00A1               	movwf	(_cmd^(0+512)+1)
  7891                           
  7892                           ;main.c: 533:     cmd.Data_Type = rcv_Buff[2];
  7893  16E5  0022               	movlb	2	; select bank2
  7894  16E6  0822               	movf	(Handler_Uart@rcv_Buff^(0+256)+2),w
  7895  16E7  0021               	movlb	1	; select bank1
  7896  16E8  00C7               	movwf	??_Handler_Uart^(0+128)
  7897  16E9  0847               	movf	??_Handler_Uart^(0+128),w
  7898  16EA  0024               	movlb	4	; select bank4
  7899  16EB  00A2               	movwf	(_cmd^(0+512)+2)
  7900                           
  7901                           ;main.c: 535:     if (cmd.Total_Length<2) return ;
  7902  16EC  3002               	movlw	2
  7903  16ED  0221               	subwf	(_cmd^(0+512)+1),w
  7904  16EE  1C03               	btfss	3,0
  7905  16EF  0008               	return
  7906                           
  7907                           ;main.c: 537:     for(i=0;i<(cmd.Total_Length-2);i++){
  7908  16F0  0022               	movlb	2	; select bank2
  7909  16F1  01E1               	clrf	Handler_Uart@i^(0+256)
  7910  16F2                     l5875:	
  7911  16F2  0024               	movlb	4	; select bank4
  7912  16F3  0821               	movf	(_cmd^(0+512)+1),w
  7913  16F4  3EFE               	addlw	254
  7914  16F5  0021               	movlb	1	; select bank1
  7915  16F6  00C7               	movwf	??_Handler_Uart^(0+128)
  7916  16F7  30FF               	movlw	255
  7917  16F8  1803               	skipnc
  7918  16F9  3000               	movlw	0
  7919  16FA  00C8               	movwf	(??_Handler_Uart^(0+128)+1)
  7920  16FB  0848               	movf	(??_Handler_Uart+1)^(0+128),w
  7921  16FC  3A80               	xorlw	128
  7922  16FD  3C80               	sublw	128
  7923  16FE  1D03               	skipz
  7924  16FF  2F03               	goto	u4595
  7925  1700  0847               	movf	??_Handler_Uart^(0+128),w
  7926  1701  0022               	movlb	2	; select bank2
  7927  1702  0261               	subwf	Handler_Uart@i^(0+256),w
  7928  1703                     u4595:	
  7929  1703  1803               	btfsc	3,0
  7930  1704  2F1E               	goto	l5877
  7931                           
  7932                           ;main.c: 538:         cmd.Value[i]=rcv_Buff[3+i];
  7933  1705  0022               	movlb	2	; select bank2
  7934  1706  0861               	movf	Handler_Uart@i^(0+256),w
  7935  1707  3E03               	addlw	3
  7936  1708  3E20               	addlw	(low (Handler_Uart@rcv_Buff| (0+256)))& (0+255)
  7937  1709  0086               	movwf	6
  7938  170A  3001               	movlw	1	; select bank2/3
  7939  170B  0087               	movwf	7
  7940  170C  0801               	movf	1,w
  7941  170D  0021               	movlb	1	; select bank1
  7942  170E  00C7               	movwf	??_Handler_Uart^(0+128)
  7943  170F  0022               	movlb	2	; select bank2
  7944  1710  0861               	movf	Handler_Uart@i^(0+256),w
  7945  1711  3E23               	addlw	(low ((_cmd| (0+512)+3)))& (0+255)
  7946  1712  0086               	movwf	6
  7947  1713  3002               	movlw	2	; select bank4/5
  7948  1714  0087               	movwf	7
  7949  1715  0021               	movlb	1	; select bank1
  7950  1716  0847               	movf	??_Handler_Uart^(0+128),w
  7951  1717  0081               	movwf	1
  7952                           
  7953                           ;main.c: 539:     }
  7954  1718  3001               	movlw	1
  7955  1719  00C7               	movwf	??_Handler_Uart^(0+128)
  7956  171A  0847               	movf	??_Handler_Uart^(0+128),w
  7957  171B  0022               	movlb	2	; select bank2
  7958  171C  07E1               	addwf	Handler_Uart@i^(0+256),f
  7959  171D  2EF2               	goto	l5875
  7960  171E                     l5877:	
  7961                           
  7962                           ;main.c: 540:     if ( (cmd.Command_type==0x01)&&(rx_len == 3) ) {
  7963  171E  0024               	movlb	4	; select bank4
  7964  171F  0320               	decf	_cmd^(0+512),w
  7965  1720  1D03               	btfss	3,2
  7966  1721  2F2C               	goto	l5883
  7967  1722  3003               	movlw	3
  7968  1723  0022               	movlb	2	; select bank2
  7969  1724  0660               	xorwf	Handler_Uart@rx_len^(0+256),w
  7970  1725  1D03               	btfss	3,2
  7971  1726  2F2C               	goto	l5883
  7972                           
  7973                           ;main.c: 541:         UartResponse_ReadCmd(cmd.Data_Type);
  7974  1727  0024               	movlb	4	; select bank4
  7975  1728  0822               	movf	(_cmd^(0+512)+2),w
  7976  1729  318E  2696         	fcall	_UartResponse_ReadCmd
  7977                           
  7978                           ;main.c: 542:     } else if(cmd.Command_type == 0x03 && rx_len <= 0x0E) {
  7979  172B  0008               	return
  7980  172C                     l5883:	
  7981  172C  3003               	movlw	3
  7982  172D  0024               	movlb	4	; select bank4
  7983  172E  0620               	xorwf	_cmd^(0+512),w
  7984  172F  1D03               	btfss	3,2
  7985  1730  2F41               	goto	l5889
  7986  1731  300F               	movlw	15
  7987  1732  0022               	movlb	2	; select bank2
  7988  1733  0260               	subwf	Handler_Uart@rx_len^(0+256),w
  7989  1734  1803               	skipnc
  7990  1735  2F41               	goto	l5889
  7991                           
  7992                           ;main.c: 543:         UartResponse_WriteCmd(cmd.Data_Type, cmd.Value[0]);
  7993  1736  0024               	movlb	4	; select bank4
  7994  1737  0823               	movf	(_cmd^(0+512)+3),w
  7995  1738  0021               	movlb	1	; select bank1
  7996  1739  00C7               	movwf	??_Handler_Uart^(0+128)
  7997  173A  0847               	movf	??_Handler_Uart^(0+128),w
  7998  173B  00AC               	movwf	UartResponse_WriteCmd@value^(0+128)
  7999  173C  0024               	movlb	4	; select bank4
  8000  173D  0822               	movf	(_cmd^(0+512)+2),w
  8001  173E  318D  253F         	fcall	_UartResponse_WriteCmd
  8002                           
  8003                           ;main.c: 544:     } else {
  8004  1740  0008               	return
  8005  1741                     l5889:	
  8006                           
  8007                           ;main.c: 545:        UartResponse_Err();
  8008  1741  3190  20C8         	fcall	_UartResponse_Err
  8009  1743  0008               	return
  8010  1744                     __end_of_Handler_Uart:	
  8011                           
  8012                           	psect	text21
  8013  0D3F                     __ptext21:	
  8014 ;; *************** function _UartResponse_WriteCmd *****************
  8015 ;; Defined at:
  8016 ;;		line 433 in file "main.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  type            1    wreg     unsigned char 
  8019 ;;  value           1   12[BANK1 ] unsigned char 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  type            1   20[BANK1 ] unsigned char 
  8022 ;;  sendBuff        4   21[BANK1 ] unsigned char [4]
  8023 ;;  data            2   17[BANK1 ] unsigned char [2]
  8024 ;;  i               1   19[BANK1 ] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8034 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;Total ram usage:       13 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:   13
  8041 ;; This function calls:
  8042 ;;		_DATAEE_WriteByte
  8043 ;;		_EraseResetVector
  8044 ;;		_I2C1_WBlk
  8045 ;;		_PWM5_LoadDutyValue
  8046 ;;		_PWM6_LoadDutyValue
  8047 ;;		_Signal_BL_Requested
  8048 ;;		_UART_Write_Buffer
  8049 ;;		___awdiv
  8050 ;;		___wmul
  8051 ;;		_printf
  8052 ;; This function is called by:
  8053 ;;		_Handler_Uart
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           
  8058                           ;psect for function _UartResponse_WriteCmd
  8059  0D3F                     _UartResponse_WriteCmd:	
  8060                           
  8061                           ;incstack = 0
  8062                           ; Regs used in _UartResponse_WriteCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8063                           ;UartResponse_WriteCmd@type stored from wreg
  8064  0D3F  0021               	movlb	1	; select bank1
  8065  0D40  00B4               	movwf	UartResponse_WriteCmd@type^(0+128)
  8066                           
  8067                           ;main.c: 433: void UartResponse_WriteCmd(uint8_t type, uint8_t value);main.c: 434: {;mai
      +                          n.c: 435:     uint8_t sendBuff[4] = {0};
  8068  0D41  3000               	movlw	0
  8069  0D42  00B8               	movwf	(UartResponse_WriteCmd@sendBuff+3)^(0+128)
  8070  0D43  3000               	movlw	0
  8071  0D44  00B7               	movwf	(UartResponse_WriteCmd@sendBuff+2)^(0+128)
  8072  0D45  3000               	movlw	0
  8073  0D46  00B6               	movwf	(UartResponse_WriteCmd@sendBuff+1)^(0+128)
  8074  0D47  3000               	movlw	0
  8075  0D48  00B5               	movwf	UartResponse_WriteCmd@sendBuff^(0+128)
  8076                           
  8077                           ;main.c: 437:     uint8_t data[2];;main.c: 439:     sendBuff[0] = 0x04;
  8078  0D49  3004               	movlw	4
  8079  0D4A  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8080  0D4B  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8081  0D4C  00B5               	movwf	UartResponse_WriteCmd@sendBuff^(0+128)
  8082                           
  8083                           ;main.c: 440:     sendBuff[1] = 0x02;
  8084  0D4D  3002               	movlw	2
  8085  0D4E  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8086  0D4F  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8087  0D50  00B6               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+1)
  8088                           
  8089                           ;main.c: 441:     sendBuff[2] = type;
  8090  0D51  0834               	movf	UartResponse_WriteCmd@type^(0+128),w
  8091  0D52  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8092  0D53  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8093  0D54  00B7               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+2)
  8094                           
  8095                           ;main.c: 443:     switch (type){
  8096  0D55  2E72               	goto	l5751
  8097  0D56                     l5677:	
  8098                           
  8099                           ;main.c: 445:             CurrentPWM1 = value;
  8100  0D56  082C               	movf	UartResponse_WriteCmd@value^(0+128),w
  8101  0D57  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8102  0D58  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8103  0D59  00DD               	movwf	_CurrentPWM1^(0+128)
  8104                           
  8105                           ;main.c: 446:             PWM5_LoadDutyValue((CurrentPWM1*319)/100);
  8106  0D5A  3064               	movlw	100
  8107  0D5B  0020               	movlb	0	; select bank0
  8108  0D5C  00A6               	movwf	___awdiv@divisor
  8109  0D5D  3000               	movlw	0
  8110  0D5E  00A7               	movwf	___awdiv@divisor+1
  8111  0D5F  0021               	movlb	1	; select bank1
  8112  0D60  085D               	movf	_CurrentPWM1^(0+128),w
  8113  0D61  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8114  0D62  01AE               	clrf	(??_UartResponse_WriteCmd^(0+128)+1)
  8115  0D63  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8116  0D64  0020               	movlb	0	; select bank0
  8117  0D65  00A0               	movwf	___wmul@multiplier
  8118  0D66  0021               	movlb	1	; select bank1
  8119  0D67  082E               	movf	(??_UartResponse_WriteCmd+1)^(0+128),w
  8120  0D68  0020               	movlb	0	; select bank0
  8121  0D69  00A1               	movwf	___wmul@multiplier+1
  8122  0D6A  303F               	movlw	63
  8123  0D6B  00A2               	movwf	___wmul@multiplicand
  8124  0D6C  3001               	movlw	1
  8125  0D6D  00A3               	movwf	___wmul@multiplicand+1
  8126  0D6E  3191  21EF  318D   	fcall	___wmul
  8127  0D71  0020               	movlb	0	; select bank0
  8128  0D72  0821               	movf	?___wmul+1,w
  8129  0D73  00A9               	movwf	___awdiv@dividend+1
  8130  0D74  0820               	movf	?___wmul,w
  8131  0D75  00A8               	movwf	___awdiv@dividend
  8132  0D76  3195  25C4  318D   	fcall	___awdiv
  8133  0D79  0020               	movlb	0	; select bank0
  8134  0D7A  0827               	movf	?___awdiv+1,w
  8135  0D7B  00B0               	movwf	PWM5_LoadDutyValue@dutyValue+1
  8136  0D7C  0826               	movf	?___awdiv,w
  8137  0D7D  00AF               	movwf	PWM5_LoadDutyValue@dutyValue
  8138  0D7E  3191  2170  318D   	fcall	_PWM5_LoadDutyValue
  8139                           
  8140                           ;main.c: 447:             sendBuff[0] = 0x04;
  8141  0D81  3004               	movlw	4
  8142  0D82  0021               	movlb	1	; select bank1
  8143  0D83  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8144  0D84  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8145  0D85  00B5               	movwf	UartResponse_WriteCmd@sendBuff^(0+128)
  8146                           
  8147                           ;main.c: 448:             sendBuff[1] = 0x03;
  8148  0D86  3003               	movlw	3
  8149  0D87  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8150  0D88  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8151  0D89  00B6               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+1)
  8152                           
  8153                           ;main.c: 449:             sendBuff[2] = type;
  8154  0D8A  0834               	movf	UartResponse_WriteCmd@type^(0+128),w
  8155  0D8B  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8156  0D8C  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8157  0D8D  00B7               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+2)
  8158                           
  8159                           ;main.c: 450:             sendBuff[3] = CurrentPWM1;
  8160  0D8E  085D               	movf	_CurrentPWM1^(0+128),w
  8161  0D8F  2E0C               	goto	L2
  8162  0D90                     l5689:	
  8163                           ;main.c: 451:             break;
  8164                           
  8165                           
  8166                           ;main.c: 453:             CurrentPWM2 = value;
  8167  0D90  082C               	movf	UartResponse_WriteCmd@value^(0+128),w
  8168  0D91  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8169  0D92  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8170  0D93  00DC               	movwf	_CurrentPWM2^(0+128)
  8171                           
  8172                           ;main.c: 454:             PWM6_LoadDutyValue((CurrentPWM2*319)/100);
  8173  0D94  3064               	movlw	100
  8174  0D95  0020               	movlb	0	; select bank0
  8175  0D96  00A6               	movwf	___awdiv@divisor
  8176  0D97  3000               	movlw	0
  8177  0D98  00A7               	movwf	___awdiv@divisor+1
  8178  0D99  0021               	movlb	1	; select bank1
  8179  0D9A  085C               	movf	_CurrentPWM2^(0+128),w
  8180  0D9B  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8181  0D9C  01AE               	clrf	(??_UartResponse_WriteCmd^(0+128)+1)
  8182  0D9D  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8183  0D9E  0020               	movlb	0	; select bank0
  8184  0D9F  00A0               	movwf	___wmul@multiplier
  8185  0DA0  0021               	movlb	1	; select bank1
  8186  0DA1  082E               	movf	(??_UartResponse_WriteCmd+1)^(0+128),w
  8187  0DA2  0020               	movlb	0	; select bank0
  8188  0DA3  00A1               	movwf	___wmul@multiplier+1
  8189  0DA4  303F               	movlw	63
  8190  0DA5  00A2               	movwf	___wmul@multiplicand
  8191  0DA6  3001               	movlw	1
  8192  0DA7  00A3               	movwf	___wmul@multiplicand+1
  8193  0DA8  3191  21EF  318D   	fcall	___wmul
  8194  0DAB  0020               	movlb	0	; select bank0
  8195  0DAC  0821               	movf	?___wmul+1,w
  8196  0DAD  00A9               	movwf	___awdiv@dividend+1
  8197  0DAE  0820               	movf	?___wmul,w
  8198  0DAF  00A8               	movwf	___awdiv@dividend
  8199  0DB0  3195  25C4  318D   	fcall	___awdiv
  8200  0DB3  0020               	movlb	0	; select bank0
  8201  0DB4  0827               	movf	?___awdiv+1,w
  8202  0DB5  00B0               	movwf	PWM6_LoadDutyValue@dutyValue+1
  8203  0DB6  0826               	movf	?___awdiv,w
  8204  0DB7  00AF               	movwf	PWM6_LoadDutyValue@dutyValue
  8205  0DB8  3191  2189  318D   	fcall	_PWM6_LoadDutyValue
  8206                           
  8207                           ;main.c: 455:             sendBuff[0] = 0x04;
  8208  0DBB  3004               	movlw	4
  8209  0DBC  0021               	movlb	1	; select bank1
  8210  0DBD  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8211  0DBE  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8212  0DBF  00B5               	movwf	UartResponse_WriteCmd@sendBuff^(0+128)
  8213                           
  8214                           ;main.c: 456:             sendBuff[1] = 0x03;
  8215  0DC0  3003               	movlw	3
  8216  0DC1  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8217  0DC2  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8218  0DC3  00B6               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+1)
  8219                           
  8220                           ;main.c: 457:             sendBuff[2] = type;
  8221  0DC4  0834               	movf	UartResponse_WriteCmd@type^(0+128),w
  8222  0DC5  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8223  0DC6  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8224  0DC7  00B7               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+2)
  8225                           
  8226                           ;main.c: 458:             sendBuff[3] = CurrentPWM2;
  8227  0DC8  085C               	movf	_CurrentPWM2^(0+128),w
  8228  0DC9  2E0C               	goto	L2
  8229  0DCA                     l5701:	
  8230                           ;main.c: 459:             break;
  8231                           
  8232                           
  8233                           ;main.c: 461:             Fan_PWM_Value = value;
  8234  0DCA  082C               	movf	UartResponse_WriteCmd@value^(0+128),w
  8235  0DCB  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8236  0DCC  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8237  0DCD  00DA               	movwf	_Fan_PWM_Value^(0+128)
  8238                           
  8239                           ;main.c: 462:             printf("Fan_PWM_Value is %d value is %d \n", Fan_PWM_Value, va
      +                          lue);
  8240  0DCE  3000               	movlw	low (STR_2| (0+32768))
  8241  0DCF  00A3               	movwf	printf@fmt^(0+128)
  8242  0DD0  3098               	movlw	high (STR_2| (0+32768))
  8243  0DD1  00A4               	movwf	(printf@fmt^(0+128)+1)
  8244  0DD2  085A               	movf	_Fan_PWM_Value^(0+128),w
  8245  0DD3  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8246  0DD4  01AE               	clrf	(??_UartResponse_WriteCmd^(0+128)+1)
  8247  0DD5  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8248  0DD6  00A5               	movwf	(?_printf^(0+128)+2)
  8249  0DD7  082E               	movf	(??_UartResponse_WriteCmd+1)^(0+128),w
  8250  0DD8  00A6               	movwf	((?_printf+1)^(0+128)+2)
  8251  0DD9  082C               	movf	UartResponse_WriteCmd@value^(0+128),w
  8252  0DDA  00AF               	movwf	(??_UartResponse_WriteCmd+2)^(0+128)
  8253  0DDB  01B0               	clrf	((??_UartResponse_WriteCmd+2)^(0+128)+1)
  8254  0DDC  082F               	movf	(??_UartResponse_WriteCmd+2)^(0+128),w
  8255  0DDD  00A7               	movwf	(?_printf^(0+128)+4)
  8256  0DDE  0830               	movf	(??_UartResponse_WriteCmd+3)^(0+128),w
  8257  0DDF  00A8               	movwf	((?_printf+1)^(0+128)+4)
  8258  0DE0  3191  2143  318D   	fcall	_printf
  8259                           
  8260                           ;main.c: 467:             data[0] = 0x40;
  8261  0DE3  3040               	movlw	64
  8262  0DE4  0021               	movlb	1	; select bank1
  8263  0DE5  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8264  0DE6  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8265  0DE7  00B1               	movwf	UartResponse_WriteCmd@data^(0+128)
  8266                           
  8267                           ;main.c: 468:             data[1] = Fan_PWM_Value;
  8268  0DE8  085A               	movf	_Fan_PWM_Value^(0+128),w
  8269  0DE9  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8270  0DEA  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8271  0DEB  00B2               	movwf	(UartResponse_WriteCmd@data^(0+128)+1)
  8272                           
  8273                           ;main.c: 469:             I2C1_WBlk(0x5C, data, 2);
  8274  0DEC  305C               	movlw	92
  8275  0DED  0020               	movlb	0	; select bank0
  8276  0DEE  00A8               	movwf	I2C1_WBlk@slaveDeviceAddress
  8277  0DEF  3000               	movlw	0
  8278  0DF0  00A9               	movwf	I2C1_WBlk@slaveDeviceAddress+1
  8279  0DF1  30B1               	movlw	(low (UartResponse_WriteCmd@data| 0))& (0+255)
  8280  0DF2  0021               	movlb	1	; select bank1
  8281  0DF3  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8282  0DF4  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8283  0DF5  0020               	movlb	0	; select bank0
  8284  0DF6  00AA               	movwf	I2C1_WBlk@pData
  8285  0DF7  3002               	movlw	2
  8286  0DF8  00AB               	movwf	I2C1_WBlk@nCount
  8287  0DF9  3000               	movlw	0
  8288  0DFA  00AC               	movwf	I2C1_WBlk@nCount+1
  8289  0DFB  3194  2430  318D   	fcall	_I2C1_WBlk
  8290                           
  8291                           ;main.c: 471:             sendBuff[0] = 0x04;
  8292  0DFE  3004               	movlw	4
  8293  0DFF  0021               	movlb	1	; select bank1
  8294  0E00  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8295  0E01  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8296  0E02  00B5               	movwf	UartResponse_WriteCmd@sendBuff^(0+128)
  8297                           
  8298                           ;main.c: 472:             sendBuff[1] = 0x03;
  8299  0E03  3003               	movlw	3
  8300  0E04  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8301  0E05  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8302  0E06  00B6               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+1)
  8303                           
  8304                           ;main.c: 473:             sendBuff[2] = type;
  8305  0E07  0834               	movf	UartResponse_WriteCmd@type^(0+128),w
  8306  0E08  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8307  0E09  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8308  0E0A  00B7               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+2)
  8309                           
  8310                           ;main.c: 474:             sendBuff[3] = Fan_PWM_Value;
  8311  0E0B  085A               	movf	_Fan_PWM_Value^(0+128),w
  8312  0E0C                     L2:	
  8313  0E0C  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8314  0E0D  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8315  0E0E  00B8               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+3)
  8316                           
  8317                           ;main.c: 475:             break;
  8318  0E0F  2E8B               	goto	l5753
  8319  0E10                     l5719:	
  8320                           
  8321                           ;main.c: 479:             sendBuff[0] = 0x04;
  8322  0E10  3004               	movlw	4
  8323  0E11  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8324  0E12  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8325  0E13  00B5               	movwf	UartResponse_WriteCmd@sendBuff^(0+128)
  8326                           
  8327                           ;main.c: 480:             sendBuff[1] = 0x02;
  8328  0E14  3002               	movlw	2
  8329  0E15  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8330  0E16  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8331  0E17  00B6               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+1)
  8332                           
  8333                           ;main.c: 481:             sendBuff[2] = type;
  8334  0E18  0834               	movf	UartResponse_WriteCmd@type^(0+128),w
  8335  0E19  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8336  0E1A  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8337  0E1B  00B7               	movwf	(UartResponse_WriteCmd@sendBuff^(0+128)+2)
  8338                           
  8339                           ;main.c: 482:             UART_Write_Buffer(sendBuff, sendBuff[1]+1);
  8340  0E1C  0836               	movf	(UartResponse_WriteCmd@sendBuff^(0+128)+1),w
  8341  0E1D  3E01               	addlw	1
  8342  0E1E  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8343  0E1F  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8344  0E20  0020               	movlb	0	; select bank0
  8345  0E21  00A2               	movwf	UART_Write_Buffer@size
  8346  0E22  30B5               	movlw	(low (UartResponse_WriteCmd@sendBuff| 0))& (0+255)
  8347  0E23  3192  2285  318D   	fcall	_UART_Write_Buffer
  8348                           
  8349                           ;main.c: 483:             Signal_BL_Requested ();
  8350  0E26  3190  20FB  318D   	fcall	_Signal_BL_Requested
  8351                           
  8352                           ;main.c: 484:             EraseResetVector ();
  8353  0E29  3190  20DE  318D   	fcall	_EraseResetVector
  8354                           
  8355                           ;main.c: 485:             _delay((unsigned long)((1000)*(32000000/4000.0)));
  8356  0E2C  3029               	movlw	41
  8357  0E2D  0021               	movlb	1	; select bank1
  8358  0E2E  00AE               	movwf	(??_UartResponse_WriteCmd^(0+128)+1)
  8359  0E2F  3096               	movlw	150
  8360  0E30  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8361  0E31  307F               	movlw	127
  8362  0E32                     u5047:	
  8363  0E32  0B89               	decfsz	9,f
  8364  0E33  2E32               	goto	u5047
  8365  0E34  0BAD               	decfsz	??_UartResponse_WriteCmd^(0+128),f
  8366  0E35  2E32               	goto	u5047
  8367  0E36  0BAE               	decfsz	(??_UartResponse_WriteCmd^(0+128)+1),f
  8368  0E37  2E32               	goto	u5047
  8369  0E38                     l5729:	
  8370                           
  8371                           ;main.c: 486:             flg_reset = 1;
  8372  0E38  0022               	movlb	2	; select bank2
  8373  0E39  01EE               	clrf	_flg_reset^(0+256)
  8374  0E3A  0AEE               	incf	_flg_reset^(0+256),f
  8375                           
  8376                           ;main.c: 487:             break;
  8377  0E3B  2E8B               	goto	l5753
  8378  0E3C                     l5731:	
  8379                           
  8380                           ;main.c: 489:             DATAEE_WriteByte(0xF000, 0xAA);
  8381  0E3C  3000               	movlw	0
  8382  0E3D  0020               	movlb	0	; select bank0
  8383  0E3E  00A0               	movwf	DATAEE_WriteByte@bAdd
  8384  0E3F  30F0               	movlw	240
  8385  0E40  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8386  0E41  30AA               	movlw	170
  8387  0E42  0021               	movlb	1	; select bank1
  8388  0E43  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8389  0E44  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8390  0E45  0020               	movlb	0	; select bank0
  8391  0E46  00A2               	movwf	DATAEE_WriteByte@bData
  8392  0E47  3192  22C6  318D   	fcall	_DATAEE_WriteByte
  8393                           
  8394                           ;main.c: 490:             for(i=0;i<sizeof(Default_PWM_Table);i++){
  8395  0E4A  0021               	movlb	1	; select bank1
  8396  0E4B  01B3               	clrf	UartResponse_WriteCmd@i^(0+128)
  8397  0E4C                     l5739:	
  8398                           
  8399                           ;main.c: 491:                 DATAEE_WriteByte(0xF000 +1 +3 +i,cmd.Value[i]);
  8400  0E4C  0833               	movf	UartResponse_WriteCmd@i^(0+128),w
  8401  0E4D  3E04               	addlw	4
  8402  0E4E  0020               	movlb	0	; select bank0
  8403  0E4F  00A0               	movwf	DATAEE_WriteByte@bAdd
  8404  0E50  30F0               	movlw	240
  8405  0E51  1803               	skipnc
  8406  0E52  30F1               	movlw	241
  8407  0E53  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8408  0E54  0021               	movlb	1	; select bank1
  8409  0E55  0833               	movf	UartResponse_WriteCmd@i^(0+128),w
  8410  0E56  3E23               	addlw	(low ((_cmd| (0+512)+3)))& (0+255)
  8411  0E57  0086               	movwf	6
  8412  0E58  3002               	movlw	2	; select bank4/5
  8413  0E59  0087               	movwf	7
  8414  0E5A  0801               	movf	1,w
  8415  0E5B  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8416  0E5C  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8417  0E5D  0020               	movlb	0	; select bank0
  8418  0E5E  00A2               	movwf	DATAEE_WriteByte@bData
  8419  0E5F  3192  22C6  318D   	fcall	_DATAEE_WriteByte
  8420                           
  8421                           ;main.c: 492:             }
  8422  0E62  3001               	movlw	1
  8423  0E63  0021               	movlb	1	; select bank1
  8424  0E64  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8425  0E65  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8426  0E66  07B3               	addwf	UartResponse_WriteCmd@i^(0+128),f
  8427  0E67  300B               	movlw	11
  8428  0E68  0233               	subwf	UartResponse_WriteCmd@i^(0+128),w
  8429  0E69  1803               	btfsc	3,0
  8430  0E6A  2E38               	goto	l5729
  8431  0E6B  2E4C               	goto	l5739
  8432  0E6C                     l5745:	
  8433                           
  8434                           ;main.c: 496:             sendBuff[0] = 0xFF;
  8435  0E6C  30FF               	movlw	255
  8436  0E6D  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8437  0E6E  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8438  0E6F  00B5               	movwf	UartResponse_WriteCmd@sendBuff^(0+128)
  8439                           
  8440                           ;main.c: 497:             sendBuff[1] = 0;
  8441  0E70  01B6               	clrf	(UartResponse_WriteCmd@sendBuff^(0+128)+1)
  8442                           
  8443                           ;main.c: 498:             break;
  8444  0E71  2E8B               	goto	l5753
  8445  0E72                     l5751:	
  8446  0E72  0834               	movf	UartResponse_WriteCmd@type^(0+128),w
  8447  0E73  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8448  0E74  01AE               	clrf	(??_UartResponse_WriteCmd^(0+128)+1)
  8449                           
  8450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8451                           ; Switch size 1, requested type "simple"
  8452                           ; Number of cases is 1, Range of values is 0 to 0
  8453                           ; switch strategies available:
  8454                           ; Name         Instructions Cycles
  8455                           ; simple_byte            4     3 (average)
  8456                           ; direct_byte            8     6 (fixed)
  8457                           ; jumptable            260     6 (fixed)
  8458                           ;	Chosen strategy is simple_byte
  8459  0E75  082E               	movf	(??_UartResponse_WriteCmd+1)^(0+128),w
  8460  0E76  3A00               	xorlw	0	; case 0
  8461  0E77  1903               	skipnz
  8462  0E78  2E7A               	goto	l6099
  8463  0E79  2E6C               	goto	l5745
  8464  0E7A                     l6099:	
  8465                           
  8466                           ; Switch size 1, requested type "simple"
  8467                           ; Number of cases is 5, Range of values is 3 to 13
  8468                           ; switch strategies available:
  8469                           ; Name         Instructions Cycles
  8470                           ; simple_byte           16     9 (average)
  8471                           ; direct_byte           31     9 (fixed)
  8472                           ; jumptable            263     9 (fixed)
  8473                           ;	Chosen strategy is simple_byte
  8474  0E7A  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8475  0E7B  3A03               	xorlw	3	; case 3
  8476  0E7C  1903               	skipnz
  8477  0E7D  2D56               	goto	l5677
  8478  0E7E  3A07               	xorlw	7	; case 4
  8479  0E7F  1903               	skipnz
  8480  0E80  2D90               	goto	l5689
  8481  0E81  3A0E               	xorlw	14	; case 10
  8482  0E82  1903               	skipnz
  8483  0E83  2DCA               	goto	l5701
  8484  0E84  3A01               	xorlw	1	; case 11
  8485  0E85  1903               	skipnz
  8486  0E86  2E10               	goto	l5719
  8487  0E87  3A06               	xorlw	6	; case 13
  8488  0E88  1903               	skipnz
  8489  0E89  2E3C               	goto	l5731
  8490  0E8A  2E6C               	goto	l5745
  8491  0E8B                     l5753:	
  8492                           
  8493                           ;main.c: 500:     UART_Write_Buffer(sendBuff, sendBuff[1]+1);
  8494  0E8B  0021               	movlb	1	; select bank1
  8495  0E8C  0836               	movf	(UartResponse_WriteCmd@sendBuff^(0+128)+1),w
  8496  0E8D  3E01               	addlw	1
  8497  0E8E  00AD               	movwf	??_UartResponse_WriteCmd^(0+128)
  8498  0E8F  082D               	movf	??_UartResponse_WriteCmd^(0+128),w
  8499  0E90  0020               	movlb	0	; select bank0
  8500  0E91  00A2               	movwf	UART_Write_Buffer@size
  8501  0E92  30B5               	movlw	(low (UartResponse_WriteCmd@sendBuff| 0))& (0+255)
  8502  0E93  3192  2285         	fcall	_UART_Write_Buffer
  8503  0E95  0008               	return
  8504  0E96                     __end_of_UartResponse_WriteCmd:	
  8505                           
  8506                           	psect	text22
  8507  10FB                     __ptext22:	
  8508 ;; *************** function _Signal_BL_Requested *****************
  8509 ;; Defined at:
  8510 ;;		line 206 in file "main.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;		None
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;Total ram usage:        0 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    4
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_UartResponse_WriteCmd
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           
  8539                           ;psect for function _Signal_BL_Requested
  8540  10FB                     _Signal_BL_Requested:	
  8541                           
  8542                           ;main.c: 208:     NVMADRL = (uint8_t) (0x2000 -2) & 0x00FF;
  8543                           
  8544                           ;incstack = 0
  8545                           ; Regs used in _Signal_BL_Requested: [wreg+status,2]
  8546  10FB  30FE               	movlw	254
  8547  10FC  0031               	movlb	17	; select bank17
  8548  10FD  0091               	movwf	17	;volatile
  8549                           
  8550                           ;main.c: 209:     NVMADRH = (uint8_t) (((0x2000 -2) & 0xFF00) >> 8);
  8551  10FE  301F               	movlw	31
  8552  10FF  0092               	movwf	18	;volatile
  8553                           
  8554                           ;main.c: 210:     NVMDATL = 0x00;
  8555  1100  0193               	clrf	19	;volatile
  8556                           
  8557                           ;main.c: 211:     NVMDATH = 0x00;
  8558  1101  0194               	clrf	20	;volatile
  8559                           
  8560                           ;main.c: 212:     NVMCON1 = 0x14;
  8561  1102  3014               	movlw	20
  8562  1103  0095               	movwf	21	;volsfr
  8563                           
  8564                           ;main.c: 213:     NVMCON2 = 0x55;
  8565  1104  3055               	movlw	85
  8566  1105  0096               	movwf	22	;volsfr
  8567                           
  8568                           ;main.c: 214:     NVMCON2 = 0xAA;
  8569  1106  30AA               	movlw	170
  8570  1107  0096               	movwf	22	;volsfr
  8571                           
  8572                           ;main.c: 215:     NVMCON1bits.WR = 1;
  8573  1108  1495               	bsf	21,1	;volsfr
  8574  1109  0008               	return
  8575  110A                     __end_of_Signal_BL_Requested:	
  8576                           
  8577                           	psect	text23
  8578  1430                     __ptext23:	
  8579 ;; *************** function _I2C1_WBlk *****************
  8580 ;; Defined at:
  8581 ;;		line 158 in file "main.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  slaveDeviceA    2    8[BANK0 ] unsigned short 
  8584 ;;  pData           1   10[BANK0 ] PTR unsigned char 
  8585 ;;		 -> UartResponse_WriteCmd@data(2), 
  8586 ;;  nCount          2   11[BANK0 ] unsigned short 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  WriteTRB        5   16[BANK0 ] struct .[1]
  8589 ;;  status          1   21[BANK0 ] enum E6646
  8590 ;;  timeOut         1   15[BANK0 ] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8600 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;Total ram usage:       14 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; Hardware stack levels required when called:    6
  8607 ;; This function calls:
  8608 ;;		_I2C1_MasterTRBInsert
  8609 ;;		_I2C1_MasterWriteTRBBuild
  8610 ;; This function is called by:
  8611 ;;		_UartResponse_WriteCmd
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           
  8616                           ;psect for function _I2C1_WBlk
  8617  1430                     _I2C1_WBlk:	
  8618                           
  8619                           ;main.c: 159:         uint16_t slaveDeviceAddress,;main.c: 160:         uint8_t *pData,;
      +                          main.c: 161:         uint16_t nCount);main.c: 162: {;main.c: 163:     I2C1_MESSAGE_STATU
      +                          S status;;main.c: 164:     I2C1_TRANSACTION_REQUEST_BLOCK WriteTRB[1];;main.c: 165:     
      +                          uint8_t timeOut=0;
  8620                           
  8621                           ;incstack = 0
  8622                           ; Regs used in _I2C1_WBlk: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8623  1430  0020               	movlb	0	; select bank0
  8624  1431  01AF               	clrf	I2C1_WBlk@timeOut
  8625                           
  8626                           ;main.c: 168:     status = I2C1_MESSAGE_PENDING;
  8627  1432  3002               	movlw	2
  8628  1433  00AD               	movwf	??_I2C1_WBlk
  8629  1434  082D               	movf	??_I2C1_WBlk,w
  8630  1435  00B5               	movwf	I2C1_WBlk@status
  8631                           
  8632                           ;main.c: 172:     I2C1_MasterWriteTRBBuild(WriteTRB,
  8633  1436  3030               	movlw	low I2C1_WBlk@WriteTRB
  8634  1437  00A0               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  8635  1438  3000               	movlw	high I2C1_WBlk@WriteTRB
  8636  1439  00A1               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1
  8637  143A  082A               	movf	I2C1_WBlk@pData,w
  8638  143B  00AD               	movwf	??_I2C1_WBlk
  8639  143C  082D               	movf	??_I2C1_WBlk,w
  8640  143D  00A2               	movwf	I2C1_MasterWriteTRBBuild@pdata
  8641  143E  082B               	movf	I2C1_WBlk@nCount,w
  8642  143F  00AE               	movwf	??_I2C1_WBlk+1
  8643  1440  082E               	movf	??_I2C1_WBlk+1,w
  8644  1441  00A3               	movwf	I2C1_MasterWriteTRBBuild@length
  8645  1442  0829               	movf	I2C1_WBlk@slaveDeviceAddress+1,w
  8646  1443  00A5               	movwf	I2C1_MasterWriteTRBBuild@address+1
  8647  1444  0828               	movf	I2C1_WBlk@slaveDeviceAddress,w
  8648  1445  00A4               	movwf	I2C1_MasterWriteTRBBuild@address
  8649  1446  3192  22E8  3194   	fcall	_I2C1_MasterWriteTRBBuild
  8650  1449                     l812:	
  8651                           ;main.c: 196:     }
  8652                           
  8653                           ;main.c: 176:     while (status != I2C1_MESSAGE_FAIL) {
  8654                           
  8655                           
  8656                           ;main.c: 176:     while (status != I2C1_MESSAGE_FAIL) {
  8657  1449  0020               	movlb	0	; select bank0
  8658  144A  0335               	decf	I2C1_WBlk@status,w
  8659  144B  1903               	btfsc	3,2
  8660  144C  0008               	return
  8661                           
  8662                           ;main.c: 178:         I2C1_MasterTRBInsert(1, WriteTRB, &status);
  8663  144D  3030               	movlw	low I2C1_WBlk@WriteTRB
  8664  144E  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  8665  144F  3000               	movlw	high I2C1_WBlk@WriteTRB
  8666  1450  00A1               	movwf	I2C1_MasterTRBInsert@ptrb_list+1
  8667  1451  3035               	movlw	(low (I2C1_WBlk@status| 0))& (0+255)
  8668  1452  00AD               	movwf	??_I2C1_WBlk
  8669  1453  082D               	movf	??_I2C1_WBlk,w
  8670  1454  00A2               	movwf	I2C1_MasterTRBInsert@pflag
  8671  1455  3001               	movlw	1
  8672  1456  3188  2026  3194   	fcall	_I2C1_MasterTRBInsert
  8673  1459                     l5445:	
  8674                           ;main.c: 181:         while (status == I2C1_MESSAGE_PENDING);
  8675                           
  8676  1459  3002               	movlw	2
  8677  145A  0020               	movlb	0	; select bank0
  8678  145B  0635               	xorwf	I2C1_WBlk@status,w
  8679  145C  1903               	btfsc	3,2
  8680  145D  2C59               	goto	l5445
  8681                           
  8682                           ;main.c: 183:         if (status == I2C1_MESSAGE_COMPLETE)
  8683  145E  0835               	movf	I2C1_WBlk@status,w
  8684  145F  1903               	btfsc	3,2
  8685  1460  0008               	return
  8686                           
  8687                           ;main.c: 192:         if (timeOut == 3)
  8688  1461  3003               	movlw	3
  8689  1462  062F               	xorwf	I2C1_WBlk@timeOut,w
  8690  1463  1903               	btfsc	3,2
  8691  1464  0008               	return
  8692                           
  8693                           ;main.c: 195:             timeOut++;
  8694  1465  3001               	movlw	1
  8695  1466  00AD               	movwf	??_I2C1_WBlk
  8696  1467  082D               	movf	??_I2C1_WBlk,w
  8697  1468  07AF               	addwf	I2C1_WBlk@timeOut,f
  8698  1469  2C49               	goto	l812
  8699  146A                     __end_of_I2C1_WBlk:	
  8700                           
  8701                           	psect	text24
  8702  10DE                     __ptext24:	
  8703 ;; *************** function _EraseResetVector *****************
  8704 ;; Defined at:
  8705 ;;		line 218 in file "main.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;		None
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;		None
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;Total ram usage:        0 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    4
  8726 ;; This function calls:
  8727 ;;		Nothing
  8728 ;; This function is called by:
  8729 ;;		_UartResponse_WriteCmd
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           
  8734                           ;psect for function _EraseResetVector
  8735  10DE                     _EraseResetVector:	
  8736                           
  8737                           ;main.c: 220:     NVMADRL = (uint8_t) (0x400 & 0x00FF);
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in _EraseResetVector: [wreg+status,2]
  8741  10DE  0031               	movlb	17	; select bank17
  8742  10DF  0191               	clrf	17	;volatile
  8743                           
  8744                           ;main.c: 221:     NVMADRH = (uint8_t) ((0x400 & 0xFF00) >> 8);
  8745  10E0  3004               	movlw	4
  8746  10E1  0092               	movwf	18	;volatile
  8747                           
  8748                           ;main.c: 222:     NVMDATL = 0x00;
  8749  10E2  0193               	clrf	19	;volatile
  8750                           
  8751                           ;main.c: 223:     NVMDATH = 0x00;
  8752  10E3  0194               	clrf	20	;volatile
  8753                           
  8754                           ;main.c: 224:     NVMCON1 = 0x14;
  8755  10E4  3014               	movlw	20
  8756  10E5  0095               	movwf	21	;volsfr
  8757                           
  8758                           ;main.c: 225:     NVMCON2 = 0x55;
  8759  10E6  3055               	movlw	85
  8760  10E7  0096               	movwf	22	;volsfr
  8761                           
  8762                           ;main.c: 226:     NVMCON2 = 0xAA;
  8763  10E8  30AA               	movlw	170
  8764  10E9  0096               	movwf	22	;volsfr
  8765                           
  8766                           ;main.c: 227:     NVMCON1bits.WR = 1;
  8767  10EA  1495               	bsf	21,1	;volsfr
  8768  10EB  0008               	return
  8769  10EC                     __end_of_EraseResetVector:	
  8770                           
  8771                           	psect	text25
  8772  12C6                     __ptext25:	
  8773 ;; *************** function _DATAEE_WriteByte *****************
  8774 ;; Defined at:
  8775 ;;		line 180 in file "mcc_generated_files/memory.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  bAdd            2    0[BANK0 ] unsigned short 
  8778 ;;  bData           1    2[BANK0 ] unsigned char 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, status,2, status,0
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8790 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;Total ram usage:        4 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    4
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		_init
  8801 ;;		_UartResponse_WriteCmd
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           
  8806                           ;psect for function _DATAEE_WriteByte
  8807  12C6                     _DATAEE_WriteByte:	
  8808                           
  8809                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  8810                           
  8811                           ;incstack = 0
  8812                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  8813  12C6  3000               	movlw	0
  8814  12C7  1B8B               	btfsc	11,7	;volatile
  8815  12C8  3001               	movlw	1
  8816  12C9  0020               	movlb	0	; select bank0
  8817  12CA  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
  8818                           
  8819                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  8820  12CB  0821               	movf	DATAEE_WriteByte@bAdd+1,w
  8821  12CC  0031               	movlb	17	; select bank17
  8822  12CD  0092               	movwf	18	;volatile
  8823                           
  8824                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  8825  12CE  0020               	movlb	0	; select bank0
  8826  12CF  0820               	movf	DATAEE_WriteByte@bAdd,w
  8827  12D0  0031               	movlb	17	; select bank17
  8828  12D1  0091               	movwf	17	;volatile
  8829                           
  8830                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  8831  12D2  0020               	movlb	0	; select bank0
  8832  12D3  0822               	movf	DATAEE_WriteByte@bData,w
  8833  12D4  0031               	movlb	17	; select bank17
  8834  12D5  0093               	movwf	19	;volatile
  8835                           
  8836                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  8837  12D6  1715               	bsf	21,6	;volsfr
  8838                           
  8839                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  8840  12D7  1515               	bsf	21,2	;volsfr
  8841                           
  8842                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  8843  12D8  138B               	bcf	11,7	;volatile
  8844                           
  8845                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  8846  12D9  3055               	movlw	85
  8847  12DA  0096               	movwf	22	;volsfr
  8848                           
  8849                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  8850  12DB  30AA               	movlw	170
  8851  12DC  0096               	movwf	22	;volsfr
  8852                           
  8853                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  8854  12DD  1495               	bsf	21,1	;volsfr
  8855  12DE                     l661:	
  8856                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  8857                           
  8858                           
  8859                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  8860  12DE  1895               	btfsc	21,1	;volsfr
  8861  12DF  2ADE               	goto	l661
  8862                           
  8863                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  8864  12E0  1115               	bcf	21,2	;volsfr
  8865                           
  8866                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  8867  12E1  0020               	movlb	0	; select bank0
  8868  12E2  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
  8869  12E3  1C03               	skipc
  8870  12E4  138B               	bcf	11,7	;volatile
  8871  12E5  1803               	skipnc
  8872  12E6  178B               	bsf	11,7	;volatile
  8873  12E7  0008               	return
  8874  12E8                     __end_of_DATAEE_WriteByte:	
  8875                           
  8876                           	psect	text26
  8877  0E96                     __ptext26:	
  8878 ;; *************** function _UartResponse_ReadCmd *****************
  8879 ;; Defined at:
  8880 ;;		line 270 in file "main.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  type            1    wreg     unsigned char 
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;  type            1   18[BANK1 ] unsigned char 
  8885 ;;  sendBuff       16   21[BANK1 ] unsigned char [16]
  8886 ;;  ADC_result      2   37[BANK1 ] unsigned short 
  8887 ;;  i               1   20[BANK1 ] unsigned char 
  8888 ;;  reg             1   19[BANK1 ] unsigned char [1]
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;Total ram usage:       27 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:   13
  8905 ;; This function calls:
  8906 ;;		_ADC_GetConversion
  8907 ;;		_DATAEE_ReadByte
  8908 ;;		_I2C1_RBlk
  8909 ;;		_UART_Write_Buffer
  8910 ;;		_printf
  8911 ;; This function is called by:
  8912 ;;		_Handler_Uart
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           
  8917                           ;psect for function _UartResponse_ReadCmd
  8918  0E96                     _UartResponse_ReadCmd:	
  8919                           
  8920                           ;incstack = 0
  8921                           ; Regs used in _UartResponse_ReadCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8922                           ;UartResponse_ReadCmd@type stored from wreg
  8923  0E96  0021               	movlb	1	; select bank1
  8924  0E97  00B2               	movwf	UartResponse_ReadCmd@type^(0+128)
  8925                           
  8926                           ;main.c: 270: void UartResponse_ReadCmd(uint8_t type);main.c: 271: {;main.c: 272:     ui
      +                          nt8_t sendBuff[16] = {0};
  8927  0E98  30B5               	movlw	low UartResponse_ReadCmd@sendBuff
  8928  0E99  0086               	movwf	6
  8929  0E9A  3000               	movlw	high UartResponse_ReadCmd@sendBuff
  8930  0E9B  0087               	movwf	7
  8931  0E9C  3010               	movlw	16
  8932  0E9D  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  8933  0E9E  3000               	movlw	0
  8934  0E9F                     u4400:	
  8935  0E9F  001E               	movwi fsr1++
  8936  0EA0  0BAC               	decfsz	??_UartResponse_ReadCmd^(0+128),f
  8937  0EA1  2E9F               	goto	u4400
  8938                           
  8939                           ;main.c: 274:     sendBuff[0] = 0xFF;
  8940  0EA2  30FF               	movlw	255
  8941  0EA3  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  8942  0EA4  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  8943  0EA5  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  8944                           
  8945                           ;main.c: 275:     sendBuff[1] = 0x00;
  8946  0EA6  01B6               	clrf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  8947                           
  8948                           ;main.c: 277:     uint8_t reg[1];;main.c: 279:    switch (type) {
  8949  0EA7  2FBE               	goto	l5659
  8950  0EA8                     l5543:	
  8951                           
  8952                           ;main.c: 281:             sendBuff[0] = 0x02;
  8953  0EA8  3002               	movlw	2
  8954  0EA9  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  8955  0EAA  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  8956  0EAB  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  8957                           
  8958                           ;main.c: 282:             sendBuff[1] = 0x04;
  8959  0EAC  3004               	movlw	4
  8960  0EAD  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  8961  0EAE  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  8962  0EAF  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  8963                           
  8964                           ;main.c: 283:             sendBuff[2] = cmd.Data_Type;
  8965  0EB0  0024               	movlb	4	; select bank4
  8966  0EB1  0822               	movf	(_cmd^(0+512)+2),w
  8967  0EB2  0021               	movlb	1	; select bank1
  8968  0EB3  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  8969  0EB4  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  8970  0EB5  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  8971                           
  8972                           ;main.c: 285:             sendBuff[3] = Read_SI7020_Temp>>8;
  8973  0EB6  0850               	movf	_Read_SI7020_Temp^(0+128),w
  8974  0EB7  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  8975  0EB8  0851               	movf	(_Read_SI7020_Temp+1)^(0+128),w
  8976  0EB9  00AD               	movwf	(??_UartResponse_ReadCmd^(0+128)+1)
  8977  0EBA  0852               	movf	(_Read_SI7020_Temp+2)^(0+128),w
  8978  0EBB  00AE               	movwf	(??_UartResponse_ReadCmd^(0+128)+2)
  8979  0EBC  0853               	movf	(_Read_SI7020_Temp+3)^(0+128),w
  8980  0EBD  00AF               	movwf	(??_UartResponse_ReadCmd^(0+128)+3)
  8981  0EBE  3008               	movlw	8
  8982  0EBF  00B0               	movwf	(??_UartResponse_ReadCmd+4)^(0+128)
  8983  0EC0                     u4415:	
  8984  0EC0  37AF               	asrf	(??_UartResponse_ReadCmd^(0+128)+3),f
  8985  0EC1  0CAE               	rrf	(??_UartResponse_ReadCmd^(0+128)+2),f
  8986  0EC2  0CAD               	rrf	(??_UartResponse_ReadCmd^(0+128)+1),f
  8987  0EC3  0CAC               	rrf	??_UartResponse_ReadCmd^(0+128),f
  8988  0EC4  0BB0               	decfsz	(??_UartResponse_ReadCmd+4)^(0+128),f
  8989  0EC5  2EC0               	goto	u4415
  8990  0EC6  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  8991  0EC7  00B1               	movwf	(??_UartResponse_ReadCmd+5)^(0+128)
  8992  0EC8  0831               	movf	(??_UartResponse_ReadCmd+5)^(0+128),w
  8993  0EC9  00B8               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+3)
  8994                           
  8995                           ;main.c: 286:             sendBuff[4] = Read_SI7020_Temp;
  8996  0ECA  0850               	movf	_Read_SI7020_Temp^(0+128),w
  8997  0ECB  2F6D               	goto	L4
  8998  0ECC                     l5555:	
  8999                           ;main.c: 291:             break;
  9000                           
  9001                           
  9002                           ;main.c: 305:             sendBuff[0] = 0x02;
  9003  0ECC  3002               	movlw	2
  9004  0ECD  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9005  0ECE  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9006  0ECF  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  9007                           
  9008                           ;main.c: 306:             sendBuff[1] = 0x03;
  9009  0ED0  3003               	movlw	3
  9010  0ED1  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9011  0ED2  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9012  0ED3  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  9013                           
  9014                           ;main.c: 307:             sendBuff[2] = cmd.Data_Type;
  9015  0ED4  0024               	movlb	4	; select bank4
  9016  0ED5  0822               	movf	(_cmd^(0+512)+2),w
  9017  0ED6  0021               	movlb	1	; select bank1
  9018  0ED7  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9019  0ED8  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9020  0ED9  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  9021                           
  9022                           ;main.c: 308:             sendBuff[3] = CurrentPWM1;
  9023  0EDA  085D               	movf	_CurrentPWM1^(0+128),w
  9024  0EDB  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9025  0EDC  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9026  0EDD  00B8               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+3)
  9027  0EDE                     l855:	
  9028                           ;main.c: 309:         case 0x04:
  9029                           
  9030                           
  9031                           ;main.c: 310:             sendBuff[0] = 0x02;
  9032  0EDE  3002               	movlw	2
  9033  0EDF  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9034  0EE0  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9035  0EE1  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  9036                           
  9037                           ;main.c: 311:             sendBuff[1] = 0x03;
  9038  0EE2  3003               	movlw	3
  9039  0EE3  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9040  0EE4  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9041  0EE5  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  9042                           
  9043                           ;main.c: 312:             sendBuff[2] = cmd.Data_Type;
  9044  0EE6  0024               	movlb	4	; select bank4
  9045  0EE7  0822               	movf	(_cmd^(0+512)+2),w
  9046  0EE8  0021               	movlb	1	; select bank1
  9047  0EE9  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9048  0EEA  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9049  0EEB  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  9050                           
  9051                           ;main.c: 313:             sendBuff[3] = CurrentPWM2;
  9052  0EEC  085C               	movf	_CurrentPWM2^(0+128),w
  9053  0EED  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9054  0EEE  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9055  0EEF  00B8               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+3)
  9056                           
  9057                           ;main.c: 314:             break;
  9058  0EF0  2FF5               	goto	l5661
  9059  0EF1                     l5557:	
  9060                           
  9061                           ;main.c: 316:             ADC_result = ADC_GetConversion(P1V8_Detect);
  9062  0EF1  3012               	movlw	18
  9063  0EF2                     L5:	
  9064  0EF2  3192  2246  318E   	fcall	_ADC_GetConversion
  9065  0EF5  0020               	movlb	0	; select bank0
  9066  0EF6  0821               	movf	?_ADC_GetConversion+1,w
  9067  0EF7  0021               	movlb	1	; select bank1
  9068  0EF8  00C6               	movwf	(UartResponse_ReadCmd@ADC_result+1)^(0+128)
  9069  0EF9  0020               	movlb	0	; select bank0
  9070  0EFA  0820               	movf	?_ADC_GetConversion,w
  9071  0EFB  0021               	movlb	1	; select bank1
  9072  0EFC  00C5               	movwf	UartResponse_ReadCmd@ADC_result^(0+128)
  9073                           
  9074                           ;main.c: 317:             sendBuff[0] = 0x02;
  9075  0EFD  3002               	movlw	2
  9076  0EFE  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9077  0EFF  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9078  0F00  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  9079                           
  9080                           ;main.c: 318:             sendBuff[1] = 0x04;
  9081  0F01  3004               	movlw	4
  9082  0F02  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9083  0F03  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9084  0F04  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  9085                           
  9086                           ;main.c: 319:             sendBuff[2] = cmd.Data_Type;
  9087  0F05  0024               	movlb	4	; select bank4
  9088  0F06  0822               	movf	(_cmd^(0+512)+2),w
  9089  0F07  0021               	movlb	1	; select bank1
  9090  0F08  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9091  0F09  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9092  0F0A  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  9093                           
  9094                           ;main.c: 320:             sendBuff[3] = ADC_result>>8;
  9095  0F0B  0846               	movf	(UartResponse_ReadCmd@ADC_result+1)^(0+128),w
  9096  0F0C  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9097  0F0D  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9098  0F0E  00B8               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+3)
  9099                           
  9100                           ;main.c: 321:             sendBuff[4] = ADC_result;
  9101  0F0F  0845               	movf	UartResponse_ReadCmd@ADC_result^(0+128),w
  9102  0F10  2F6D               	goto	L4
  9103  0F11                     l5569:	
  9104                           ;main.c: 322:             break;
  9105                           
  9106                           
  9107                           ;main.c: 324:             ADC_result = ADC_GetConversion(P5V_Detect);
  9108  0F11  3013               	movlw	19
  9109  0F12  2EF2               	goto	L5
  9110  0F13                     l5581:	
  9111                           
  9112                           ;main.c: 332:             ADC_result = ADC_GetConversion(P3V3_Detect);
  9113  0F13  3015               	movlw	21
  9114  0F14  2EF2               	goto	L5
  9115  0F15                     l5605:	
  9116                           
  9117                           ;main.c: 368:             reg[0] = 0x40;
  9118  0F15  3040               	movlw	64
  9119  0F16  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9120  0F17  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9121  0F18  00B3               	movwf	UartResponse_ReadCmd@reg^(0+128)
  9122                           
  9123                           ;main.c: 369:             I2C1_RBlk(0x5C, reg, 1, Fan_PWM_Value, 1);
  9124  0F19  305C               	movlw	92
  9125  0F1A  0020               	movlb	0	; select bank0
  9126  0F1B  00A8               	movwf	I2C1_RBlk@slaveDeviceAddress
  9127  0F1C  3000               	movlw	0
  9128  0F1D  00A9               	movwf	I2C1_RBlk@slaveDeviceAddress+1
  9129  0F1E  30B3               	movlw	(low (UartResponse_ReadCmd@reg| 0))& (0+255)
  9130  0F1F  0021               	movlb	1	; select bank1
  9131  0F20  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9132  0F21  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9133  0F22  0020               	movlb	0	; select bank0
  9134  0F23  00AA               	movwf	I2C1_RBlk@wblk
  9135  0F24  3001               	movlw	1
  9136  0F25  00AB               	movwf	I2C1_RBlk@wCount
  9137  0F26  3000               	movlw	0
  9138  0F27  00AC               	movwf	I2C1_RBlk@wCount+1
  9139  0F28  0021               	movlb	1	; select bank1
  9140  0F29  085A               	movf	_Fan_PWM_Value^(0+128),w
  9141  0F2A  00AD               	movwf	(??_UartResponse_ReadCmd+1)^(0+128)
  9142  0F2B  01AE               	clrf	((??_UartResponse_ReadCmd+1)^(0+128)+1)
  9143  0F2C  082D               	movf	(??_UartResponse_ReadCmd+1)^(0+128),w
  9144  0F2D  0020               	movlb	0	; select bank0
  9145  0F2E  00AD               	movwf	I2C1_RBlk@pData
  9146  0F2F  0021               	movlb	1	; select bank1
  9147  0F30  082E               	movf	(??_UartResponse_ReadCmd+2)^(0+128),w
  9148  0F31  0020               	movlb	0	; select bank0
  9149  0F32  00AE               	movwf	I2C1_RBlk@pData+1
  9150  0F33  3001               	movlw	1
  9151  0F34  00AF               	movwf	I2C1_RBlk@rCount
  9152  0F35  3000               	movlw	0
  9153  0F36  00B0               	movwf	I2C1_RBlk@rCount+1
  9154  0F37  3195  2529  318E   	fcall	_I2C1_RBlk
  9155                           
  9156                           ;main.c: 370:             sendBuff[0] = 0x02;
  9157  0F3A  3002               	movlw	2
  9158  0F3B  0021               	movlb	1	; select bank1
  9159  0F3C  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9160  0F3D  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9161  0F3E  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  9162                           
  9163                           ;main.c: 371:             sendBuff[1] = 0x03;
  9164  0F3F  3003               	movlw	3
  9165  0F40  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9166  0F41  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9167  0F42  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  9168                           
  9169                           ;main.c: 372:             sendBuff[2] = cmd.Data_Type;
  9170  0F43  0024               	movlb	4	; select bank4
  9171  0F44  0822               	movf	(_cmd^(0+512)+2),w
  9172  0F45  0021               	movlb	1	; select bank1
  9173  0F46  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9174  0F47  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9175  0F48  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  9176                           
  9177                           ;main.c: 373:             sendBuff[3] = Fan_PWM_Value;
  9178  0F49  085A               	movf	_Fan_PWM_Value^(0+128),w
  9179  0F4A  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9180  0F4B  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9181  0F4C  00B8               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+3)
  9182                           
  9183                           ;main.c: 374:             printf("Fan_PWM_Value is %d \n", Fan_PWM_Value);
  9184  0F4D  3022               	movlw	low (STR_1| (0+32768))
  9185  0F4E  00A3               	movwf	printf@fmt^(0+128)
  9186  0F4F  3098               	movlw	high (STR_1| (0+32768))
  9187  0F50  00A4               	movwf	(printf@fmt^(0+128)+1)
  9188  0F51  085A               	movf	_Fan_PWM_Value^(0+128),w
  9189  0F52  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9190  0F53  01AD               	clrf	(??_UartResponse_ReadCmd^(0+128)+1)
  9191  0F54  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9192  0F55  00A5               	movwf	(?_printf^(0+128)+2)
  9193  0F56  082D               	movf	(??_UartResponse_ReadCmd+1)^(0+128),w
  9194  0F57  00A6               	movwf	((?_printf+1)^(0+128)+2)
  9195  0F58  3191  2143  318E   	fcall	_printf
  9196                           
  9197                           ;main.c: 375:             break;
  9198  0F5B  2FF5               	goto	l5661
  9199  0F5C                     l5619:	
  9200                           
  9201                           ;main.c: 377:             sendBuff[0] = 0x02;
  9202  0F5C  3002               	movlw	2
  9203  0F5D  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9204  0F5E  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9205  0F5F  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  9206                           
  9207                           ;main.c: 378:             sendBuff[1] = 0x04;
  9208  0F60  3004               	movlw	4
  9209  0F61  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9210  0F62  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9211  0F63  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  9212                           
  9213                           ;main.c: 379:             sendBuff[2] = cmd.Data_Type;
  9214  0F64  0024               	movlb	4	; select bank4
  9215  0F65  0822               	movf	(_cmd^(0+512)+2),w
  9216  0F66  0021               	movlb	1	; select bank1
  9217  0F67  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9218  0F68  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9219  0F69  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  9220                           
  9221                           ;main.c: 380:             sendBuff[3] = 1;
  9222  0F6A  01B8               	clrf	(UartResponse_ReadCmd@sendBuff^(0+128)+3)
  9223  0F6B  0AB8               	incf	(UartResponse_ReadCmd@sendBuff^(0+128)+3),f
  9224                           
  9225                           ;main.c: 381:             sendBuff[4] = 3;
  9226  0F6C  3003               	movlw	3
  9227  0F6D                     L4:	
  9228  0F6D  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9229  0F6E  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9230  0F6F  00B9               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+4)
  9231                           
  9232                           ;main.c: 382:             break;
  9233  0F70  2FF5               	goto	l5661
  9234  0F71                     l5623:	
  9235                           
  9236                           ;main.c: 384:             sendBuff[0] = 0x02;
  9237  0F71  3002               	movlw	2
  9238  0F72  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9239  0F73  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9240  0F74  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  9241                           
  9242                           ;main.c: 385:             sendBuff[1] = 2 + sizeof(Default_PWM_Table);
  9243  0F75  300D               	movlw	13
  9244  0F76  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9245  0F77  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9246  0F78  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  9247                           
  9248                           ;main.c: 386:             sendBuff[2] = cmd.Data_Type;
  9249  0F79  0024               	movlb	4	; select bank4
  9250  0F7A  0822               	movf	(_cmd^(0+512)+2),w
  9251  0F7B  0021               	movlb	1	; select bank1
  9252  0F7C  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9253  0F7D  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9254  0F7E  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  9255                           
  9256                           ;main.c: 387:             for(i=0;i<sizeof(Default_PWM_Table);i++){
  9257  0F7F  01B4               	clrf	UartResponse_ReadCmd@i^(0+128)
  9258  0F80                     l5631:	
  9259                           
  9260                           ;main.c: 388:                 sendBuff[i+3] = DATAEE_ReadByte(0xF000 +1 +3 +i);
  9261  0F80  0834               	movf	UartResponse_ReadCmd@i^(0+128),w
  9262  0F81  3E04               	addlw	4
  9263  0F82  0020               	movlb	0	; select bank0
  9264  0F83  00A0               	movwf	DATAEE_ReadByte@bAdd
  9265  0F84  30F0               	movlw	240
  9266  0F85  1803               	skipnc
  9267  0F86  30F1               	movlw	241
  9268  0F87  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  9269  0F88  3190  20EC  318E   	fcall	_DATAEE_ReadByte
  9270  0F8B  0021               	movlb	1	; select bank1
  9271  0F8C  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9272  0F8D  0834               	movf	UartResponse_ReadCmd@i^(0+128),w
  9273  0F8E  3E03               	addlw	3
  9274  0F8F  3EB5               	addlw	(low (UartResponse_ReadCmd@sendBuff| 0))& (0+255)
  9275  0F90  0086               	movwf	6
  9276  0F91  0187               	clrf	7
  9277  0F92  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9278  0F93  0081               	movwf	1
  9279                           
  9280                           ;main.c: 389:             }
  9281  0F94  3001               	movlw	1
  9282  0F95  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9283  0F96  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9284  0F97  07B4               	addwf	UartResponse_ReadCmd@i^(0+128),f
  9285  0F98  300B               	movlw	11
  9286  0F99  0234               	subwf	UartResponse_ReadCmd@i^(0+128),w
  9287  0F9A  1803               	btfsc	3,0
  9288  0F9B  2FF5               	goto	l5661
  9289  0F9C  2F80               	goto	l5631
  9290  0F9D                     l5637:	
  9291                           
  9292                           ;main.c: 392:             sendBuff[0] = 0x02;
  9293  0F9D  3002               	movlw	2
  9294  0F9E  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9295  0F9F  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9296  0FA0  00B5               	movwf	UartResponse_ReadCmd@sendBuff^(0+128)
  9297                           
  9298                           ;main.c: 393:             sendBuff[1] = 0x05;
  9299  0FA1  3005               	movlw	5
  9300  0FA2  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9301  0FA3  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9302  0FA4  00B6               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+1)
  9303                           
  9304                           ;main.c: 394:             sendBuff[2] = cmd.Data_Type;
  9305  0FA5  0024               	movlb	4	; select bank4
  9306  0FA6  0822               	movf	(_cmd^(0+512)+2),w
  9307  0FA7  0021               	movlb	1	; select bank1
  9308  0FA8  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9309  0FA9  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9310  0FAA  00B7               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+2)
  9311                           
  9312                           ;main.c: 395:             sendBuff[3] = PORTAbits.RA2;
  9313  0FAB  3000               	movlw	0
  9314  0FAC  0020               	movlb	0	; select bank0
  9315  0FAD  190C               	btfsc	12,2	;volatile
  9316  0FAE  3001               	movlw	1
  9317  0FAF  0021               	movlb	1	; select bank1
  9318  0FB0  00B8               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+3)
  9319                           
  9320                           ;main.c: 396:             sendBuff[4] = PORTCbits.RC0;
  9321  0FB1  3000               	movlw	0
  9322  0FB2  0020               	movlb	0	; select bank0
  9323  0FB3  180E               	btfsc	14,0	;volatile
  9324  0FB4  3001               	movlw	1
  9325  0FB5  0021               	movlb	1	; select bank1
  9326  0FB6  00B9               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+4)
  9327                           
  9328                           ;main.c: 397:             sendBuff[5] = PORTCbits.RC1;
  9329  0FB7  3000               	movlw	0
  9330  0FB8  0020               	movlb	0	; select bank0
  9331  0FB9  188E               	btfsc	14,1	;volatile
  9332  0FBA  3001               	movlw	1
  9333  0FBB  0021               	movlb	1	; select bank1
  9334  0FBC  00BA               	movwf	(UartResponse_ReadCmd@sendBuff^(0+128)+5)
  9335                           
  9336                           ;main.c: 398:             break;
  9337  0FBD  2FF5               	goto	l5661
  9338  0FBE                     l5659:	
  9339  0FBE  0832               	movf	UartResponse_ReadCmd@type^(0+128),w
  9340  0FBF  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9341  0FC0  01AD               	clrf	(??_UartResponse_ReadCmd^(0+128)+1)
  9342                           
  9343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9344                           ; Switch size 1, requested type "simple"
  9345                           ; Number of cases is 1, Range of values is 0 to 0
  9346                           ; switch strategies available:
  9347                           ; Name         Instructions Cycles
  9348                           ; simple_byte            4     3 (average)
  9349                           ; direct_byte            8     6 (fixed)
  9350                           ; jumptable            260     6 (fixed)
  9351                           ;	Chosen strategy is simple_byte
  9352  0FC1  082D               	movf	(??_UartResponse_ReadCmd+1)^(0+128),w
  9353  0FC2  3A00               	xorlw	0	; case 0
  9354  0FC3  1903               	skipnz
  9355  0FC4  2FC6               	goto	l6101
  9356  0FC5  2FF5               	goto	l5661
  9357  0FC6                     l6101:	
  9358                           
  9359                           ; Switch size 1, requested type "simple"
  9360                           ; Number of cases is 15, Range of values is 1 to 16
  9361                           ; switch strategies available:
  9362                           ; Name         Instructions Cycles
  9363                           ; direct_byte           41     9 (fixed)
  9364                           ; simple_byte           46    24 (average)
  9365                           ; jumptable            263     9 (fixed)
  9366                           ;	Chosen strategy is simple_byte
  9367  0FC6  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9368  0FC7  3A01               	xorlw	1	; case 1
  9369  0FC8  1903               	skipnz
  9370  0FC9  2EA8               	goto	l5543
  9371  0FCA  3A03               	xorlw	3	; case 2
  9372  0FCB  1903               	skipnz
  9373  0FCC  2EA8               	goto	l5543
  9374  0FCD  3A01               	xorlw	1	; case 3
  9375  0FCE  1903               	skipnz
  9376  0FCF  2ECC               	goto	l5555
  9377  0FD0  3A07               	xorlw	7	; case 4
  9378  0FD1  1903               	skipnz
  9379  0FD2  2EDE               	goto	l855
  9380  0FD3  3A01               	xorlw	1	; case 5
  9381  0FD4  1903               	skipnz
  9382  0FD5  2EF1               	goto	l5557
  9383  0FD6  3A03               	xorlw	3	; case 6
  9384  0FD7  1903               	skipnz
  9385  0FD8  2F11               	goto	l5569
  9386  0FD9  3A01               	xorlw	1	; case 7
  9387  0FDA  1903               	skipnz
  9388  0FDB  2F13               	goto	l5581
  9389  0FDC  3A0F               	xorlw	15	; case 8
  9390  0FDD  1903               	skipnz
  9391  0FDE  2EA8               	goto	l5543
  9392  0FDF  3A01               	xorlw	1	; case 9
  9393  0FE0  1903               	skipnz
  9394  0FE1  2EA8               	goto	l5543
  9395  0FE2  3A03               	xorlw	3	; case 10
  9396  0FE3  1903               	skipnz
  9397  0FE4  2F15               	goto	l5605
  9398  0FE5  3A06               	xorlw	6	; case 12
  9399  0FE6  1903               	skipnz
  9400  0FE7  2F5C               	goto	l5619
  9401  0FE8  3A01               	xorlw	1	; case 13
  9402  0FE9  1903               	skipnz
  9403  0FEA  2F71               	goto	l5623
  9404  0FEB  3A03               	xorlw	3	; case 14
  9405  0FEC  1903               	skipnz
  9406  0FED  2F9D               	goto	l5637
  9407  0FEE  3A01               	xorlw	1	; case 15
  9408  0FEF  1903               	skipnz
  9409  0FF0  2EA8               	goto	l5543
  9410  0FF1  3A1F               	xorlw	31	; case 16
  9411  0FF2  1903               	skipnz
  9412  0FF3  2EA8               	goto	l5543
  9413  0FF4  2FF5               	goto	l5661
  9414  0FF5                     l5661:	
  9415                           
  9416                           ;main.c: 427:     UART_Write_Buffer(sendBuff, sendBuff[1]+1);
  9417  0FF5  0021               	movlb	1	; select bank1
  9418  0FF6  0836               	movf	(UartResponse_ReadCmd@sendBuff^(0+128)+1),w
  9419  0FF7  3E01               	addlw	1
  9420  0FF8  00AC               	movwf	??_UartResponse_ReadCmd^(0+128)
  9421  0FF9  082C               	movf	??_UartResponse_ReadCmd^(0+128),w
  9422  0FFA  0020               	movlb	0	; select bank0
  9423  0FFB  00A2               	movwf	UART_Write_Buffer@size
  9424  0FFC  30B5               	movlw	(low (UartResponse_ReadCmd@sendBuff| 0))& (0+255)
  9425  0FFD  3192  2285         	fcall	_UART_Write_Buffer
  9426  0FFF  0008               	return
  9427  1000                     __end_of_UartResponse_ReadCmd:	
  9428                           
  9429                           	psect	text27
  9430  1143                     __ptext27:	
  9431 ;; *************** function _printf *****************
  9432 ;; Defined at:
  9433 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  9436 ;;		 -> STR_2(34), STR_1(22), 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;  ret             2    0        int 
  9439 ;;  ap              1   11[BANK1 ] PTR void [1]
  9440 ;;		 -> ?_printf(2), 
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  2    3[BANK1 ] int 
  9443 ;; Registers used:
  9444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9450 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9454 ;;Total ram usage:       10 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:   12
  9457 ;; This function calls:
  9458 ;;		_vfprintf
  9459 ;; This function is called by:
  9460 ;;		_UartResponse_ReadCmd
  9461 ;;		_UartResponse_WriteCmd
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           
  9466                           ;psect for function _printf
  9467  1143                     _printf:	
  9468                           
  9469                           ;incstack = 0
  9470                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9471  1143  30A5               	movlw	(low ((?_printf| 0+2)))& (0+255)
  9472  1144  0020               	movlb	0	; select bank0
  9473  1145  00EF               	movwf	??_printf
  9474  1146  086F               	movf	??_printf,w
  9475  1147  0021               	movlb	1	; select bank1
  9476  1148  00AB               	movwf	printf@ap^(0+128)
  9477  1149  0824               	movf	(printf@fmt+1)^(0+128),w
  9478  114A  0020               	movlb	0	; select bank0
  9479  114B  00EB               	movwf	vfprintf@fmt+1
  9480  114C  0021               	movlb	1	; select bank1
  9481  114D  0823               	movf	printf@fmt^(0+128),w
  9482  114E  0020               	movlb	0	; select bank0
  9483  114F  00EA               	movwf	vfprintf@fmt
  9484  1150  30AB               	movlw	(low (printf@ap| 0))& (0+255)
  9485  1151  00EF               	movwf	??_printf
  9486  1152  086F               	movf	??_printf,w
  9487  1153  00EC               	movwf	vfprintf@ap
  9488  1154  3000               	movlw	0
  9489  1155  3193  23C4         	fcall	_vfprintf
  9490  1157  0008               	return
  9491  1158                     __end_of_printf:	
  9492                           
  9493                           	psect	text28
  9494  13C4                     __ptext28:	
  9495 ;; *************** function _vfprintf *****************
  9496 ;; Defined at:
  9497 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  fp              1    wreg     PTR struct _IO_FILE
  9500 ;;		 -> NULL(0), 
  9501 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  9502 ;;		 -> STR_2(34), STR_1(22), 
  9503 ;;  ap              1   76[BANK0 ] PTR PTR void 
  9504 ;;		 -> printf@ap(1), 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  9507 ;;		 -> NULL(0), 
  9508 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  9509 ;;		 -> STR_2(34), STR_1(22), 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  2   74[BANK0 ] int 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9519 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;Total ram usage:        8 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:   11
  9526 ;; This function calls:
  9527 ;;		_vfpfcnvrt
  9528 ;; This function is called by:
  9529 ;;		_printf
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           
  9534                           ;psect for function _vfprintf
  9535  13C4                     _vfprintf:	
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9539                           ;vfprintf@fp stored from wreg
  9540  13C4  0021               	movlb	1	; select bank1
  9541  13C5  00A0               	movwf	vfprintf@fp^(0+128)
  9542                           
  9543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9544  13C6  0020               	movlb	0	; select bank0
  9545  13C7  086B               	movf	vfprintf@fmt+1,w
  9546  13C8  0021               	movlb	1	; select bank1
  9547  13C9  00A2               	movwf	(vfprintf@cfmt+1)^(0+128)
  9548  13CA  0020               	movlb	0	; select bank0
  9549  13CB  086A               	movf	vfprintf@fmt,w
  9550  13CC  0021               	movlb	1	; select bank1
  9551  13CD  00A1               	movwf	vfprintf@cfmt^(0+128)
  9552                           
  9553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9554  13CE  0023               	movlb	3	; select bank3
  9555  13CF  01BC               	clrf	_nout^(0+384)
  9556  13D0  01BD               	clrf	(_nout+1)^(0+384)
  9557  13D1                     l5235:	
  9558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9559                           
  9560                           
  9561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9562  13D1  0021               	movlb	1	; select bank1
  9563  13D2  0821               	movf	vfprintf@cfmt^(0+128),w
  9564  13D3  0084               	movwf	4
  9565  13D4  0822               	movf	(vfprintf@cfmt+1)^(0+128),w
  9566  13D5  0085               	movwf	5
  9567  13D6  0012               	moviw fsr0++
  9568  13D7  1903               	btfsc	3,2
  9569  13D8  2BF0               	goto	l5237
  9570                           
  9571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9572  13D9  30A1               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9573  13DA  0020               	movlb	0	; select bank0
  9574  13DB  00ED               	movwf	??_vfprintf
  9575  13DC  086D               	movf	??_vfprintf,w
  9576  13DD  00DA               	movwf	vfpfcnvrt@fmt
  9577  13DE  086C               	movf	vfprintf@ap,w
  9578  13DF  00EE               	movwf	??_vfprintf+1
  9579  13E0  086E               	movf	??_vfprintf+1,w
  9580  13E1  00DB               	movwf	vfpfcnvrt@ap
  9581  13E2  0021               	movlb	1	; select bank1
  9582  13E3  0820               	movf	vfprintf@fp^(0+128),w
  9583  13E4  3189  2147  3193   	fcall	_vfpfcnvrt
  9584  13E7  0020               	movlb	0	; select bank0
  9585  13E8  085A               	movf	?_vfpfcnvrt,w
  9586  13E9  0023               	movlb	3	; select bank3
  9587  13EA  07BC               	addwf	_nout^(0+384),f
  9588  13EB  0020               	movlb	0	; select bank0
  9589  13EC  085B               	movf	?_vfpfcnvrt+1,w
  9590  13ED  0023               	movlb	3	; select bank3
  9591  13EE  3DBD               	addwfc	(_nout+1)^(0+384),f
  9592  13EF  2BD1               	goto	l5235
  9593  13F0                     l5237:	
  9594                           
  9595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9596  13F0  0023               	movlb	3	; select bank3
  9597  13F1  083D               	movf	(_nout+1)^(0+384),w
  9598  13F2  0020               	movlb	0	; select bank0
  9599  13F3  00EB               	movwf	?_vfprintf+1
  9600  13F4  0023               	movlb	3	; select bank3
  9601  13F5  083C               	movf	_nout^(0+384),w
  9602  13F6  0020               	movlb	0	; select bank0
  9603  13F7  00EA               	movwf	?_vfprintf
  9604  13F8  0008               	return
  9605  13F9                     __end_of_vfprintf:	
  9606                           
  9607                           	psect	text29
  9608  0947                     __ptext29:	
  9609 ;; *************** function _vfpfcnvrt *****************
  9610 ;; Defined at:
  9611 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  fp              1    wreg     PTR struct _IO_FILE
  9614 ;;		 -> NULL(0), 
  9615 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
  9616 ;;		 -> vfprintf@cfmt(2), 
  9617 ;;  ap              1   59[BANK0 ] PTR PTR void 
  9618 ;;		 -> printf@ap(1), 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  9621 ;;		 -> NULL(0), 
  9622 ;;  ll              8   65[BANK0 ] long long 
  9623 ;;  llu             8    0        unsigned long long 
  9624 ;;  f               4    0        unsigned long long 
  9625 ;;  ct              3    0        unsigned char [3]
  9626 ;;  vp              2    0        PTR void 
  9627 ;;  i               2    0        int 
  9628 ;;  done            2    0        int 
  9629 ;;  cp              2    0        PTR unsigned char 
  9630 ;;  c               1    0        unsigned char 
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  2   58[BANK0 ] int 
  9633 ;; Registers used:
  9634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;Total ram usage:       16 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:   10
  9647 ;; This function calls:
  9648 ;;		_dtoa
  9649 ;;		_fputc
  9650 ;; This function is called by:
  9651 ;;		_vfprintf
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           
  9656                           ;psect for function _vfpfcnvrt
  9657  0947                     _vfpfcnvrt:	
  9658                           
  9659                           ;incstack = 0
  9660                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9661                           ;vfpfcnvrt@fp stored from wreg
  9662  0947  0020               	movlb	0	; select bank0
  9663  0948  00E9               	movwf	vfpfcnvrt@fp
  9664                           
  9665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9666  0949  085A               	movf	vfpfcnvrt@fmt,w
  9667  094A  0086               	movwf	6
  9668  094B  0187               	clrf	7
  9669  094C  3F40               	moviw [0]fsr1
  9670  094D  00DC               	movwf	??_vfpfcnvrt
  9671  094E  3F41               	moviw [1]fsr1
  9672  094F  00DD               	movwf	??_vfpfcnvrt+1
  9673  0950  085C               	movf	??_vfpfcnvrt,w
  9674  0951  0084               	movwf	4
  9675  0952  085D               	movf	??_vfpfcnvrt+1,w
  9676  0953  0085               	movwf	5
  9677  0954  0012               	moviw fsr0++
  9678  0955  3A25               	xorlw	37
  9679  0956  1D03               	btfss	3,2
  9680  0957  29F5               	goto	l5185
  9681                           
  9682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9683  0958  085A               	movf	vfpfcnvrt@fmt,w
  9684  0959  0086               	movwf	6
  9685  095A  0187               	clrf	7
  9686  095B  3001               	movlw	1
  9687  095C  0781               	addwf	1,f
  9688  095D  3141               	addfsr 1,1
  9689  095E  1803               	skipnc
  9690  095F  0A81               	incf	1,f
  9691                           
  9692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9693  0960  0023               	movlb	3	; select bank3
  9694  0961  01BE               	clrf	_width^(0+384)
  9695  0962  01BF               	clrf	(_width+1)^(0+384)
  9696  0963  0021               	movlb	1	; select bank1
  9697  0964  01D6               	clrf	_flags^(0+128)
  9698  0965  01D7               	clrf	(_flags+1)^(0+128)
  9699                           
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9701  0966  30FF               	movlw	255
  9702  0967  00D4               	movwf	_prec^(0+128)
  9703  0968  30FF               	movlw	255
  9704  0969  00D5               	movwf	(_prec^(0+128)+1)
  9705                           
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9707  096A  0020               	movlb	0	; select bank0
  9708  096B  085A               	movf	vfpfcnvrt@fmt,w
  9709  096C  0086               	movwf	6
  9710  096D  0187               	clrf	7
  9711  096E  3F40               	moviw [0]fsr1
  9712  096F  00DC               	movwf	??_vfpfcnvrt
  9713  0970  3F41               	moviw [1]fsr1
  9714  0971  00DD               	movwf	??_vfpfcnvrt+1
  9715  0972  085C               	movf	??_vfpfcnvrt,w
  9716  0973  0084               	movwf	4
  9717  0974  085D               	movf	??_vfpfcnvrt+1,w
  9718  0975  0085               	movwf	5
  9719  0976  0012               	moviw fsr0++
  9720  0977  3A64               	xorlw	100
  9721  0978  1903               	btfsc	3,2
  9722  0979  2989               	goto	l5161
  9723  097A  085A               	movf	vfpfcnvrt@fmt,w
  9724  097B  0086               	movwf	6
  9725  097C  0187               	clrf	7
  9726  097D  3F40               	moviw [0]fsr1
  9727  097E  00DC               	movwf	??_vfpfcnvrt
  9728  097F  3F41               	moviw [1]fsr1
  9729  0980  00DD               	movwf	??_vfpfcnvrt+1
  9730  0981  085C               	movf	??_vfpfcnvrt,w
  9731  0982  0084               	movwf	4
  9732  0983  085D               	movf	??_vfpfcnvrt+1,w
  9733  0984  0085               	movwf	5
  9734  0985  0012               	moviw fsr0++
  9735  0986  3A69               	xorlw	105
  9736  0987  1D03               	btfss	3,2
  9737  0988  29C3               	goto	l5169
  9738  0989                     l5161:	
  9739                           
  9740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9741  0989  085A               	movf	vfpfcnvrt@fmt,w
  9742  098A  0086               	movwf	6
  9743  098B  0187               	clrf	7
  9744  098C  3001               	movlw	1
  9745  098D  0781               	addwf	1,f
  9746  098E  3141               	addfsr 1,1
  9747  098F  1803               	skipnc
  9748  0990  0A81               	incf	1,f
  9749                           
  9750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9751  0991  085B               	movf	vfpfcnvrt@ap,w
  9752  0992  0086               	movwf	6
  9753  0993  0187               	clrf	7
  9754  0994  0801               	movf	1,w
  9755  0995  0084               	movwf	4
  9756  0996  0185               	clrf	5
  9757  0997  3002               	movlw	2
  9758  0998  0781               	addwf	1,f
  9759  0999  3F00               	moviw [0]fsr0
  9760  099A  00DC               	movwf	??_vfpfcnvrt
  9761  099B  3F01               	moviw [1]fsr0
  9762  099C  00DD               	movwf	??_vfpfcnvrt+1
  9763  099D  085C               	movf	??_vfpfcnvrt,w
  9764  099E  00E1               	movwf	vfpfcnvrt@ll
  9765  099F  085D               	movf	??_vfpfcnvrt+1,w
  9766  09A0  00E2               	movwf	vfpfcnvrt@ll+1
  9767  09A1  0D89               	rlf	9,f
  9768  09A2  3B89               	subwfb	9,f
  9769  09A3  0989               	comf	9,f
  9770  09A4  00E3               	movwf	vfpfcnvrt@ll+2
  9771  09A5  00E4               	movwf	vfpfcnvrt@ll+3
  9772  09A6  00E5               	movwf	vfpfcnvrt@ll+4
  9773  09A7  00E6               	movwf	vfpfcnvrt@ll+5
  9774  09A8  00E7               	movwf	vfpfcnvrt@ll+6
  9775  09A9  00E8               	movwf	vfpfcnvrt@ll+7
  9776                           
  9777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9778  09AA  0861               	movf	vfpfcnvrt@ll,w
  9779  09AB  00BC               	movwf	dtoa@d
  9780  09AC  0862               	movf	vfpfcnvrt@ll+1,w
  9781  09AD  00BD               	movwf	dtoa@d+1
  9782  09AE  0863               	movf	vfpfcnvrt@ll+2,w
  9783  09AF  00BE               	movwf	dtoa@d+2
  9784  09B0  0864               	movf	vfpfcnvrt@ll+3,w
  9785  09B1  00BF               	movwf	dtoa@d+3
  9786  09B2  0865               	movf	vfpfcnvrt@ll+4,w
  9787  09B3  00C0               	movwf	dtoa@d+4
  9788  09B4  0866               	movf	vfpfcnvrt@ll+5,w
  9789  09B5  00C1               	movwf	dtoa@d+5
  9790  09B6  0867               	movf	vfpfcnvrt@ll+6,w
  9791  09B7  00C2               	movwf	dtoa@d+6
  9792  09B8  0868               	movf	vfpfcnvrt@ll+7,w
  9793  09B9  00C3               	movwf	dtoa@d+7
  9794  09BA  0869               	movf	vfpfcnvrt@fp,w
  9795  09BB  318B  23EE         	fcall	_dtoa
  9796  09BD  0020               	movlb	0	; select bank0
  9797  09BE  083D               	movf	?_dtoa+1,w
  9798  09BF  00DB               	movwf	?_vfpfcnvrt+1
  9799  09C0  083C               	movf	?_dtoa,w
  9800  09C1  00DA               	movwf	?_vfpfcnvrt
  9801  09C2  0008               	return
  9802  09C3                     l5169:	
  9803                           
  9804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9805  09C3  085A               	movf	vfpfcnvrt@fmt,w
  9806  09C4  0086               	movwf	6
  9807  09C5  0187               	clrf	7
  9808  09C6  3F40               	moviw [0]fsr1
  9809  09C7  00DC               	movwf	??_vfpfcnvrt
  9810  09C8  3F41               	moviw [1]fsr1
  9811  09C9  00DD               	movwf	??_vfpfcnvrt+1
  9812  09CA  085C               	movf	??_vfpfcnvrt,w
  9813  09CB  0084               	movwf	4
  9814  09CC  085D               	movf	??_vfpfcnvrt+1,w
  9815  09CD  0085               	movwf	5
  9816  09CE  0012               	moviw fsr0++
  9817  09CF  3A25               	xorlw	37
  9818  09D0  1D03               	btfss	3,2
  9819  09D1  29EA               	goto	l5179
  9820                           
  9821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9822  09D2  085A               	movf	vfpfcnvrt@fmt,w
  9823  09D3  0086               	movwf	6
  9824  09D4  0187               	clrf	7
  9825  09D5  3001               	movlw	1
  9826  09D6  0781               	addwf	1,f
  9827  09D7  3141               	addfsr 1,1
  9828  09D8  1803               	skipnc
  9829  09D9  0A81               	incf	1,f
  9830                           
  9831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9832  09DA  3025               	movlw	37
  9833  09DB  00A3               	movwf	fputc@c
  9834  09DC  3000               	movlw	0
  9835  09DD  00A4               	movwf	fputc@c+1
  9836  09DE  0869               	movf	vfpfcnvrt@fp,w
  9837  09DF  00DC               	movwf	??_vfpfcnvrt
  9838  09E0  085C               	movf	??_vfpfcnvrt,w
  9839  09E1  00A5               	movwf	fputc@fp
  9840  09E2  3193  23F9         	fcall	_fputc
  9841  09E4                     l5175:	
  9842                           
  9843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9844  09E4  3001               	movlw	1
  9845  09E5  0020               	movlb	0	; select bank0
  9846  09E6  00DA               	movwf	?_vfpfcnvrt
  9847  09E7  3000               	movlw	0
  9848  09E8  00DB               	movwf	?_vfpfcnvrt+1
  9849  09E9  0008               	return
  9850  09EA                     l5179:	
  9851                           
  9852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9853  09EA  085A               	movf	vfpfcnvrt@fmt,w
  9854  09EB  0086               	movwf	6
  9855  09EC  0187               	clrf	7
  9856  09ED  3001               	movlw	1
  9857  09EE  0781               	addwf	1,f
  9858  09EF  3141               	addfsr 1,1
  9859  09F0  1803               	skipnc
  9860  09F1  0A81               	incf	1,f
  9861                           
  9862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9863  09F2  01DA               	clrf	?_vfpfcnvrt
  9864  09F3  01DB               	clrf	?_vfpfcnvrt+1
  9865  09F4  0008               	return
  9866  09F5                     l5185:	
  9867                           
  9868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9869  09F5  085A               	movf	vfpfcnvrt@fmt,w
  9870  09F6  0086               	movwf	6
  9871  09F7  0187               	clrf	7
  9872  09F8  3F40               	moviw [0]fsr1
  9873  09F9  00DC               	movwf	??_vfpfcnvrt
  9874  09FA  3F41               	moviw [1]fsr1
  9875  09FB  00DD               	movwf	??_vfpfcnvrt+1
  9876  09FC  085C               	movf	??_vfpfcnvrt,w
  9877  09FD  0084               	movwf	4
  9878  09FE  085D               	movf	??_vfpfcnvrt+1,w
  9879  09FF  0085               	movwf	5
  9880  0A00  0800               	movf	0,w	;code access
  9881  0A01  00DE               	movwf	??_vfpfcnvrt+2
  9882  0A02  01DF               	clrf	??_vfpfcnvrt+3
  9883  0A03  085E               	movf	??_vfpfcnvrt+2,w
  9884  0A04  00A3               	movwf	fputc@c
  9885  0A05  085F               	movf	??_vfpfcnvrt+3,w
  9886  0A06  00A4               	movwf	fputc@c+1
  9887  0A07  0869               	movf	vfpfcnvrt@fp,w
  9888  0A08  00E0               	movwf	??_vfpfcnvrt+4
  9889  0A09  0860               	movf	??_vfpfcnvrt+4,w
  9890  0A0A  00A5               	movwf	fputc@fp
  9891  0A0B  3193  23F9  3189   	fcall	_fputc
  9892                           
  9893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9894  0A0E  0020               	movlb	0	; select bank0
  9895  0A0F  085A               	movf	vfpfcnvrt@fmt,w
  9896  0A10  0086               	movwf	6
  9897  0A11  0187               	clrf	7
  9898  0A12  3001               	movlw	1
  9899  0A13  0781               	addwf	1,f
  9900  0A14  3141               	addfsr 1,1
  9901  0A15  1803               	skipnc
  9902  0A16  0A81               	incf	1,f
  9903  0A17  29E4               	goto	l5175
  9904  0A18                     __end_of_vfpfcnvrt:	
  9905                           
  9906                           	psect	text30
  9907  0BEE                     __ptext30:	
  9908 ;; *************** function _dtoa *****************
  9909 ;; Defined at:
  9910 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  fp              1    wreg     PTR struct _IO_FILE
  9913 ;;		 -> NULL(0), 
  9914 ;;  d               8   28[BANK0 ] long long 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  fp              1   41[BANK0 ] PTR struct _IO_FILE
  9917 ;;		 -> NULL(0), 
  9918 ;;  n               8   48[BANK0 ] long long 
  9919 ;;  i               2   56[BANK0 ] int 
  9920 ;;  s               2   46[BANK0 ] int 
  9921 ;;  w               2   44[BANK0 ] int 
  9922 ;;  p               2   42[BANK0 ] int 
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  2   28[BANK0 ] int 
  9925 ;; Registers used:
  9926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9932 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;Total ram usage:       30 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:    9
  9939 ;; This function calls:
  9940 ;;		___aodiv
  9941 ;;		___aomod
  9942 ;;		_abs
  9943 ;;		_pad
  9944 ;; This function is called by:
  9945 ;;		_vfpfcnvrt
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           
  9950                           ;psect for function _dtoa
  9951  0BEE                     _dtoa:	
  9952                           
  9953                           ;incstack = 0
  9954                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9955                           ;dtoa@fp stored from wreg
  9956  0BEE  0020               	movlb	0	; select bank0
  9957  0BEF  00C9               	movwf	dtoa@fp
  9958                           
  9959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9960  0BF0  083C               	movf	dtoa@d,w
  9961  0BF1  00D0               	movwf	dtoa@n
  9962  0BF2  083D               	movf	dtoa@d+1,w
  9963  0BF3  00D1               	movwf	dtoa@n+1
  9964  0BF4  083E               	movf	dtoa@d+2,w
  9965  0BF5  00D2               	movwf	dtoa@n+2
  9966  0BF6  083F               	movf	dtoa@d+3,w
  9967  0BF7  00D3               	movwf	dtoa@n+3
  9968  0BF8  0840               	movf	dtoa@d+4,w
  9969  0BF9  00D4               	movwf	dtoa@n+4
  9970  0BFA  0841               	movf	dtoa@d+5,w
  9971  0BFB  00D5               	movwf	dtoa@n+5
  9972  0BFC  0842               	movf	dtoa@d+6,w
  9973  0BFD  00D6               	movwf	dtoa@n+6
  9974  0BFE  0843               	movf	dtoa@d+7,w
  9975  0BFF  00D7               	movwf	dtoa@n+7
  9976                           
  9977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9978  0C00  3050               	movlw	low dtoa@n
  9979  0C01  0086               	movwf	6
  9980  0C02  3000               	movlw	high dtoa@n
  9981  0C03  0087               	movwf	7
  9982  0C04  3F47               	moviw [7]fsr1
  9983  0C05  00C4               	movwf	??_dtoa
  9984  0C06  1FC4               	btfss	??_dtoa,7
  9985  0C07  2C0A               	goto	u4000
  9986  0C08  3001               	movlw	1
  9987  0C09  2C0B               	goto	u4010
  9988  0C0A                     u4000:	
  9989  0C0A  3000               	movlw	0
  9990  0C0B                     u4010:	
  9991  0C0B  0020               	movlb	0	; select bank0
  9992  0C0C  00C5               	movwf	??_dtoa+1
  9993  0C0D  01C6               	clrf	??_dtoa+2
  9994  0C0E  0845               	movf	??_dtoa+1,w
  9995  0C0F  00CE               	movwf	dtoa@s
  9996  0C10  0846               	movf	??_dtoa+2,w
  9997  0C11  00CF               	movwf	dtoa@s+1
  9998                           
  9999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10000  0C12  084E               	movf	dtoa@s,w
 10001  0C13  044F               	iorwf	dtoa@s+1,w
 10002  0C14  1903               	btfsc	3,2
 10003  0C15  2C34               	goto	l1130
 10004                           
 10005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10006  0C16  09D0               	comf	dtoa@n,f
 10007  0C17  09D1               	comf	dtoa@n+1,f
 10008  0C18  09D2               	comf	dtoa@n+2,f
 10009  0C19  09D3               	comf	dtoa@n+3,f
 10010  0C1A  09D4               	comf	dtoa@n+4,f
 10011  0C1B  09D5               	comf	dtoa@n+5,f
 10012  0C1C  09D6               	comf	dtoa@n+6,f
 10013  0C1D  09D7               	comf	dtoa@n+7,f
 10014  0C1E  0AD0               	incf	dtoa@n,f
 10015  0C1F  1D03               	skipz
 10016  0C20  2C34               	goto	l1130
 10017  0C21  0AD1               	incf	dtoa@n+1,f
 10018  0C22  1D03               	skipz
 10019  0C23  2C34               	goto	l1130
 10020  0C24  0AD2               	incf	dtoa@n+2,f
 10021  0C25  1D03               	skipz
 10022  0C26  2C34               	goto	l1130
 10023  0C27  0AD3               	incf	dtoa@n+3,f
 10024  0C28  1D03               	skipz
 10025  0C29  2C34               	goto	l1130
 10026  0C2A  0AD4               	incf	dtoa@n+4,f
 10027  0C2B  1D03               	skipz
 10028  0C2C  2C34               	goto	l1130
 10029  0C2D  0AD5               	incf	dtoa@n+5,f
 10030  0C2E  1D03               	skipz
 10031  0C2F  2C34               	goto	l1130
 10032  0C30  0AD6               	incf	dtoa@n+6,f
 10033  0C31  1D03               	skipz
 10034  0C32  2C34               	goto	l1130
 10035  0C33  0AD7               	incf	dtoa@n+7,f
 10036  0C34                     l1130:	
 10037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 10038                           
 10039                           
 10040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10041  0C34  0021               	movlb	1	; select bank1
 10042  0C35  1BD5               	btfsc	(_prec+1)^(0+128),7
 10043  0C36  2C3B               	goto	l1131
 10044                           
 10045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10046  0C37  30FD               	movlw	253
 10047  0C38  05D6               	andwf	_flags^(0+128),f
 10048  0C39  30FF               	movlw	255
 10049  0C3A  05D7               	andwf	(_flags+1)^(0+128),f
 10050  0C3B                     l1131:	
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 10052                           
 10053                           
 10054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10055  0C3B  0855               	movf	(_prec+1)^(0+128),w
 10056  0C3C  3A80               	xorlw	128
 10057  0C3D  0020               	movlb	0	; select bank0
 10058  0C3E  00C4               	movwf	??_dtoa
 10059  0C3F  3080               	movlw	128
 10060  0C40  0244               	subwf	??_dtoa,w
 10061  0C41  1D03               	skipz
 10062  0C42  2C46               	goto	u4055
 10063  0C43  3001               	movlw	1
 10064  0C44  0021               	movlb	1	; select bank1
 10065  0C45  0254               	subwf	_prec^(0+128),w
 10066  0C46                     u4055:	
 10067  0C46  1803               	skipnc
 10068  0C47  2C4E               	goto	l5099
 10069  0C48  3001               	movlw	1
 10070  0C49  0020               	movlb	0	; select bank0
 10071  0C4A  00CA               	movwf	dtoa@p
 10072  0C4B  3000               	movlw	0
 10073  0C4C  00CB               	movwf	dtoa@p+1
 10074  0C4D  2C56               	goto	l1135
 10075  0C4E                     l5099:	
 10076  0C4E  0021               	movlb	1	; select bank1
 10077  0C4F  0855               	movf	(_prec+1)^(0+128),w
 10078  0C50  0020               	movlb	0	; select bank0
 10079  0C51  00CB               	movwf	dtoa@p+1
 10080  0C52  0021               	movlb	1	; select bank1
 10081  0C53  0854               	movf	_prec^(0+128),w
 10082  0C54  0020               	movlb	0	; select bank0
 10083  0C55  00CA               	movwf	dtoa@p
 10084  0C56                     l1135:	
 10085                           
 10086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10087  0C56  0023               	movlb	3	; select bank3
 10088  0C57  083F               	movf	(_width+1)^(0+384),w
 10089  0C58  0020               	movlb	0	; select bank0
 10090  0C59  00CD               	movwf	dtoa@w+1
 10091  0C5A  0023               	movlb	3	; select bank3
 10092  0C5B  083E               	movf	_width^(0+384),w
 10093  0C5C  0020               	movlb	0	; select bank0
 10094  0C5D  00CC               	movwf	dtoa@w
 10095                           
 10096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10097  0C5E  084E               	movf	dtoa@s,w
 10098  0C5F  044F               	iorwf	dtoa@s+1,w
 10099  0C60  1D03               	btfss	3,2
 10100  0C61  2C65               	goto	l5105
 10101  0C62  0021               	movlb	1	; select bank1
 10102  0C63  1D56               	btfss	_flags^(0+128),2
 10103  0C64  2C6A               	goto	l1136
 10104  0C65                     l5105:	
 10105                           
 10106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10107  0C65  30FF               	movlw	255
 10108  0C66  0020               	movlb	0	; select bank0
 10109  0C67  07CC               	addwf	dtoa@w,f
 10110  0C68  30FF               	movlw	255
 10111  0C69  3DCD               	addwfc	dtoa@w+1,f
 10112  0C6A                     l1136:	
 10113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 10114                           
 10115                           
 10116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10117  0C6A  301F               	movlw	31
 10118  0C6B  0020               	movlb	0	; select bank0
 10119  0C6C  00D8               	movwf	dtoa@i
 10120  0C6D  3000               	movlw	0
 10121  0C6E  00D9               	movwf	dtoa@i+1
 10122                           
 10123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10124  0C6F  0025               	movlb	5	; select bank5
 10125  0C70  01EF               	clrf	(_dbuf^(0+640)+31)
 10126                           
 10127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10128  0C71  2D00               	goto	l1139
 10129  0C72                     l5119:	
 10130  0C72  0020               	movlb	0	; select bank0
 10131  0C73  0850               	movf	dtoa@n,w
 10132  0C74  0451               	iorwf	dtoa@n+1,w
 10133  0C75  0452               	iorwf	dtoa@n+2,w
 10134  0C76  0453               	iorwf	dtoa@n+3,w
 10135  0C77  0454               	iorwf	dtoa@n+4,w
 10136  0C78  0455               	iorwf	dtoa@n+5,w
 10137  0C79  0456               	iorwf	dtoa@n+6,w
 10138  0C7A  0457               	iorwf	dtoa@n+7,w
 10139  0C7B  1D03               	skipz
 10140  0C7C  2C97               	goto	l5109
 10141  0C7D  084B               	movf	dtoa@p+1,w
 10142  0C7E  3A80               	xorlw	128
 10143  0C7F  00C4               	movwf	??_dtoa
 10144  0C80  3080               	movlw	128
 10145  0C81  0244               	subwf	??_dtoa,w
 10146  0C82  1D03               	skipz
 10147  0C83  2C86               	goto	u4105
 10148  0C84  3001               	movlw	1
 10149  0C85  024A               	subwf	dtoa@p,w
 10150  0C86                     u4105:	
 10151  0C86  1803               	skipnc
 10152  0C87  2C97               	goto	l5109
 10153  0C88  0020               	movlb	0	; select bank0
 10154  0C89  084D               	movf	dtoa@w+1,w
 10155  0C8A  3A80               	xorlw	128
 10156  0C8B  00C4               	movwf	??_dtoa
 10157  0C8C  3080               	movlw	128
 10158  0C8D  0244               	subwf	??_dtoa,w
 10159  0C8E  1D03               	skipz
 10160  0C8F  2C92               	goto	u4115
 10161  0C90  3001               	movlw	1
 10162  0C91  024C               	subwf	dtoa@w,w
 10163  0C92                     u4115:	
 10164  0C92  1C03               	skipc
 10165  0C93  2D0C               	goto	l5127
 10166  0C94  0021               	movlb	1	; select bank1
 10167  0C95  1CD6               	btfss	_flags^(0+128),1
 10168  0C96  2D0C               	goto	l5127
 10169  0C97                     l5109:	
 10170                           
 10171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10172  0C97  30FF               	movlw	255
 10173  0C98  0020               	movlb	0	; select bank0
 10174  0C99  07D8               	addwf	dtoa@i,f
 10175  0C9A  30FF               	movlw	255
 10176  0C9B  3DD9               	addwfc	dtoa@i+1,f
 10177                           
 10178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10179  0C9C  300A               	movlw	10
 10180  0C9D  00A0               	movwf	___aomod@divisor
 10181  0C9E  01A1               	clrf	___aomod@divisor+1
 10182  0C9F  01A2               	clrf	___aomod@divisor+2
 10183  0CA0  01A3               	clrf	___aomod@divisor+3
 10184  0CA1  01A4               	clrf	___aomod@divisor+4
 10185  0CA2  01A5               	clrf	___aomod@divisor+5
 10186  0CA3  01A6               	clrf	___aomod@divisor+6
 10187  0CA4  01A7               	clrf	___aomod@divisor+7
 10188  0CA5  0850               	movf	dtoa@n,w
 10189  0CA6  00A8               	movwf	___aomod@dividend
 10190  0CA7  0851               	movf	dtoa@n+1,w
 10191  0CA8  00A9               	movwf	___aomod@dividend+1
 10192  0CA9  0852               	movf	dtoa@n+2,w
 10193  0CAA  00AA               	movwf	___aomod@dividend+2
 10194  0CAB  0853               	movf	dtoa@n+3,w
 10195  0CAC  00AB               	movwf	___aomod@dividend+3
 10196  0CAD  0854               	movf	dtoa@n+4,w
 10197  0CAE  00AC               	movwf	___aomod@dividend+4
 10198  0CAF  0855               	movf	dtoa@n+5,w
 10199  0CB0  00AD               	movwf	___aomod@dividend+5
 10200  0CB1  0856               	movf	dtoa@n+6,w
 10201  0CB2  00AE               	movwf	___aomod@dividend+6
 10202  0CB3  0857               	movf	dtoa@n+7,w
 10203  0CB4  00AF               	movwf	___aomod@dividend+7
 10204  0CB5  318A  2218  318B   	fcall	___aomod
 10205  0CB8  0020               	movlb	0	; select bank0
 10206  0CB9  0821               	movf	?___aomod+1,w
 10207  0CBA  00B4               	movwf	abs@a+1
 10208  0CBB  0820               	movf	?___aomod,w
 10209  0CBC  00B3               	movwf	abs@a
 10210  0CBD  3191  21A2  318B   	fcall	_abs
 10211  0CC0  0020               	movlb	0	; select bank0
 10212  0CC1  0833               	movf	?_abs,w
 10213  0CC2  3E30               	addlw	48
 10214  0CC3  00C4               	movwf	??_dtoa
 10215  0CC4  0858               	movf	dtoa@i,w
 10216  0CC5  3ED0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10217  0CC6  0086               	movwf	6
 10218  0CC7  3002               	movlw	2	; select bank5/6
 10219  0CC8  0087               	movwf	7
 10220  0CC9  0844               	movf	??_dtoa,w
 10221  0CCA  0081               	movwf	1
 10222                           
 10223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10224  0CCB  30FF               	movlw	255
 10225  0CCC  07CA               	addwf	dtoa@p,f
 10226  0CCD  30FF               	movlw	255
 10227  0CCE  3DCB               	addwfc	dtoa@p+1,f
 10228                           
 10229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10230  0CCF  30FF               	movlw	255
 10231  0CD0  07CC               	addwf	dtoa@w,f
 10232  0CD1  30FF               	movlw	255
 10233  0CD2  3DCD               	addwfc	dtoa@w+1,f
 10234                           
 10235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10236  0CD3  300A               	movlw	10
 10237  0CD4  00A0               	movwf	___aodiv@divisor
 10238  0CD5  01A1               	clrf	___aodiv@divisor+1
 10239  0CD6  01A2               	clrf	___aodiv@divisor+2
 10240  0CD7  01A3               	clrf	___aodiv@divisor+3
 10241  0CD8  01A4               	clrf	___aodiv@divisor+4
 10242  0CD9  01A5               	clrf	___aodiv@divisor+5
 10243  0CDA  01A6               	clrf	___aodiv@divisor+6
 10244  0CDB  01A7               	clrf	___aodiv@divisor+7
 10245  0CDC  0850               	movf	dtoa@n,w
 10246  0CDD  00A8               	movwf	___aodiv@dividend
 10247  0CDE  0851               	movf	dtoa@n+1,w
 10248  0CDF  00A9               	movwf	___aodiv@dividend+1
 10249  0CE0  0852               	movf	dtoa@n+2,w
 10250  0CE1  00AA               	movwf	___aodiv@dividend+2
 10251  0CE2  0853               	movf	dtoa@n+3,w
 10252  0CE3  00AB               	movwf	___aodiv@dividend+3
 10253  0CE4  0854               	movf	dtoa@n+4,w
 10254  0CE5  00AC               	movwf	___aodiv@dividend+4
 10255  0CE6  0855               	movf	dtoa@n+5,w
 10256  0CE7  00AD               	movwf	___aodiv@dividend+5
 10257  0CE8  0856               	movf	dtoa@n+6,w
 10258  0CE9  00AE               	movwf	___aodiv@dividend+6
 10259  0CEA  0857               	movf	dtoa@n+7,w
 10260  0CEB  00AF               	movwf	___aodiv@dividend+7
 10261  0CEC  318A  22F7  318B   	fcall	___aodiv
 10262  0CEF  0020               	movlb	0	; select bank0
 10263  0CF0  0820               	movf	?___aodiv,w
 10264  0CF1  00D0               	movwf	dtoa@n
 10265  0CF2  0821               	movf	?___aodiv+1,w
 10266  0CF3  00D1               	movwf	dtoa@n+1
 10267  0CF4  0822               	movf	?___aodiv+2,w
 10268  0CF5  00D2               	movwf	dtoa@n+2
 10269  0CF6  0823               	movf	?___aodiv+3,w
 10270  0CF7  00D3               	movwf	dtoa@n+3
 10271  0CF8  0824               	movf	?___aodiv+4,w
 10272  0CF9  00D4               	movwf	dtoa@n+4
 10273  0CFA  0825               	movf	?___aodiv+5,w
 10274  0CFB  00D5               	movwf	dtoa@n+5
 10275  0CFC  0826               	movf	?___aodiv+6,w
 10276  0CFD  00D6               	movwf	dtoa@n+6
 10277  0CFE  0827               	movf	?___aodiv+7,w
 10278  0CFF  00D7               	movwf	dtoa@n+7
 10279  0D00                     l1139:	
 10280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 10281                           
 10282                           
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10284  0D00  0020               	movlb	0	; select bank0
 10285  0D01  0859               	movf	dtoa@i+1,w
 10286  0D02  3A80               	xorlw	128
 10287  0D03  00C4               	movwf	??_dtoa
 10288  0D04  3080               	movlw	128
 10289  0D05  0244               	subwf	??_dtoa,w
 10290  0D06  1D03               	skipz
 10291  0D07  2D0A               	goto	u4085
 10292  0D08  3001               	movlw	1
 10293  0D09  0258               	subwf	dtoa@i,w
 10294  0D0A                     u4085:	
 10295  0D0A  1803               	btfsc	3,0
 10296  0D0B  2C72               	goto	l5119
 10297  0D0C                     l5127:	
 10298                           
 10299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10300  0D0C  0020               	movlb	0	; select bank0
 10301  0D0D  084E               	movf	dtoa@s,w
 10302  0D0E  044F               	iorwf	dtoa@s+1,w
 10303  0D0F  1D03               	btfss	3,2
 10304  0D10  2D14               	goto	l5131
 10305  0D11  0021               	movlb	1	; select bank1
 10306  0D12  1D56               	btfss	_flags^(0+128),2
 10307  0D13  2D2C               	goto	l5141
 10308  0D14                     l5131:	
 10309                           
 10310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10311  0D14  30FF               	movlw	255
 10312  0D15  0020               	movlb	0	; select bank0
 10313  0D16  07D8               	addwf	dtoa@i,f
 10314  0D17  30FF               	movlw	255
 10315  0D18  3DD9               	addwfc	dtoa@i+1,f
 10316                           
 10317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10318  0D19  084E               	movf	dtoa@s,w
 10319  0D1A  044F               	iorwf	dtoa@s+1,w
 10320  0D1B  1D03               	btfss	3,2
 10321  0D1C  2D1F               	goto	l5137
 10322  0D1D  302B               	movlw	43
 10323  0D1E  2D20               	goto	L6
 10324  0D1F                     l5137:	
 10325  0D1F  302D               	movlw	45
 10326  0D20                     L6:	
 10327  0D20  00C7               	movwf	_dtoa$1513
 10328  0D21  3000               	movlw	0
 10329  0D22  00C8               	movwf	_dtoa$1513+1
 10330  0D23  0847               	movf	_dtoa$1513,w
 10331  0D24  00C4               	movwf	??_dtoa
 10332  0D25  0858               	movf	dtoa@i,w
 10333  0D26  3ED0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10334  0D27  0086               	movwf	6
 10335  0D28  3002               	movlw	2	; select bank5/6
 10336  0D29  0087               	movwf	7
 10337  0D2A  0844               	movf	??_dtoa,w
 10338  0D2B  0081               	movwf	1
 10339  0D2C                     l5141:	
 10340                           
 10341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10342  0D2C  0020               	movlb	0	; select bank0
 10343  0D2D  0858               	movf	dtoa@i,w
 10344  0D2E  3ED0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10345  0D2F  00C4               	movwf	??_dtoa
 10346  0D30  0844               	movf	??_dtoa,w
 10347  0D31  00B3               	movwf	pad@buf
 10348  0D32  084D               	movf	dtoa@w+1,w
 10349  0D33  00B5               	movwf	pad@p+1
 10350  0D34  084C               	movf	dtoa@w,w
 10351  0D35  00B4               	movwf	pad@p
 10352  0D36  0849               	movf	dtoa@fp,w
 10353  0D37  3195  2574         	fcall	_pad
 10354  0D39  0020               	movlb	0	; select bank0
 10355  0D3A  0834               	movf	?_pad+1,w
 10356  0D3B  00BD               	movwf	?_dtoa+1
 10357  0D3C  0833               	movf	?_pad,w
 10358  0D3D  00BC               	movwf	?_dtoa
 10359  0D3E  0008               	return
 10360  0D3F                     __end_of_dtoa:	
 10361                           
 10362                           	psect	text31
 10363  1574                     __ptext31:	
 10364 ;; *************** function _pad *****************
 10365 ;; Defined at:
 10366 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  fp              1    wreg     PTR struct _IO_FILE
 10369 ;;		 -> NULL(0), 
 10370 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 10371 ;;		 -> dbuf(32), 
 10372 ;;  p               2   20[BANK0 ] int 
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 10375 ;;		 -> NULL(0), 
 10376 ;;  w               2   25[BANK0 ] int 
 10377 ;;  i               2   23[BANK0 ] int 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  2   19[BANK0 ] int 
 10380 ;; Registers used:
 10381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10387 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;Total ram usage:        9 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    8
 10394 ;; This function calls:
 10395 ;;		_fputc
 10396 ;;		_fputs
 10397 ;;		_strlen
 10398 ;; This function is called by:
 10399 ;;		_dtoa
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           
 10404                           ;psect for function _pad
 10405  1574                     _pad:	
 10406                           
 10407                           ;incstack = 0
 10408                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10409                           ;pad@fp stored from wreg
 10410  1574  0020               	movlb	0	; select bank0
 10411  1575  00BB               	movwf	pad@fp
 10412                           
 10413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10414  1576  0021               	movlb	1	; select bank1
 10415  1577  1C56               	btfss	_flags^(0+128),0
 10416  1578  2D82               	goto	l5071
 10417                           
 10418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10419  1579  0020               	movlb	0	; select bank0
 10420  157A  083B               	movf	pad@fp,w
 10421  157B  00B6               	movwf	??_pad
 10422  157C  0836               	movf	??_pad,w
 10423  157D  00AB               	movwf	fputs@fp
 10424  157E  0833               	movf	pad@buf,w
 10425  157F  3188  2000  3195   	fcall	_fputs
 10426  1582                     l5071:	
 10427                           
 10428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10429  1582  0020               	movlb	0	; select bank0
 10430  1583  1BB5               	btfsc	pad@p+1,7
 10431  1584  2D8A               	goto	l5075
 10432  1585  0835               	movf	pad@p+1,w
 10433  1586  00BA               	movwf	pad@w+1
 10434  1587  0834               	movf	pad@p,w
 10435  1588  00B9               	movwf	pad@w
 10436  1589  2D8C               	goto	l1122
 10437  158A                     l5075:	
 10438  158A  01B9               	clrf	pad@w
 10439  158B  01BA               	clrf	pad@w+1
 10440  158C                     l1122:	
 10441                           
 10442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10443  158C  01B7               	clrf	pad@i
 10444  158D  01B8               	clrf	pad@i+1
 10445  158E                     l5081:	
 10446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10447                           
 10448                           
 10449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10450  158E  0838               	movf	pad@i+1,w
 10451  158F  3A80               	xorlw	128
 10452  1590  00B6               	movwf	??_pad
 10453  1591  083A               	movf	pad@w+1,w
 10454  1592  3A80               	xorlw	128
 10455  1593  0236               	subwf	??_pad,w
 10456  1594  1D03               	skipz
 10457  1595  2D98               	goto	u3985
 10458  1596  0839               	movf	pad@w,w
 10459  1597  0237               	subwf	pad@i,w
 10460  1598                     u3985:	
 10461  1598  1803               	btfsc	3,0
 10462  1599  2DAC               	goto	l1125
 10463                           
 10464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10465  159A  3020               	movlw	32
 10466  159B  0020               	movlb	0	; select bank0
 10467  159C  00A3               	movwf	fputc@c
 10468  159D  3000               	movlw	0
 10469  159E  00A4               	movwf	fputc@c+1
 10470  159F  083B               	movf	pad@fp,w
 10471  15A0  00B6               	movwf	??_pad
 10472  15A1  0836               	movf	??_pad,w
 10473  15A2  00A5               	movwf	fputc@fp
 10474  15A3  3193  23F9  3195   	fcall	_fputc
 10475                           
 10476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10477  15A6  3001               	movlw	1
 10478  15A7  0020               	movlb	0	; select bank0
 10479  15A8  07B7               	addwf	pad@i,f
 10480  15A9  3000               	movlw	0
 10481  15AA  3DB8               	addwfc	pad@i+1,f
 10482  15AB  2D8E               	goto	l5081
 10483  15AC                     l1125:	
 10484                           
 10485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10486  15AC  0021               	movlb	1	; select bank1
 10487  15AD  1856               	btfsc	_flags^(0+128),0
 10488  15AE  2DB8               	goto	l1126
 10489                           
 10490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10491  15AF  0020               	movlb	0	; select bank0
 10492  15B0  083B               	movf	pad@fp,w
 10493  15B1  00B6               	movwf	??_pad
 10494  15B2  0836               	movf	??_pad,w
 10495  15B3  00AB               	movwf	fputs@fp
 10496  15B4  0833               	movf	pad@buf,w
 10497  15B5  3188  2000  3195   	fcall	_fputs
 10498  15B8                     l1126:	
 10499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
 10500                           
 10501                           
 10502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10503  15B8  0020               	movlb	0	; select bank0
 10504  15B9  0833               	movf	pad@buf,w
 10505  15BA  3191  21BB         	fcall	_strlen
 10506  15BC  0020               	movlb	0	; select bank0
 10507  15BD  0839               	movf	pad@w,w
 10508  15BE  0720               	addwf	?_strlen,w
 10509  15BF  00B3               	movwf	?_pad
 10510  15C0  083A               	movf	pad@w+1,w
 10511  15C1  3D21               	addwfc	?_strlen+1,w
 10512  15C2  00B4               	movwf	?_pad+1
 10513  15C3  0008               	return
 10514  15C4                     __end_of_pad:	
 10515                           
 10516                           	psect	text32
 10517  11BB                     __ptext32:	
 10518 ;; *************** function _strlen *****************
 10519 ;; Defined at:
 10520 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  s               1    wreg     PTR const unsigned char 
 10523 ;;		 -> dbuf(32), 
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 10526 ;;		 -> dbuf(32), 
 10527 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 10528 ;;		 -> dbuf(32), 
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  2    0[BANK0 ] unsigned int 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;Total ram usage:        5 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:    4
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_pad
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552                           
 10553                           ;psect for function _strlen
 10554  11BB                     _strlen:	
 10555                           
 10556                           ;incstack = 0
 10557                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10558                           ;strlen@s stored from wreg
 10559  11BB  0020               	movlb	0	; select bank0
 10560  11BC  00A4               	movwf	strlen@s
 10561  11BD  0824               	movf	strlen@s,w
 10562  11BE  00A2               	movwf	??_strlen
 10563  11BF  0822               	movf	??_strlen,w
 10564  11C0  00A3               	movwf	strlen@a
 10565  11C1                     l3489:	
 10566  11C1  0824               	movf	strlen@s,w
 10567  11C2  0086               	movwf	6
 10568  11C3  3002               	movlw	2	; select bank4/5
 10569  11C4  0087               	movwf	7
 10570  11C5  0801               	movf	1,w
 10571  11C6  1903               	btfsc	3,2
 10572  11C7  29CD               	goto	l3491
 10573  11C8  3001               	movlw	1
 10574  11C9  00A2               	movwf	??_strlen
 10575  11CA  0822               	movf	??_strlen,w
 10576  11CB  07A4               	addwf	strlen@s,f
 10577  11CC  29C1               	goto	l3489
 10578  11CD                     l3491:	
 10579  11CD  0823               	movf	strlen@a,w
 10580  11CE  0224               	subwf	strlen@s,w
 10581  11CF  00A0               	movwf	?_strlen
 10582  11D0  01A1               	clrf	?_strlen+1
 10583  11D1  1BA0               	btfsc	?_strlen,7
 10584  11D2  03A1               	decf	?_strlen+1,f
 10585  11D3  0008               	return
 10586  11D4                     __end_of_strlen:	
 10587                           
 10588                           	psect	text33
 10589  0800                     __ptext33:	
 10590 ;; *************** function _fputs *****************
 10591 ;; Defined at:
 10592 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;  s               1    wreg     PTR const unsigned char 
 10595 ;;		 -> dbuf(32), 
 10596 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 10597 ;;		 -> NULL(0), 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 10600 ;;		 -> dbuf(32), 
 10601 ;;  i               2   16[BANK0 ] int 
 10602 ;;  c               1   15[BANK0 ] unsigned char 
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  2   11[BANK0 ] int 
 10605 ;; Registers used:
 10606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10612 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;Total ram usage:        8 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; Hardware stack levels required when called:    7
 10619 ;; This function calls:
 10620 ;;		_fputc
 10621 ;; This function is called by:
 10622 ;;		_pad
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           
 10627                           ;psect for function _fputs
 10628  0800                     _fputs:	
 10629                           
 10630                           ;incstack = 0
 10631                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10632                           ;fputs@s stored from wreg
 10633  0800  0020               	movlb	0	; select bank0
 10634  0801  00B2               	movwf	fputs@s
 10635  0802  01B0               	clrf	fputs@i
 10636  0803  01B1               	clrf	fputs@i+1
 10637  0804                     l5065:	
 10638  0804  0830               	movf	fputs@i,w
 10639  0805  0732               	addwf	fputs@s,w
 10640  0806  00AC               	movwf	??_fputs
 10641  0807  082C               	movf	??_fputs,w
 10642  0808  0086               	movwf	6
 10643  0809  3002               	movlw	2	; select bank4/5
 10644  080A  0087               	movwf	7
 10645  080B  0801               	movf	1,w
 10646  080C  00AD               	movwf	??_fputs+1
 10647  080D  082D               	movf	??_fputs+1,w
 10648  080E  00AF               	movwf	fputs@c
 10649  080F  082F               	movf	fputs@c,w
 10650  0810  1903               	btfsc	3,2
 10651  0811  0008               	return
 10652  0812  082F               	movf	fputs@c,w
 10653  0813  00AC               	movwf	??_fputs
 10654  0814  01AD               	clrf	??_fputs+1
 10655  0815  082C               	movf	??_fputs,w
 10656  0816  00A3               	movwf	fputc@c
 10657  0817  082D               	movf	??_fputs+1,w
 10658  0818  00A4               	movwf	fputc@c+1
 10659  0819  082B               	movf	fputs@fp,w
 10660  081A  00AE               	movwf	??_fputs+2
 10661  081B  082E               	movf	??_fputs+2,w
 10662  081C  00A5               	movwf	fputc@fp
 10663  081D  3193  23F9  3188   	fcall	_fputc
 10664  0820  3001               	movlw	1
 10665  0821  0020               	movlb	0	; select bank0
 10666  0822  07B0               	addwf	fputs@i,f
 10667  0823  3000               	movlw	0
 10668  0824  3DB1               	addwfc	fputs@i+1,f
 10669  0825  2804               	goto	l5065
 10670  0826                     __end_of_fputs:	
 10671                           
 10672                           	psect	text34
 10673  13F9                     __ptext34:	
 10674 ;; *************** function _fputc *****************
 10675 ;; Defined at:
 10676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  c               2    3[BANK0 ] int 
 10679 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 10680 ;;		 -> NULL(0), 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  2    3[BANK0 ] int 
 10685 ;; Registers used:
 10686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10692 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;Total ram usage:        8 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    6
 10699 ;; This function calls:
 10700 ;;		_putch
 10701 ;; This function is called by:
 10702 ;;		_pad
 10703 ;;		_vfpfcnvrt
 10704 ;;		_fputs
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           
 10709                           ;psect for function _fputc
 10710  13F9                     _fputc:	
 10711                           
 10712                           ;incstack = 0
 10713                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10714  13F9  0020               	movlb	0	; select bank0
 10715  13FA  0825               	movf	fputc@fp,w
 10716  13FB  1D03               	btfss	3,2
 10717  13FC  0825               	movf	fputc@fp,w
 10718  13FD  1D03               	btfss	3,2
 10719  13FE  2C03               	goto	l5051
 10720  13FF  0823               	movf	fputc@c,w
 10721  1400  3190  203F         	fcall	_putch
 10722  1402  0008               	return
 10723  1403                     l5051:	
 10724  1403  0825               	movf	fputc@fp,w
 10725  1404  3E03               	addlw	3
 10726  1405  0086               	movwf	6
 10727  1406  0187               	clrf	7
 10728  1407  0016               	moviw fsr1++
 10729  1408  0401               	iorwf	1,w
 10730  1409  1903               	btfsc	3,2
 10731  140A  2C26               	goto	l5055
 10732  140B  0825               	movf	fputc@fp,w
 10733  140C  3E03               	addlw	3
 10734  140D  0086               	movwf	6
 10735  140E  0187               	clrf	7
 10736  140F  3F40               	moviw [0]fsr1
 10737  1410  00A6               	movwf	??_fputc
 10738  1411  3F41               	moviw [1]fsr1
 10739  1412  00A7               	movwf	??_fputc+1
 10740  1413  0A25               	incf	fputc@fp,w
 10741  1414  0086               	movwf	6
 10742  1415  0187               	clrf	7
 10743  1416  3F40               	moviw [0]fsr1
 10744  1417  00A8               	movwf	??_fputc+2
 10745  1418  3F41               	moviw [1]fsr1
 10746  1419  00A9               	movwf	??_fputc+3
 10747  141A  0829               	movf	??_fputc+3,w
 10748  141B  3A80               	xorlw	128
 10749  141C  00AA               	movwf	??_fputc+4
 10750  141D  0827               	movf	??_fputc+1,w
 10751  141E  3A80               	xorlw	128
 10752  141F  022A               	subwf	??_fputc+4,w
 10753  1420  1D03               	skipz
 10754  1421  2C24               	goto	u3945
 10755  1422  0826               	movf	??_fputc,w
 10756  1423  0228               	subwf	??_fputc+2,w
 10757  1424                     u3945:	
 10758  1424  1803               	skipnc
 10759  1425  0008               	return
 10760  1426                     l5055:	
 10761  1426  0020               	movlb	0	; select bank0
 10762  1427  0A25               	incf	fputc@fp,w
 10763  1428  0086               	movwf	6
 10764  1429  0187               	clrf	7
 10765  142A  3001               	movlw	1
 10766  142B  0781               	addwf	1,f
 10767  142C  3141               	addfsr 1,1
 10768  142D  1803               	skipnc
 10769  142E  0A81               	incf	1,f
 10770  142F  0008               	return
 10771  1430                     __end_of_fputc:	
 10772                           
 10773                           	psect	text35
 10774  103F                     __ptext35:	
 10775 ;; *************** function _putch *****************
 10776 ;; Defined at:
 10777 ;;		line 216 in file "mcc_generated_files/eusart.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  txData          1    wreg     unsigned char 
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  txData          1    2[BANK0 ] unsigned char 
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;Total ram usage:        1 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    5
 10798 ;; This function calls:
 10799 ;;		_EUSART_Write
 10800 ;; This function is called by:
 10801 ;;		_fputc
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           
 10806                           ;psect for function _putch
 10807  103F                     _putch:	
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10811                           ;putch@txData stored from wreg
 10812  103F  0020               	movlb	0	; select bank0
 10813  1040  00A2               	movwf	putch@txData
 10814                           
 10815                           ;mcc_generated_files/eusart.c: 216: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 217: {;mcc_generated_files/eusart.c: 218:     EUSART_Write(txData);
 10816  1041  0822               	movf	putch@txData,w
 10817  1042  3193  230D         	fcall	_EUSART_Write
 10818  1044  0008               	return
 10819  1045                     __end_of_putch:	
 10820                           
 10821                           	psect	text36
 10822  11A2                     __ptext36:	
 10823 ;; *************** function _abs *****************
 10824 ;; Defined at:
 10825 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  a               2   19[BANK0 ] int 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  2   19[BANK0 ] int 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;Total ram usage:        4 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    4
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_dtoa
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           
 10854                           ;psect for function _abs
 10855  11A2                     _abs:	
 10856                           
 10857                           ;incstack = 0
 10858                           ; Regs used in _abs: [wreg+status,2+status,0]
 10859  11A2  0020               	movlb	0	; select bank0
 10860  11A3  0834               	movf	abs@a+1,w
 10861  11A4  3A80               	xorlw	128
 10862  11A5  00B5               	movwf	??_abs
 10863  11A6  3080               	movlw	128
 10864  11A7  0235               	subwf	??_abs,w
 10865  11A8  1D03               	skipz
 10866  11A9  29AC               	goto	u2105
 10867  11AA  3001               	movlw	1
 10868  11AB  0233               	subwf	abs@a,w
 10869  11AC                     u2105:	
 10870  11AC  1803               	skipnc
 10871  11AD  0008               	return
 10872  11AE  0020               	movlb	0	; select bank0
 10873  11AF  0933               	comf	abs@a,w
 10874  11B0  00B5               	movwf	??_abs
 10875  11B1  0934               	comf	abs@a+1,w
 10876  11B2  00B6               	movwf	??_abs+1
 10877  11B3  0AB5               	incf	??_abs,f
 10878  11B4  1903               	skipnz
 10879  11B5  0AB6               	incf	??_abs+1,f
 10880  11B6  0835               	movf	??_abs,w
 10881  11B7  00B3               	movwf	?_abs
 10882  11B8  0836               	movf	??_abs+1,w
 10883  11B9  00B4               	movwf	?_abs+1
 10884  11BA  0008               	return
 10885  11BB                     __end_of_abs:	
 10886                           
 10887                           	psect	text37
 10888  0A18                     __ptext37:	
 10889 ;; *************** function ___aomod *****************
 10890 ;; Defined at:
 10891 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  divisor         8    0[BANK0 ] long long 
 10894 ;;  dividend        8    8[BANK0 ] long long 
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;  sign            1   18[BANK0 ] unsigned char 
 10897 ;;  counter         1   17[BANK0 ] unsigned char 
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  8    0[BANK0 ] long long 
 10900 ;; Registers used:
 10901 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10907 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;Total ram usage:       19 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:    4
 10914 ;; This function calls:
 10915 ;;		Nothing
 10916 ;; This function is called by:
 10917 ;;		_dtoa
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           
 10922                           ;psect for function ___aomod
 10923  0A18                     ___aomod:	
 10924                           
 10925                           ;incstack = 0
 10926                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 10927  0A18  0020               	movlb	0	; select bank0
 10928  0A19  01B2               	clrf	___aomod@sign
 10929  0A1A  3028               	movlw	low ___aomod@dividend
 10930  0A1B  0086               	movwf	6
 10931  0A1C  3000               	movlw	high ___aomod@dividend
 10932  0A1D  0087               	movwf	7
 10933  0A1E  3F47               	moviw [7]fsr1
 10934  0A1F  00B0               	movwf	??___aomod
 10935  0A20  1FB0               	btfss	??___aomod,7
 10936  0A21  2A44               	goto	l3563
 10937  0A22  0020               	movlb	0	; select bank0
 10938  0A23  09A8               	comf	___aomod@dividend,f
 10939  0A24  09A9               	comf	___aomod@dividend+1,f
 10940  0A25  09AA               	comf	___aomod@dividend+2,f
 10941  0A26  09AB               	comf	___aomod@dividend+3,f
 10942  0A27  09AC               	comf	___aomod@dividend+4,f
 10943  0A28  09AD               	comf	___aomod@dividend+5,f
 10944  0A29  09AE               	comf	___aomod@dividend+6,f
 10945  0A2A  09AF               	comf	___aomod@dividend+7,f
 10946  0A2B  0AA8               	incf	___aomod@dividend,f
 10947  0A2C  1D03               	skipz
 10948  0A2D  2A41               	goto	u223lld
 10949  0A2E  0AA9               	incf	___aomod@dividend+1,f
 10950  0A2F  1D03               	skipz
 10951  0A30  2A41               	goto	u223lld
 10952  0A31  0AAA               	incf	___aomod@dividend+2,f
 10953  0A32  1D03               	skipz
 10954  0A33  2A41               	goto	u223lld
 10955  0A34  0AAB               	incf	___aomod@dividend+3,f
 10956  0A35  1D03               	skipz
 10957  0A36  2A41               	goto	u223lld
 10958  0A37  0AAC               	incf	___aomod@dividend+4,f
 10959  0A38  1D03               	skipz
 10960  0A39  2A41               	goto	u223lld
 10961  0A3A  0AAD               	incf	___aomod@dividend+5,f
 10962  0A3B  1D03               	skipz
 10963  0A3C  2A41               	goto	u223lld
 10964  0A3D  0AAE               	incf	___aomod@dividend+6,f
 10965  0A3E  1D03               	skipz
 10966  0A3F  2A41               	goto	u223lld
 10967  0A40  0AAF               	incf	___aomod@dividend+7,f
 10968  0A41                     u223lld:	
 10969  0A41  0020               	movlb	0	; select bank0
 10970  0A42  01B2               	clrf	___aomod@sign
 10971  0A43  0AB2               	incf	___aomod@sign,f
 10972  0A44                     l3563:	
 10973  0A44  3020               	movlw	low ___aomod@divisor
 10974  0A45  0086               	movwf	6
 10975  0A46  3000               	movlw	high ___aomod@divisor
 10976  0A47  0087               	movwf	7
 10977  0A48  3F47               	moviw [7]fsr1
 10978  0A49  0020               	movlb	0	; select bank0
 10979  0A4A  00B0               	movwf	??___aomod
 10980  0A4B  1FB0               	btfss	??___aomod,7
 10981  0A4C  2A6C               	goto	l3567
 10982  0A4D  0020               	movlb	0	; select bank0
 10983  0A4E  09A0               	comf	___aomod@divisor,f
 10984  0A4F  09A1               	comf	___aomod@divisor+1,f
 10985  0A50  09A2               	comf	___aomod@divisor+2,f
 10986  0A51  09A3               	comf	___aomod@divisor+3,f
 10987  0A52  09A4               	comf	___aomod@divisor+4,f
 10988  0A53  09A5               	comf	___aomod@divisor+5,f
 10989  0A54  09A6               	comf	___aomod@divisor+6,f
 10990  0A55  09A7               	comf	___aomod@divisor+7,f
 10991  0A56  0AA0               	incf	___aomod@divisor,f
 10992  0A57  1D03               	skipz
 10993  0A58  2A6C               	goto	l3567
 10994  0A59  0AA1               	incf	___aomod@divisor+1,f
 10995  0A5A  1D03               	skipz
 10996  0A5B  2A6C               	goto	l3567
 10997  0A5C  0AA2               	incf	___aomod@divisor+2,f
 10998  0A5D  1D03               	skipz
 10999  0A5E  2A6C               	goto	l3567
 11000  0A5F  0AA3               	incf	___aomod@divisor+3,f
 11001  0A60  1D03               	skipz
 11002  0A61  2A6C               	goto	l3567
 11003  0A62  0AA4               	incf	___aomod@divisor+4,f
 11004  0A63  1D03               	skipz
 11005  0A64  2A6C               	goto	l3567
 11006  0A65  0AA5               	incf	___aomod@divisor+5,f
 11007  0A66  1D03               	skipz
 11008  0A67  2A6C               	goto	l3567
 11009  0A68  0AA6               	incf	___aomod@divisor+6,f
 11010  0A69  1D03               	skipz
 11011  0A6A  2A6C               	goto	l3567
 11012  0A6B  0AA7               	incf	___aomod@divisor+7,f
 11013  0A6C                     l3567:	
 11014  0A6C  0020               	movlb	0	; select bank0
 11015  0A6D  0820               	movf	___aomod@divisor,w
 11016  0A6E  0421               	iorwf	___aomod@divisor+1,w
 11017  0A6F  0422               	iorwf	___aomod@divisor+2,w
 11018  0A70  0423               	iorwf	___aomod@divisor+3,w
 11019  0A71  0424               	iorwf	___aomod@divisor+4,w
 11020  0A72  0425               	iorwf	___aomod@divisor+5,w
 11021  0A73  0426               	iorwf	___aomod@divisor+6,w
 11022  0A74  0427               	iorwf	___aomod@divisor+7,w
 11023  0A75  1903               	skipnz
 11024  0A76  2AC4               	goto	l3583
 11025  0A77  01B1               	clrf	___aomod@counter
 11026  0A78  0AB1               	incf	___aomod@counter,f
 11027  0A79                     l3575:	
 11028  0A79  1BA7               	btfsc	___aomod@divisor+7,7
 11029  0A7A  2A88               	goto	l3577
 11030  0A7B  35A0               	lslf	___aomod@divisor,f
 11031  0A7C  0DA1               	rlf	___aomod@divisor+1,f
 11032  0A7D  0DA2               	rlf	___aomod@divisor+2,f
 11033  0A7E  0DA3               	rlf	___aomod@divisor+3,f
 11034  0A7F  0DA4               	rlf	___aomod@divisor+4,f
 11035  0A80  0DA5               	rlf	___aomod@divisor+5,f
 11036  0A81  0DA6               	rlf	___aomod@divisor+6,f
 11037  0A82  0DA7               	rlf	___aomod@divisor+7,f
 11038  0A83  3001               	movlw	1
 11039  0A84  00B0               	movwf	??___aomod
 11040  0A85  0830               	movf	??___aomod,w
 11041  0A86  07B1               	addwf	___aomod@counter,f
 11042  0A87  2A79               	goto	l3575
 11043  0A88                     l3577:	
 11044  0A88  0827               	movf	___aomod@divisor+7,w
 11045  0A89  022F               	subwf	___aomod@dividend+7,w
 11046  0A8A  1D03               	skipz
 11047  0A8B  2AA6               	goto	u2285
 11048  0A8C  0826               	movf	___aomod@divisor+6,w
 11049  0A8D  022E               	subwf	___aomod@dividend+6,w
 11050  0A8E  1D03               	skipz
 11051  0A8F  2AA6               	goto	u2285
 11052  0A90  0825               	movf	___aomod@divisor+5,w
 11053  0A91  022D               	subwf	___aomod@dividend+5,w
 11054  0A92  1D03               	skipz
 11055  0A93  2AA6               	goto	u2285
 11056  0A94  0824               	movf	___aomod@divisor+4,w
 11057  0A95  022C               	subwf	___aomod@dividend+4,w
 11058  0A96  1D03               	skipz
 11059  0A97  2AA6               	goto	u2285
 11060  0A98  0823               	movf	___aomod@divisor+3,w
 11061  0A99  022B               	subwf	___aomod@dividend+3,w
 11062  0A9A  1D03               	skipz
 11063  0A9B  2AA6               	goto	u2285
 11064  0A9C  0822               	movf	___aomod@divisor+2,w
 11065  0A9D  022A               	subwf	___aomod@dividend+2,w
 11066  0A9E  1D03               	skipz
 11067  0A9F  2AA6               	goto	u2285
 11068  0AA0  0821               	movf	___aomod@divisor+1,w
 11069  0AA1  0229               	subwf	___aomod@dividend+1,w
 11070  0AA2  1D03               	skipz
 11071  0AA3  2AA6               	goto	u2285
 11072  0AA4  0820               	movf	___aomod@divisor,w
 11073  0AA5  0228               	subwf	___aomod@dividend,w
 11074  0AA6                     u2285:	
 11075  0AA6  1C03               	skipc
 11076  0AA7  2AB8               	goto	l3581
 11077  0AA8  0820               	movf	___aomod@divisor,w
 11078  0AA9  02A8               	subwf	___aomod@dividend,f
 11079  0AAA  0821               	movf	___aomod@divisor+1,w
 11080  0AAB  3BA9               	subwfb	___aomod@dividend+1,f
 11081  0AAC  0822               	movf	___aomod@divisor+2,w
 11082  0AAD  3BAA               	subwfb	___aomod@dividend+2,f
 11083  0AAE  0823               	movf	___aomod@divisor+3,w
 11084  0AAF  3BAB               	subwfb	___aomod@dividend+3,f
 11085  0AB0  0824               	movf	___aomod@divisor+4,w
 11086  0AB1  3BAC               	subwfb	___aomod@dividend+4,f
 11087  0AB2  0825               	movf	___aomod@divisor+5,w
 11088  0AB3  3BAD               	subwfb	___aomod@dividend+5,f
 11089  0AB4  0826               	movf	___aomod@divisor+6,w
 11090  0AB5  3BAE               	subwfb	___aomod@dividend+6,f
 11091  0AB6  0827               	movf	___aomod@divisor+7,w
 11092  0AB7  3BAF               	subwfb	___aomod@dividend+7,f
 11093  0AB8                     l3581:	
 11094  0AB8  36A7               	lsrf	___aomod@divisor+7,f
 11095  0AB9  0CA6               	rrf	___aomod@divisor+6,f
 11096  0ABA  0CA5               	rrf	___aomod@divisor+5,f
 11097  0ABB  0CA4               	rrf	___aomod@divisor+4,f
 11098  0ABC  0CA3               	rrf	___aomod@divisor+3,f
 11099  0ABD  0CA2               	rrf	___aomod@divisor+2,f
 11100  0ABE  0CA1               	rrf	___aomod@divisor+1,f
 11101  0ABF  0CA0               	rrf	___aomod@divisor,f
 11102  0AC0  3001               	movlw	1
 11103  0AC1  02B1               	subwf	___aomod@counter,f
 11104  0AC2  1D03               	btfss	3,2
 11105  0AC3  2A88               	goto	l3577
 11106  0AC4                     l3583:	
 11107  0AC4  0832               	movf	___aomod@sign,w
 11108  0AC5  1903               	btfsc	3,2
 11109  0AC6  2AE5               	goto	l1284
 11110  0AC7  09A8               	comf	___aomod@dividend,f
 11111  0AC8  09A9               	comf	___aomod@dividend+1,f
 11112  0AC9  09AA               	comf	___aomod@dividend+2,f
 11113  0ACA  09AB               	comf	___aomod@dividend+3,f
 11114  0ACB  09AC               	comf	___aomod@dividend+4,f
 11115  0ACC  09AD               	comf	___aomod@dividend+5,f
 11116  0ACD  09AE               	comf	___aomod@dividend+6,f
 11117  0ACE  09AF               	comf	___aomod@dividend+7,f
 11118  0ACF  0AA8               	incf	___aomod@dividend,f
 11119  0AD0  1D03               	skipz
 11120  0AD1  2AE5               	goto	l1284
 11121  0AD2  0AA9               	incf	___aomod@dividend+1,f
 11122  0AD3  1D03               	skipz
 11123  0AD4  2AE5               	goto	l1284
 11124  0AD5  0AAA               	incf	___aomod@dividend+2,f
 11125  0AD6  1D03               	skipz
 11126  0AD7  2AE5               	goto	l1284
 11127  0AD8  0AAB               	incf	___aomod@dividend+3,f
 11128  0AD9  1D03               	skipz
 11129  0ADA  2AE5               	goto	l1284
 11130  0ADB  0AAC               	incf	___aomod@dividend+4,f
 11131  0ADC  1D03               	skipz
 11132  0ADD  2AE5               	goto	l1284
 11133  0ADE  0AAD               	incf	___aomod@dividend+5,f
 11134  0ADF  1D03               	skipz
 11135  0AE0  2AE5               	goto	l1284
 11136  0AE1  0AAE               	incf	___aomod@dividend+6,f
 11137  0AE2  1D03               	skipz
 11138  0AE3  2AE5               	goto	l1284
 11139  0AE4  0AAF               	incf	___aomod@dividend+7,f
 11140  0AE5                     l1284:	
 11141  0AE5  0020               	movlb	0	; select bank0
 11142  0AE6  0828               	movf	___aomod@dividend,w
 11143  0AE7  00A0               	movwf	?___aomod
 11144  0AE8  0829               	movf	___aomod@dividend+1,w
 11145  0AE9  00A1               	movwf	?___aomod+1
 11146  0AEA  082A               	movf	___aomod@dividend+2,w
 11147  0AEB  00A2               	movwf	?___aomod+2
 11148  0AEC  082B               	movf	___aomod@dividend+3,w
 11149  0AED  00A3               	movwf	?___aomod+3
 11150  0AEE  082C               	movf	___aomod@dividend+4,w
 11151  0AEF  00A4               	movwf	?___aomod+4
 11152  0AF0  082D               	movf	___aomod@dividend+5,w
 11153  0AF1  00A5               	movwf	?___aomod+5
 11154  0AF2  082E               	movf	___aomod@dividend+6,w
 11155  0AF3  00A6               	movwf	?___aomod+6
 11156  0AF4  082F               	movf	___aomod@dividend+7,w
 11157  0AF5  00A7               	movwf	?___aomod+7
 11158  0AF6  0008               	return
 11159  0AF7                     __end_of___aomod:	
 11160                           
 11161                           	psect	text38
 11162  0AF7                     __ptext38:	
 11163 ;; *************** function ___aodiv *****************
 11164 ;; Defined at:
 11165 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  divisor         8    0[BANK0 ] long long 
 11168 ;;  dividend        8    8[BANK0 ] long long 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  quotient        8   19[BANK0 ] long long 
 11171 ;;  sign            1   18[BANK0 ] unsigned char 
 11172 ;;  counter         1   17[BANK0 ] unsigned char 
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  8    0[BANK0 ] long long 
 11175 ;; Registers used:
 11176 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11182 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11185 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11186 ;;Total ram usage:       27 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    4
 11189 ;; This function calls:
 11190 ;;		Nothing
 11191 ;; This function is called by:
 11192 ;;		_dtoa
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           
 11197                           ;psect for function ___aodiv
 11198  0AF7                     ___aodiv:	
 11199                           
 11200                           ;incstack = 0
 11201                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 11202  0AF7  0020               	movlb	0	; select bank0
 11203  0AF8  01B2               	clrf	___aodiv@sign
 11204  0AF9  3020               	movlw	low ___aodiv@divisor
 11205  0AFA  0086               	movwf	6
 11206  0AFB  3000               	movlw	high ___aodiv@divisor
 11207  0AFC  0087               	movwf	7
 11208  0AFD  3F47               	moviw [7]fsr1
 11209  0AFE  00B0               	movwf	??___aodiv
 11210  0AFF  1FB0               	btfss	??___aodiv,7
 11211  0B00  2B23               	goto	l3525
 11212  0B01  0020               	movlb	0	; select bank0
 11213  0B02  09A0               	comf	___aodiv@divisor,f
 11214  0B03  09A1               	comf	___aodiv@divisor+1,f
 11215  0B04  09A2               	comf	___aodiv@divisor+2,f
 11216  0B05  09A3               	comf	___aodiv@divisor+3,f
 11217  0B06  09A4               	comf	___aodiv@divisor+4,f
 11218  0B07  09A5               	comf	___aodiv@divisor+5,f
 11219  0B08  09A6               	comf	___aodiv@divisor+6,f
 11220  0B09  09A7               	comf	___aodiv@divisor+7,f
 11221  0B0A  0AA0               	incf	___aodiv@divisor,f
 11222  0B0B  1D03               	skipz
 11223  0B0C  2B20               	goto	u212lld
 11224  0B0D  0AA1               	incf	___aodiv@divisor+1,f
 11225  0B0E  1D03               	skipz
 11226  0B0F  2B20               	goto	u212lld
 11227  0B10  0AA2               	incf	___aodiv@divisor+2,f
 11228  0B11  1D03               	skipz
 11229  0B12  2B20               	goto	u212lld
 11230  0B13  0AA3               	incf	___aodiv@divisor+3,f
 11231  0B14  1D03               	skipz
 11232  0B15  2B20               	goto	u212lld
 11233  0B16  0AA4               	incf	___aodiv@divisor+4,f
 11234  0B17  1D03               	skipz
 11235  0B18  2B20               	goto	u212lld
 11236  0B19  0AA5               	incf	___aodiv@divisor+5,f
 11237  0B1A  1D03               	skipz
 11238  0B1B  2B20               	goto	u212lld
 11239  0B1C  0AA6               	incf	___aodiv@divisor+6,f
 11240  0B1D  1D03               	skipz
 11241  0B1E  2B20               	goto	u212lld
 11242  0B1F  0AA7               	incf	___aodiv@divisor+7,f
 11243  0B20                     u212lld:	
 11244  0B20  0020               	movlb	0	; select bank0
 11245  0B21  01B2               	clrf	___aodiv@sign
 11246  0B22  0AB2               	incf	___aodiv@sign,f
 11247  0B23                     l3525:	
 11248  0B23  3028               	movlw	low ___aodiv@dividend
 11249  0B24  0086               	movwf	6
 11250  0B25  3000               	movlw	high ___aodiv@dividend
 11251  0B26  0087               	movwf	7
 11252  0B27  3F47               	moviw [7]fsr1
 11253  0B28  0020               	movlb	0	; select bank0
 11254  0B29  00B0               	movwf	??___aodiv
 11255  0B2A  1FB0               	btfss	??___aodiv,7
 11256  0B2B  2B50               	goto	l3531
 11257  0B2C  0020               	movlb	0	; select bank0
 11258  0B2D  09A8               	comf	___aodiv@dividend,f
 11259  0B2E  09A9               	comf	___aodiv@dividend+1,f
 11260  0B2F  09AA               	comf	___aodiv@dividend+2,f
 11261  0B30  09AB               	comf	___aodiv@dividend+3,f
 11262  0B31  09AC               	comf	___aodiv@dividend+4,f
 11263  0B32  09AD               	comf	___aodiv@dividend+5,f
 11264  0B33  09AE               	comf	___aodiv@dividend+6,f
 11265  0B34  09AF               	comf	___aodiv@dividend+7,f
 11266  0B35  0AA8               	incf	___aodiv@dividend,f
 11267  0B36  1D03               	skipz
 11268  0B37  2B4B               	goto	l3529
 11269  0B38  0AA9               	incf	___aodiv@dividend+1,f
 11270  0B39  1D03               	skipz
 11271  0B3A  2B4B               	goto	l3529
 11272  0B3B  0AAA               	incf	___aodiv@dividend+2,f
 11273  0B3C  1D03               	skipz
 11274  0B3D  2B4B               	goto	l3529
 11275  0B3E  0AAB               	incf	___aodiv@dividend+3,f
 11276  0B3F  1D03               	skipz
 11277  0B40  2B4B               	goto	l3529
 11278  0B41  0AAC               	incf	___aodiv@dividend+4,f
 11279  0B42  1D03               	skipz
 11280  0B43  2B4B               	goto	l3529
 11281  0B44  0AAD               	incf	___aodiv@dividend+5,f
 11282  0B45  1D03               	skipz
 11283  0B46  2B4B               	goto	l3529
 11284  0B47  0AAE               	incf	___aodiv@dividend+6,f
 11285  0B48  1D03               	skipz
 11286  0B49  2B4B               	goto	l3529
 11287  0B4A  0AAF               	incf	___aodiv@dividend+7,f
 11288  0B4B                     l3529:	
 11289  0B4B  3001               	movlw	1
 11290  0B4C  0020               	movlb	0	; select bank0
 11291  0B4D  00B0               	movwf	??___aodiv
 11292  0B4E  0830               	movf	??___aodiv,w
 11293  0B4F  06B2               	xorwf	___aodiv@sign,f
 11294  0B50                     l3531:	
 11295  0B50  3033               	movlw	low ___aodiv@quotient
 11296  0B51  0086               	movwf	6
 11297  0B52  3000               	movlw	high ___aodiv@quotient
 11298  0B53  0087               	movwf	7
 11299  0B54  3008               	movlw	8
 11300  0B55  0020               	movlb	0	; select bank0
 11301  0B56  00B0               	movwf	??___aodiv
 11302  0B57  3000               	movlw	0
 11303  0B58                     u2150:	
 11304  0B58  001E               	movwi fsr1++
 11305  0B59  0BB0               	decfsz	??___aodiv,f
 11306  0B5A  2B58               	goto	u2150
 11307  0B5B  0820               	movf	___aodiv@divisor,w
 11308  0B5C  0421               	iorwf	___aodiv@divisor+1,w
 11309  0B5D  0422               	iorwf	___aodiv@divisor+2,w
 11310  0B5E  0423               	iorwf	___aodiv@divisor+3,w
 11311  0B5F  0424               	iorwf	___aodiv@divisor+4,w
 11312  0B60  0425               	iorwf	___aodiv@divisor+5,w
 11313  0B61  0426               	iorwf	___aodiv@divisor+6,w
 11314  0B62  0427               	iorwf	___aodiv@divisor+7,w
 11315  0B63  1903               	skipnz
 11316  0B64  2BBB               	goto	l3553
 11317  0B65  01B1               	clrf	___aodiv@counter
 11318  0B66  0AB1               	incf	___aodiv@counter,f
 11319  0B67                     l3541:	
 11320  0B67  1BA7               	btfsc	___aodiv@divisor+7,7
 11321  0B68  2B76               	goto	l3543
 11322  0B69  35A0               	lslf	___aodiv@divisor,f
 11323  0B6A  0DA1               	rlf	___aodiv@divisor+1,f
 11324  0B6B  0DA2               	rlf	___aodiv@divisor+2,f
 11325  0B6C  0DA3               	rlf	___aodiv@divisor+3,f
 11326  0B6D  0DA4               	rlf	___aodiv@divisor+4,f
 11327  0B6E  0DA5               	rlf	___aodiv@divisor+5,f
 11328  0B6F  0DA6               	rlf	___aodiv@divisor+6,f
 11329  0B70  0DA7               	rlf	___aodiv@divisor+7,f
 11330  0B71  3001               	movlw	1
 11331  0B72  00B0               	movwf	??___aodiv
 11332  0B73  0830               	movf	??___aodiv,w
 11333  0B74  07B1               	addwf	___aodiv@counter,f
 11334  0B75  2B67               	goto	l3541
 11335  0B76                     l3543:	
 11336  0B76  35B3               	lslf	___aodiv@quotient,f
 11337  0B77  0DB4               	rlf	___aodiv@quotient+1,f
 11338  0B78  0DB5               	rlf	___aodiv@quotient+2,f
 11339  0B79  0DB6               	rlf	___aodiv@quotient+3,f
 11340  0B7A  0DB7               	rlf	___aodiv@quotient+4,f
 11341  0B7B  0DB8               	rlf	___aodiv@quotient+5,f
 11342  0B7C  0DB9               	rlf	___aodiv@quotient+6,f
 11343  0B7D  0DBA               	rlf	___aodiv@quotient+7,f
 11344  0B7E  0827               	movf	___aodiv@divisor+7,w
 11345  0B7F  022F               	subwf	___aodiv@dividend+7,w
 11346  0B80  1D03               	skipz
 11347  0B81  2B9C               	goto	u2185
 11348  0B82  0826               	movf	___aodiv@divisor+6,w
 11349  0B83  022E               	subwf	___aodiv@dividend+6,w
 11350  0B84  1D03               	skipz
 11351  0B85  2B9C               	goto	u2185
 11352  0B86  0825               	movf	___aodiv@divisor+5,w
 11353  0B87  022D               	subwf	___aodiv@dividend+5,w
 11354  0B88  1D03               	skipz
 11355  0B89  2B9C               	goto	u2185
 11356  0B8A  0824               	movf	___aodiv@divisor+4,w
 11357  0B8B  022C               	subwf	___aodiv@dividend+4,w
 11358  0B8C  1D03               	skipz
 11359  0B8D  2B9C               	goto	u2185
 11360  0B8E  0823               	movf	___aodiv@divisor+3,w
 11361  0B8F  022B               	subwf	___aodiv@dividend+3,w
 11362  0B90  1D03               	skipz
 11363  0B91  2B9C               	goto	u2185
 11364  0B92  0822               	movf	___aodiv@divisor+2,w
 11365  0B93  022A               	subwf	___aodiv@dividend+2,w
 11366  0B94  1D03               	skipz
 11367  0B95  2B9C               	goto	u2185
 11368  0B96  0821               	movf	___aodiv@divisor+1,w
 11369  0B97  0229               	subwf	___aodiv@dividend+1,w
 11370  0B98  1D03               	skipz
 11371  0B99  2B9C               	goto	u2185
 11372  0B9A  0820               	movf	___aodiv@divisor,w
 11373  0B9B  0228               	subwf	___aodiv@dividend,w
 11374  0B9C                     u2185:	
 11375  0B9C  1C03               	skipc
 11376  0B9D  2BAF               	goto	l3551
 11377  0B9E  0820               	movf	___aodiv@divisor,w
 11378  0B9F  02A8               	subwf	___aodiv@dividend,f
 11379  0BA0  0821               	movf	___aodiv@divisor+1,w
 11380  0BA1  3BA9               	subwfb	___aodiv@dividend+1,f
 11381  0BA2  0822               	movf	___aodiv@divisor+2,w
 11382  0BA3  3BAA               	subwfb	___aodiv@dividend+2,f
 11383  0BA4  0823               	movf	___aodiv@divisor+3,w
 11384  0BA5  3BAB               	subwfb	___aodiv@dividend+3,f
 11385  0BA6  0824               	movf	___aodiv@divisor+4,w
 11386  0BA7  3BAC               	subwfb	___aodiv@dividend+4,f
 11387  0BA8  0825               	movf	___aodiv@divisor+5,w
 11388  0BA9  3BAD               	subwfb	___aodiv@dividend+5,f
 11389  0BAA  0826               	movf	___aodiv@divisor+6,w
 11390  0BAB  3BAE               	subwfb	___aodiv@dividend+6,f
 11391  0BAC  0827               	movf	___aodiv@divisor+7,w
 11392  0BAD  3BAF               	subwfb	___aodiv@dividend+7,f
 11393  0BAE  1433               	bsf	___aodiv@quotient,0
 11394  0BAF                     l3551:	
 11395  0BAF  36A7               	lsrf	___aodiv@divisor+7,f
 11396  0BB0  0CA6               	rrf	___aodiv@divisor+6,f
 11397  0BB1  0CA5               	rrf	___aodiv@divisor+5,f
 11398  0BB2  0CA4               	rrf	___aodiv@divisor+4,f
 11399  0BB3  0CA3               	rrf	___aodiv@divisor+3,f
 11400  0BB4  0CA2               	rrf	___aodiv@divisor+2,f
 11401  0BB5  0CA1               	rrf	___aodiv@divisor+1,f
 11402  0BB6  0CA0               	rrf	___aodiv@divisor,f
 11403  0BB7  3001               	movlw	1
 11404  0BB8  02B1               	subwf	___aodiv@counter,f
 11405  0BB9  1D03               	btfss	3,2
 11406  0BBA  2B76               	goto	l3543
 11407  0BBB                     l3553:	
 11408  0BBB  0832               	movf	___aodiv@sign,w
 11409  0BBC  1903               	btfsc	3,2
 11410  0BBD  2BDC               	goto	l1271
 11411  0BBE  09B3               	comf	___aodiv@quotient,f
 11412  0BBF  09B4               	comf	___aodiv@quotient+1,f
 11413  0BC0  09B5               	comf	___aodiv@quotient+2,f
 11414  0BC1  09B6               	comf	___aodiv@quotient+3,f
 11415  0BC2  09B7               	comf	___aodiv@quotient+4,f
 11416  0BC3  09B8               	comf	___aodiv@quotient+5,f
 11417  0BC4  09B9               	comf	___aodiv@quotient+6,f
 11418  0BC5  09BA               	comf	___aodiv@quotient+7,f
 11419  0BC6  0AB3               	incf	___aodiv@quotient,f
 11420  0BC7  1D03               	skipz
 11421  0BC8  2BDC               	goto	l1271
 11422  0BC9  0AB4               	incf	___aodiv@quotient+1,f
 11423  0BCA  1D03               	skipz
 11424  0BCB  2BDC               	goto	l1271
 11425  0BCC  0AB5               	incf	___aodiv@quotient+2,f
 11426  0BCD  1D03               	skipz
 11427  0BCE  2BDC               	goto	l1271
 11428  0BCF  0AB6               	incf	___aodiv@quotient+3,f
 11429  0BD0  1D03               	skipz
 11430  0BD1  2BDC               	goto	l1271
 11431  0BD2  0AB7               	incf	___aodiv@quotient+4,f
 11432  0BD3  1D03               	skipz
 11433  0BD4  2BDC               	goto	l1271
 11434  0BD5  0AB8               	incf	___aodiv@quotient+5,f
 11435  0BD6  1D03               	skipz
 11436  0BD7  2BDC               	goto	l1271
 11437  0BD8  0AB9               	incf	___aodiv@quotient+6,f
 11438  0BD9  1D03               	skipz
 11439  0BDA  2BDC               	goto	l1271
 11440  0BDB  0ABA               	incf	___aodiv@quotient+7,f
 11441  0BDC                     l1271:	
 11442  0BDC  0020               	movlb	0	; select bank0
 11443  0BDD  0833               	movf	___aodiv@quotient,w
 11444  0BDE  00A0               	movwf	?___aodiv
 11445  0BDF  0834               	movf	___aodiv@quotient+1,w
 11446  0BE0  00A1               	movwf	?___aodiv+1
 11447  0BE1  0835               	movf	___aodiv@quotient+2,w
 11448  0BE2  00A2               	movwf	?___aodiv+2
 11449  0BE3  0836               	movf	___aodiv@quotient+3,w
 11450  0BE4  00A3               	movwf	?___aodiv+3
 11451  0BE5  0837               	movf	___aodiv@quotient+4,w
 11452  0BE6  00A4               	movwf	?___aodiv+4
 11453  0BE7  0838               	movf	___aodiv@quotient+5,w
 11454  0BE8  00A5               	movwf	?___aodiv+5
 11455  0BE9  0839               	movf	___aodiv@quotient+6,w
 11456  0BEA  00A6               	movwf	?___aodiv+6
 11457  0BEB  083A               	movf	___aodiv@quotient+7,w
 11458  0BEC  00A7               	movwf	?___aodiv+7
 11459  0BED  0008               	return
 11460  0BEE                     __end_of___aodiv:	
 11461                           
 11462                           	psect	text39
 11463  10EC                     __ptext39:	
 11464 ;; *************** function _DATAEE_ReadByte *****************
 11465 ;; Defined at:
 11466 ;;		line 202 in file "mcc_generated_files/memory.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  bAdd            2    0[BANK0 ] unsigned short 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      unsigned char 
 11473 ;; Registers used:
 11474 ;;		wreg, status,2
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;Total ram usage:        2 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    4
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_init
 11491 ;;		_UartResponse_ReadCmd
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495                           
 11496                           ;psect for function _DATAEE_ReadByte
 11497  10EC                     _DATAEE_ReadByte:	
 11498                           
 11499                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 11500                           
 11501                           ;incstack = 0
 11502                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 11503  10EC  0020               	movlb	0	; select bank0
 11504  10ED  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 11505  10EE  0031               	movlb	17	; select bank17
 11506  10EF  0092               	movwf	18	;volatile
 11507                           
 11508                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 11509  10F0  0020               	movlb	0	; select bank0
 11510  10F1  0820               	movf	DATAEE_ReadByte@bAdd,w
 11511  10F2  0031               	movlb	17	; select bank17
 11512  10F3  0091               	movwf	17	;volatile
 11513                           
 11514                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 11515  10F4  1715               	bsf	21,6	;volsfr
 11516                           
 11517                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 11518  10F5  1415               	bsf	21,0	;volsfr
 11519                           
 11520                           ;mcc_generated_files/memory.c: 208:     __nop();
 11521  10F6  0000               	nop
 11522                           
 11523                           ;mcc_generated_files/memory.c: 209:     __nop();
 11524  10F7  0000               	nop
 11525                           
 11526                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 11527  10F8  0031               	movlb	17	; select bank17
 11528  10F9  0813               	movf	19,w	;volatile
 11529  10FA  0008               	return
 11530  10FB                     __end_of_DATAEE_ReadByte:	
 11531                           
 11532                           	psect	text40
 11533  1246                     __ptext40:	
 11534 ;; *************** function _ADC_GetConversion *****************
 11535 ;; Defined at:
 11536 ;;		line 113 in file "mcc_generated_files/adc.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;  channel         1    wreg     enum E6648
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;  channel         1    3[BANK0 ] enum E6648
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  2    0[BANK0 ] unsigned short 
 11543 ;; Registers used:
 11544 ;;		wreg, status,2, status,0
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;Total ram usage:        4 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    4
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_UartResponse_ReadCmd
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           
 11565                           ;psect for function _ADC_GetConversion
 11566  1246                     _ADC_GetConversion:	
 11567                           
 11568                           ;incstack = 0
 11569                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 11570                           ;ADC_GetConversion@channel stored from wreg
 11571  1246  0020               	movlb	0	; select bank0
 11572  1247  00A3               	movwf	ADC_GetConversion@channel
 11573                           
 11574                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 11575  1248  0823               	movf	ADC_GetConversion@channel,w
 11576  1249  00A2               	movwf	??_ADC_GetConversion
 11577  124A  0DA2               	rlf	??_ADC_GetConversion,f
 11578  124B  0DA2               	rlf	??_ADC_GetConversion,f
 11579  124C  0021               	movlb	1	; select bank1
 11580  124D  081D               	movf	29,w	;volatile
 11581  124E  0020               	movlb	0	; select bank0
 11582  124F  0622               	xorwf	??_ADC_GetConversion,w
 11583  1250  3903               	andlw	-253
 11584  1251  0622               	xorwf	??_ADC_GetConversion,w
 11585  1252  0021               	movlb	1	; select bank1
 11586  1253  009D               	movwf	29	;volatile
 11587                           
 11588                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 11589  1254  141D               	bsf	29,0	;volatile
 11590                           
 11591                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 11592  1255  300D               	movlw	13
 11593  1256                     u5057:	
 11594  1256  0B89               	decfsz	9,f
 11595  1257  2A56               	goto	u5057
 11596  1258  0000               	nop
 11597                           
 11598                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
 11599  1259  0021               	movlb	1	; select bank1
 11600  125A  149D               	bsf	29,1	;volatile
 11601  125B                     l154:	
 11602                           ;mcc_generated_files/adc.c: 129:     {;mcc_generated_files/adc.c: 130:     }
 11603                           
 11604                           
 11605                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
 11606  125B  189D               	btfsc	29,1	;volatile
 11607  125C  2A5B               	goto	l154
 11608                           
 11609                           ;mcc_generated_files/adc.c: 133:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11610  125D  081C               	movf	28,w	;volatile
 11611  125E  0020               	movlb	0	; select bank0
 11612  125F  00A1               	movwf	?_ADC_GetConversion+1
 11613  1260  0021               	movlb	1	; select bank1
 11614  1261  081B               	movf	27,w	;volatile
 11615  1262  0020               	movlb	0	; select bank0
 11616  1263  00A0               	movwf	?_ADC_GetConversion
 11617  1264  0008               	return
 11618  1265                     __end_of_ADC_GetConversion:	
 11619                           
 11620                           	psect	text41
 11621  10C8                     __ptext41:	
 11622 ;; *************** function _UartResponse_Err *****************
 11623 ;; Defined at:
 11624 ;;		line 506 in file "main.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;		None
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;  sendBuff        1    8[BANK0 ] unsigned char 
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1    wreg      void 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;Total ram usage:        2 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    6
 11645 ;; This function calls:
 11646 ;;		_UART_Write_Buffer
 11647 ;; This function is called by:
 11648 ;;		_Handler_Uart
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           
 11653                           ;psect for function _UartResponse_Err
 11654  10C8                     _UartResponse_Err:	
 11655                           
 11656                           ;main.c: 508:     uint8_t sendBuff = 0xFF;
 11657                           
 11658                           ;incstack = 0
 11659                           ; Regs used in _UartResponse_Err: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11660  10C8  30FF               	movlw	255
 11661  10C9  0020               	movlb	0	; select bank0
 11662  10CA  00A7               	movwf	??_UartResponse_Err
 11663  10CB  0827               	movf	??_UartResponse_Err,w
 11664  10CC  00A8               	movwf	UartResponse_Err@sendBuff
 11665                           
 11666                           ;main.c: 510:     UART_Write_Buffer(&sendBuff, 1);
 11667  10CD  01A2               	clrf	UART_Write_Buffer@size
 11668  10CE  0AA2               	incf	UART_Write_Buffer@size,f
 11669  10CF  3028               	movlw	(low (UartResponse_Err@sendBuff| 0))& (0+255)
 11670  10D0  3192  2285         	fcall	_UART_Write_Buffer
 11671  10D2  0008               	return
 11672  10D3                     __end_of_UartResponse_Err:	
 11673                           
 11674                           	psect	text42
 11675  1285                     __ptext42:	
 11676 ;; *************** function _UART_Write_Buffer *****************
 11677 ;; Defined at:
 11678 ;;		line 199 in file "main.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  sendBuff        1    wreg     PTR unsigned char 
 11681 ;;		 -> UartResponse_Err@sendBuff(1), UartResponse_WriteCmd@sendBuff(4), UartResponse_ReadCmd@sendBuff(16), 
 11682 ;;  size            1    2[BANK0 ] unsigned char 
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  sendBuff        1    4[BANK0 ] PTR unsigned char 
 11685 ;;		 -> UartResponse_Err@sendBuff(1), UartResponse_WriteCmd@sendBuff(4), UartResponse_ReadCmd@sendBuff(16), 
 11686 ;;  i               2    5[BANK0 ] int 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  1    wreg      void 
 11689 ;; Registers used:
 11690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11696 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;Total ram usage:        5 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    5
 11703 ;; This function calls:
 11704 ;;		_EUSART_Write
 11705 ;; This function is called by:
 11706 ;;		_UartResponse_ReadCmd
 11707 ;;		_UartResponse_WriteCmd
 11708 ;;		_UartResponse_Err
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           
 11713                           ;psect for function _UART_Write_Buffer
 11714  1285                     _UART_Write_Buffer:	
 11715                           
 11716                           ;incstack = 0
 11717                           ; Regs used in _UART_Write_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11718                           ;UART_Write_Buffer@sendBuff stored from wreg
 11719  1285  0020               	movlb	0	; select bank0
 11720  1286  00A4               	movwf	UART_Write_Buffer@sendBuff
 11721                           
 11722                           ;main.c: 199:  void UART_Write_Buffer(uint8_t *sendBuff, uint8_t size);main.c: 200:  {;m
      +                          ain.c: 201:      int i;;main.c: 202:      for(i=0;i<size;i++)
 11723  1287  01A5               	clrf	UART_Write_Buffer@i
 11724  1288  01A6               	clrf	UART_Write_Buffer@i+1
 11725  1289                     l5465:	
 11726  1289  0826               	movf	UART_Write_Buffer@i+1,w
 11727  128A  3A80               	xorlw	128
 11728  128B  00A3               	movwf	??_UART_Write_Buffer
 11729  128C  3080               	movlw	128
 11730  128D  0223               	subwf	??_UART_Write_Buffer,w
 11731  128E  1D03               	skipz
 11732  128F  2A92               	goto	u4355
 11733  1290  0822               	movf	UART_Write_Buffer@size,w
 11734  1291  0225               	subwf	UART_Write_Buffer@i,w
 11735  1292                     u4355:	
 11736  1292  1803               	btfsc	3,0
 11737  1293  0008               	return
 11738                           
 11739                           ;main.c: 203:          EUSART_Write(sendBuff[i]);
 11740  1294  0020               	movlb	0	; select bank0
 11741  1295  0825               	movf	UART_Write_Buffer@i,w
 11742  1296  0724               	addwf	UART_Write_Buffer@sendBuff,w
 11743  1297  00A3               	movwf	??_UART_Write_Buffer
 11744  1298  0823               	movf	??_UART_Write_Buffer,w
 11745  1299  0086               	movwf	6
 11746  129A  0187               	clrf	7
 11747  129B  0801               	movf	1,w
 11748  129C  3193  230D  3192   	fcall	_EUSART_Write
 11749  129F  3001               	movlw	1
 11750  12A0  0020               	movlb	0	; select bank0
 11751  12A1  07A5               	addwf	UART_Write_Buffer@i,f
 11752  12A2  3000               	movlw	0
 11753  12A3  3DA6               	addwfc	UART_Write_Buffer@i+1,f
 11754  12A4  2A89               	goto	l5465
 11755  12A5                     __end_of_UART_Write_Buffer:	
 11756                           
 11757                           	psect	text43
 11758  130D                     __ptext43:	
 11759 ;; *************** function _EUSART_Write *****************
 11760 ;; Defined at:
 11761 ;;		line 188 in file "mcc_generated_files/eusart.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  txData          1    wreg     unsigned char 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  txData          1    1[BANK0 ] unsigned char 
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  1    wreg      void 
 11768 ;; Registers used:
 11769 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;Total ram usage:        2 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; Hardware stack levels required when called:    4
 11782 ;; This function calls:
 11783 ;;		Nothing
 11784 ;; This function is called by:
 11785 ;;		_putch
 11786 ;;		_UART_Write_Buffer
 11787 ;; This function uses a non-reentrant model
 11788 ;;
 11789                           
 11790                           
 11791                           ;psect for function _EUSART_Write
 11792  130D                     _EUSART_Write:	
 11793                           
 11794                           ;incstack = 0
 11795                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11796                           ;EUSART_Write@txData stored from wreg
 11797  130D  0020               	movlb	0	; select bank0
 11798  130E  00A1               	movwf	EUSART_Write@txData
 11799  130F                     l5027:	
 11800                           ;mcc_generated_files/eusart.c: 188: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 189: {;mcc_generated_files/eusart.c: 190:     while(0 == eusartTxBufferRemai
      +                          ning)
 11801                           
 11802                           
 11803                           ;mcc_generated_files/eusart.c: 190:     while(0 == eusartTxBufferRemaining)
 11804  130F  0023               	movlb	3	; select bank3
 11805  1310  086B               	movf	_eusartTxBufferRemaining^(0+384),w	;volatile
 11806  1311  1903               	btfsc	3,2
 11807  1312  2B0F               	goto	l5027
 11808                           
 11809                           ;mcc_generated_files/eusart.c: 194:     if(0 == PIE1bits.TXIE)
 11810  1313  0021               	movlb	1	; select bank1
 11811  1314  1A11               	btfsc	17,4	;volatile
 11812  1315  2B1B               	goto	l295
 11813                           
 11814                           ;mcc_generated_files/eusart.c: 195:     {;mcc_generated_files/eusart.c: 196:         TX1
      +                          REG = txData;
 11815  1316  0020               	movlb	0	; select bank0
 11816  1317  0821               	movf	EUSART_Write@txData,w
 11817  1318  0023               	movlb	3	; select bank3
 11818  1319  009A               	movwf	26	;volatile
 11819                           
 11820                           ;mcc_generated_files/eusart.c: 197:     }
 11821  131A  2B31               	goto	l5041
 11822  131B                     l295:	
 11823                           ;mcc_generated_files/eusart.c: 198:     else
 11824                           
 11825                           
 11826                           ;mcc_generated_files/eusart.c: 199:     {;mcc_generated_files/eusart.c: 200:         PIE
      +                          1bits.TXIE = 0;
 11827  131B  1211               	bcf	17,4	;volatile
 11828                           
 11829                           ;mcc_generated_files/eusart.c: 201:         eusartTxBuffer[eusartTxHead++] = txData;
 11830  131C  0020               	movlb	0	; select bank0
 11831  131D  0821               	movf	EUSART_Write@txData,w
 11832  131E  00A0               	movwf	??_EUSART_Write
 11833  131F  0874               	movf	_eusartTxHead,w
 11834  1320  3E20               	addlw	(low (_eusartTxBuffer| (0+1024)))& (0+255)
 11835  1321  0086               	movwf	6
 11836  1322  3004               	movlw	4	; select bank8/9
 11837  1323  0087               	movwf	7
 11838  1324  0820               	movf	??_EUSART_Write,w
 11839  1325  0081               	movwf	1
 11840  1326  3001               	movlw	1
 11841  1327  00A0               	movwf	??_EUSART_Write
 11842  1328  0820               	movf	??_EUSART_Write,w
 11843  1329  07F4               	addwf	_eusartTxHead,f	;volatile
 11844                           
 11845                           ;mcc_generated_files/eusart.c: 202:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11846  132A  3040               	movlw	64
 11847  132B  0274               	subwf	_eusartTxHead,w	;volatile
 11848  132C  1803               	btfsc	3,0
 11849                           
 11850                           ;mcc_generated_files/eusart.c: 203:         {;mcc_generated_files/eusart.c: 204:        
      +                               eusartTxHead = 0;
 11851  132D  01F4               	clrf	_eusartTxHead	;volatile
 11852                           
 11853                           ;mcc_generated_files/eusart.c: 206:         eusartTxBufferRemaining--;
 11854  132E  3001               	movlw	1
 11855  132F  0023               	movlb	3	; select bank3
 11856  1330  02EB               	subwf	_eusartTxBufferRemaining^(0+384),f	;volatile
 11857  1331                     l5041:	
 11858                           
 11859                           ;mcc_generated_files/eusart.c: 208:     PIE1bits.TXIE = 1;
 11860  1331  0021               	movlb	1	; select bank1
 11861  1332  1611               	bsf	17,4	;volatile
 11862  1333  0008               	return
 11863  1334                     __end_of_EUSART_Write:	
 11864                           
 11865                           	psect	text44
 11866  14A5                     __ptext44:	
 11867 ;; *************** function _EUSART_Read_N *****************
 11868 ;; Defined at:
 11869 ;;		line 149 in file "mcc_generated_files/eusart.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;  rcv_Buff        1    wreg     PTR unsigned char 
 11872 ;;		 -> Handler_Uart@rcv_Buff(64), 
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;  rcv_Buff        1    1[BANK0 ] PTR unsigned char 
 11875 ;;		 -> Handler_Uart@rcv_Buff(64), 
 11876 ;;  readcnt         1    2[BANK0 ] unsigned char 
 11877 ;; Return value:  Size  Location     Type
 11878 ;;                  1    wreg      unsigned char 
 11879 ;; Registers used:
 11880 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11881 ;; Tracked objects:
 11882 ;;		On entry : 0/0
 11883 ;;		On exit  : 0/0
 11884 ;;		Unchanged: 0/0
 11885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;Total ram usage:        3 bytes
 11891 ;; Hardware stack levels used:    1
 11892 ;; Hardware stack levels required when called:    4
 11893 ;; This function calls:
 11894 ;;		Nothing
 11895 ;; This function is called by:
 11896 ;;		_Handler_Uart
 11897 ;; This function uses a non-reentrant model
 11898 ;;
 11899                           
 11900                           
 11901                           ;psect for function _EUSART_Read_N
 11902  14A5                     _EUSART_Read_N:	
 11903                           
 11904                           ;incstack = 0
 11905                           ; Regs used in _EUSART_Read_N: [wreg+fsr1l+fsr1h+status,2+status,0]
 11906                           ;EUSART_Read_N@rcv_Buff stored from wreg
 11907  14A5  0020               	movlb	0	; select bank0
 11908  14A6  00A1               	movwf	EUSART_Read_N@rcv_Buff
 11909                           
 11910                           ;mcc_generated_files/eusart.c: 149: uint8_t EUSART_Read_N(uint8_t *rcv_Buff);mcc_generat
      +                          ed_files/eusart.c: 150: {;mcc_generated_files/eusart.c: 151:     uint8_t readcnt = 0;
 11911  14A7  01A2               	clrf	EUSART_Read_N@readcnt
 11912                           
 11913                           ;mcc_generated_files/eusart.c: 152:     for(readcnt=0; eusartRxCount; ++readcnt)
 11914  14A8  01A2               	clrf	EUSART_Read_N@readcnt
 11915  14A9                     l4147:	
 11916  14A9  0022               	movlb	2	; select bank2
 11917  14AA  086F               	movf	_eusartRxCount^(0+256),w	;volatile
 11918  14AB  1903               	btfsc	3,2
 11919  14AC  2CDF               	goto	l4149
 11920                           
 11921                           ;mcc_generated_files/eusart.c: 153:     {;mcc_generated_files/eusart.c: 154:         eus
      +                          artRxLastError = eusartRxStatusBuffer[eusartRxTail];
 11922  14AD  0872               	movf	_eusartRxTail,w	;volatile
 11923  14AE  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 11924  14AF  0086               	movwf	6
 11925  14B0  3003               	movlw	3	; select bank6/7
 11926  14B1  0087               	movwf	7
 11927  14B2  0801               	movf	1,w
 11928  14B3  0020               	movlb	0	; select bank0
 11929  14B4  00A0               	movwf	??_EUSART_Read_N
 11930  14B5  0820               	movf	??_EUSART_Read_N,w
 11931  14B6  0021               	movlb	1	; select bank1
 11932  14B7  00EE               	movwf	_eusartRxLastError^(0+128)	;volatile
 11933                           
 11934                           ;mcc_generated_files/eusart.c: 155:         *rcv_Buff++ = eusartRxBuffer[eusartRxTail++]
      +                          ;
 11935  14B8  0872               	movf	_eusartRxTail,w
 11936  14B9  3EA0               	addlw	(low (_eusartRxBuffer| (0+768)))& (0+255)
 11937  14BA  0086               	movwf	6
 11938  14BB  3003               	movlw	3	; select bank7/8
 11939  14BC  0087               	movwf	7
 11940  14BD  0801               	movf	1,w
 11941  14BE  0020               	movlb	0	; select bank0
 11942  14BF  00A0               	movwf	??_EUSART_Read_N
 11943  14C0  0821               	movf	EUSART_Read_N@rcv_Buff,w
 11944  14C1  0086               	movwf	6
 11945  14C2  3001               	movlw	1	; select bank2/3
 11946  14C3  0087               	movwf	7
 11947  14C4  0820               	movf	??_EUSART_Read_N,w
 11948  14C5  0081               	movwf	1
 11949  14C6  3001               	movlw	1
 11950  14C7  00A0               	movwf	??_EUSART_Read_N
 11951  14C8  0820               	movf	??_EUSART_Read_N,w
 11952  14C9  07F2               	addwf	_eusartRxTail,f	;volatile
 11953  14CA  3001               	movlw	1
 11954  14CB  00A0               	movwf	??_EUSART_Read_N
 11955  14CC  0820               	movf	??_EUSART_Read_N,w
 11956  14CD  07A1               	addwf	EUSART_Read_N@rcv_Buff,f
 11957                           
 11958                           ;mcc_generated_files/eusart.c: 156:         if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11959  14CE  3040               	movlw	64
 11960  14CF  0272               	subwf	_eusartRxTail,w	;volatile
 11961  14D0  1803               	btfsc	3,0
 11962                           
 11963                           ;mcc_generated_files/eusart.c: 157:         {;mcc_generated_files/eusart.c: 158:        
      +                               eusartRxTail = 0;
 11964  14D1  01F2               	clrf	_eusartRxTail	;volatile
 11965                           
 11966                           ;mcc_generated_files/eusart.c: 160:         PIE1bits.RCIE = 0;
 11967  14D2  0021               	movlb	1	; select bank1
 11968  14D3  1291               	bcf	17,5	;volatile
 11969                           
 11970                           ;mcc_generated_files/eusart.c: 161:         eusartRxCount--;
 11971  14D4  3001               	movlw	1
 11972  14D5  0022               	movlb	2	; select bank2
 11973  14D6  02EF               	subwf	_eusartRxCount^(0+256),f	;volatile
 11974                           
 11975                           ;mcc_generated_files/eusart.c: 162:         PIE1bits.RCIE = 1;
 11976  14D7  0021               	movlb	1	; select bank1
 11977  14D8  1691               	bsf	17,5	;volatile
 11978                           
 11979                           ;mcc_generated_files/eusart.c: 163:     }
 11980  14D9  3001               	movlw	1
 11981  14DA  0020               	movlb	0	; select bank0
 11982  14DB  00A0               	movwf	??_EUSART_Read_N
 11983  14DC  0820               	movf	??_EUSART_Read_N,w
 11984  14DD  07A2               	addwf	EUSART_Read_N@readcnt,f
 11985  14DE  2CA9               	goto	l4147
 11986  14DF                     l4149:	
 11987                           
 11988                           ;mcc_generated_files/eusart.c: 164:     return readcnt;
 11989  14DF  0020               	movlb	0	; select bank0
 11990  14E0  0822               	movf	EUSART_Read_N@readcnt,w
 11991  14E1  0008               	return
 11992  14E2                     __end_of_EUSART_Read_N:	
 11993                           
 11994                           	psect	text45
 11995  04A1                     __ptext45:	
 11996 ;; *************** function _Handler_I2c *****************
 11997 ;; Defined at:
 11998 ;;		line 552 in file "main.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;		None
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;  ReadBuffer      2   27[BANK0 ] unsigned char [2]
 12003 ;;  Reg             1   26[BANK0 ] unsigned char [1]
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12014 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12015 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;Total ram usage:        8 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:    7
 12020 ;; This function calls:
 12021 ;;		_I2C1_RBlk
 12022 ;;		_PWM5_LoadDutyValue
 12023 ;;		_PWM6_LoadDutyValue
 12024 ;;		___aldiv
 12025 ;;		___awdiv
 12026 ;;		___lmul
 12027 ;;		___wmul
 12028 ;;		_memset
 12029 ;; This function is called by:
 12030 ;;		_main
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           
 12035                           ;psect for function _Handler_I2c
 12036  04A1                     _Handler_I2c:	
 12037                           
 12038                           ;main.c: 554:     uint8_t Reg[1] = {0};
 12039                           
 12040                           ;incstack = 0
 12041                           ; Regs used in _Handler_I2c: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12042  04A1  0020               	movlb	0	; select bank0
 12043  04A2  01BA               	clrf	Handler_I2c@Reg
 12044                           
 12045                           ;main.c: 555:     uint8_t ReadBuffer[2] = {0};
 12046  04A3  01BB               	clrf	Handler_I2c@ReadBuffer
 12047  04A4  01BC               	clrf	Handler_I2c@ReadBuffer+1
 12048                           
 12049                           ;main.c: 561:     Reg[0] = 0xE3;
 12050  04A5  30E3               	movlw	227
 12051  04A6  00B5               	movwf	??_Handler_I2c
 12052  04A7  0835               	movf	??_Handler_I2c,w
 12053  04A8  00BA               	movwf	Handler_I2c@Reg
 12054                           
 12055                           ;main.c: 562:     memset(ReadBuffer,0,sizeof(ReadBuffer));
 12056  04A9  303B               	movlw	low Handler_I2c@ReadBuffer
 12057  04AA  00A0               	movwf	memset@dest
 12058  04AB  3000               	movlw	high Handler_I2c@ReadBuffer
 12059  04AC  00A1               	movwf	memset@dest+1
 12060  04AD  3000               	movlw	0
 12061  04AE  00A2               	movwf	memset@c
 12062  04AF  00A3               	movwf	memset@c+1
 12063  04B0  3002               	movlw	2
 12064  04B1  00A4               	movwf	memset@n
 12065  04B2  3000               	movlw	0
 12066  04B3  00A5               	movwf	memset@n+1
 12067  04B4  3197  2744  3184   	fcall	_memset
 12068                           
 12069                           ;main.c: 565:     I2C1_RBlk(0x40, Reg, 1,ReadBuffer, 2);
 12070  04B7  3040               	movlw	64
 12071  04B8  0020               	movlb	0	; select bank0
 12072  04B9  00A8               	movwf	I2C1_RBlk@slaveDeviceAddress
 12073  04BA  3000               	movlw	0
 12074  04BB  00A9               	movwf	I2C1_RBlk@slaveDeviceAddress+1
 12075  04BC  303A               	movlw	(low (Handler_I2c@Reg| 0))& (0+255)
 12076  04BD  00B5               	movwf	??_Handler_I2c
 12077  04BE  0835               	movf	??_Handler_I2c,w
 12078  04BF  00AA               	movwf	I2C1_RBlk@wblk
 12079  04C0  3001               	movlw	1
 12080  04C1  00AB               	movwf	I2C1_RBlk@wCount
 12081  04C2  3000               	movlw	0
 12082  04C3  00AC               	movwf	I2C1_RBlk@wCount+1
 12083  04C4  303B               	movlw	low Handler_I2c@ReadBuffer
 12084  04C5  00AD               	movwf	I2C1_RBlk@pData
 12085  04C6  3000               	movlw	high Handler_I2c@ReadBuffer
 12086  04C7  00AE               	movwf	I2C1_RBlk@pData+1
 12087  04C8  3002               	movlw	2
 12088  04C9  00AF               	movwf	I2C1_RBlk@rCount
 12089  04CA  3000               	movlw	0
 12090  04CB  00B0               	movwf	I2C1_RBlk@rCount+1
 12091  04CC  3195  2529  3184   	fcall	_I2C1_RBlk
 12092                           
 12093                           ;main.c: 568:     Read_SI7020_Temp = ((ReadBuffer[0] <<8) + ReadBuffer[1]);
 12094  04CF  0020               	movlb	0	; select bank0
 12095  04D0  083C               	movf	Handler_I2c@ReadBuffer+1,w
 12096  04D1  00B5               	movwf	??_Handler_I2c
 12097  04D2  01B6               	clrf	??_Handler_I2c+1
 12098  04D3  083B               	movf	Handler_I2c@ReadBuffer,w
 12099  04D4  00B7               	movwf	??_Handler_I2c+2
 12100  04D5  01B8               	clrf	??_Handler_I2c+3
 12101  04D6  0837               	movf	??_Handler_I2c+2,w
 12102  04D7  00B8               	movwf	??_Handler_I2c+3
 12103  04D8  01B7               	clrf	??_Handler_I2c+2
 12104  04D9  0835               	movf	??_Handler_I2c,w
 12105  04DA  0737               	addwf	??_Handler_I2c+2,w
 12106  04DB  0021               	movlb	1	; select bank1
 12107  04DC  00D0               	movwf	_Read_SI7020_Temp^(0+128)
 12108  04DD  0020               	movlb	0	; select bank0
 12109  04DE  0836               	movf	??_Handler_I2c+1,w
 12110  04DF  3D38               	addwfc	??_Handler_I2c+3,w
 12111  04E0  0021               	movlb	1	; select bank1
 12112  04E1  00D1               	movwf	(_Read_SI7020_Temp+1)^(0+128)
 12113  04E2  01D2               	clrf	(_Read_SI7020_Temp^(0+128)+2)
 12114  04E3  1BD1               	btfsc	(_Read_SI7020_Temp^(0+128)+1),7
 12115  04E4  03D2               	decf	(_Read_SI7020_Temp+2)^(0+128),f
 12116  04E5  0852               	movf	(_Read_SI7020_Temp^(0+128)+2),w
 12117  04E6  00D3               	movwf	(_Read_SI7020_Temp+3)^(0+128)
 12118                           
 12119                           ;main.c: 570:     if (Read_SI7020_Temp==0) return;
 12120  04E7  0853               	movf	(_Read_SI7020_Temp+3)^(0+128),w
 12121  04E8  0452               	iorwf	(_Read_SI7020_Temp+2)^(0+128),w
 12122  04E9  0451               	iorwf	(_Read_SI7020_Temp+1)^(0+128),w
 12123  04EA  0450               	iorwf	_Read_SI7020_Temp^(0+128),w
 12124  04EB  1903               	btfsc	3,2
 12125  04EC  0008               	return
 12126                           
 12127                           ;main.c: 572:     Read_SI7020_Temp = (((Read_SI7020_Temp*17572) >>16)-4685);
 12128  04ED  0853               	movf	(_Read_SI7020_Temp+3)^(0+128),w
 12129  04EE  0020               	movlb	0	; select bank0
 12130  04EF  00A3               	movwf	___lmul@multiplier+3
 12131  04F0  0021               	movlb	1	; select bank1
 12132  04F1  0852               	movf	(_Read_SI7020_Temp+2)^(0+128),w
 12133  04F2  0020               	movlb	0	; select bank0
 12134  04F3  00A2               	movwf	___lmul@multiplier+2
 12135  04F4  0021               	movlb	1	; select bank1
 12136  04F5  0851               	movf	(_Read_SI7020_Temp+1)^(0+128),w
 12137  04F6  0020               	movlb	0	; select bank0
 12138  04F7  00A1               	movwf	___lmul@multiplier+1
 12139  04F8  0021               	movlb	1	; select bank1
 12140  04F9  0850               	movf	_Read_SI7020_Temp^(0+128),w
 12141  04FA  0020               	movlb	0	; select bank0
 12142  04FB  00A0               	movwf	___lmul@multiplier
 12143  04FC  3000               	movlw	0
 12144  04FD  00A7               	movwf	___lmul@multiplicand+3
 12145  04FE  3000               	movlw	0
 12146  04FF  00A6               	movwf	___lmul@multiplicand+2
 12147  0500  3044               	movlw	68
 12148  0501  00A5               	movwf	___lmul@multiplicand+1
 12149  0502  30A4               	movlw	164
 12150  0503  00A4               	movwf	___lmul@multiplicand
 12151  0504  3193  2360  3184   	fcall	___lmul
 12152  0507  0020               	movlb	0	; select bank0
 12153  0508  0820               	movf	?___lmul,w
 12154  0509  00B5               	movwf	??_Handler_I2c
 12155  050A  0821               	movf	?___lmul+1,w
 12156  050B  00B6               	movwf	??_Handler_I2c+1
 12157  050C  0822               	movf	?___lmul+2,w
 12158  050D  00B7               	movwf	??_Handler_I2c+2
 12159  050E  0823               	movf	?___lmul+3,w
 12160  050F  00B8               	movwf	??_Handler_I2c+3
 12161  0510  3010               	movlw	16
 12162  0511  00B9               	movwf	??_Handler_I2c+4
 12163  0512                     u4655:	
 12164  0512  37B8               	asrf	??_Handler_I2c+3,f
 12165  0513  0CB7               	rrf	??_Handler_I2c+2,f
 12166  0514  0CB6               	rrf	??_Handler_I2c+1,f
 12167  0515  0CB5               	rrf	??_Handler_I2c,f
 12168  0516  0BB9               	decfsz	??_Handler_I2c+4,f
 12169  0517  2D12               	goto	u4655
 12170  0518  30B3               	movlw	179
 12171  0519  0735               	addwf	??_Handler_I2c,w
 12172  051A  0021               	movlb	1	; select bank1
 12173  051B  00D0               	movwf	_Read_SI7020_Temp^(0+128)
 12174  051C  30ED               	movlw	237
 12175  051D  0020               	movlb	0	; select bank0
 12176  051E  3D36               	addwfc	??_Handler_I2c+1,w
 12177  051F  0021               	movlb	1	; select bank1
 12178  0520  00D1               	movwf	(_Read_SI7020_Temp+1)^(0+128)
 12179  0521  30FF               	movlw	255
 12180  0522  0020               	movlb	0	; select bank0
 12181  0523  3D37               	addwfc	??_Handler_I2c+2,w
 12182  0524  0021               	movlb	1	; select bank1
 12183  0525  00D2               	movwf	(_Read_SI7020_Temp+2)^(0+128)
 12184  0526  30FF               	movlw	255
 12185  0527  0020               	movlb	0	; select bank0
 12186  0528  3D38               	addwfc	??_Handler_I2c+3,w
 12187  0529  0021               	movlb	1	; select bank1
 12188  052A  00D3               	movwf	(_Read_SI7020_Temp+3)^(0+128)
 12189                           
 12190                           ;main.c: 573:     Temp_Heater1 = Read_SI7020_Temp/100;
 12191  052B  3000               	movlw	0
 12192  052C  0020               	movlb	0	; select bank0
 12193  052D  00A3               	movwf	___aldiv@divisor+3
 12194  052E  3000               	movlw	0
 12195  052F  00A2               	movwf	___aldiv@divisor+2
 12196  0530  3000               	movlw	0
 12197  0531  00A1               	movwf	___aldiv@divisor+1
 12198  0532  3064               	movlw	100
 12199  0533  00A0               	movwf	___aldiv@divisor
 12200  0534  0021               	movlb	1	; select bank1
 12201  0535  0853               	movf	(_Read_SI7020_Temp+3)^(0+128),w
 12202  0536  0020               	movlb	0	; select bank0
 12203  0537  00A7               	movwf	___aldiv@dividend+3
 12204  0538  0021               	movlb	1	; select bank1
 12205  0539  0852               	movf	(_Read_SI7020_Temp+2)^(0+128),w
 12206  053A  0020               	movlb	0	; select bank0
 12207  053B  00A6               	movwf	___aldiv@dividend+2
 12208  053C  0021               	movlb	1	; select bank1
 12209  053D  0851               	movf	(_Read_SI7020_Temp+1)^(0+128),w
 12210  053E  0020               	movlb	0	; select bank0
 12211  053F  00A5               	movwf	___aldiv@dividend+1
 12212  0540  0021               	movlb	1	; select bank1
 12213  0541  0850               	movf	_Read_SI7020_Temp^(0+128),w
 12214  0542  0020               	movlb	0	; select bank0
 12215  0543  00A4               	movwf	___aldiv@dividend
 12216  0544  3196  2616  3184   	fcall	___aldiv
 12217  0547  0020               	movlb	0	; select bank0
 12218  0548  0820               	movf	?___aldiv,w
 12219  0549  00B5               	movwf	??_Handler_I2c
 12220  054A  0835               	movf	??_Handler_I2c,w
 12221  054B  00F1               	movwf	_Temp_Heater1
 12222                           
 12223                           ;main.c: 574:     Temp_Heater2 = Temp_Heater1;
 12224  054C  0871               	movf	_Temp_Heater1,w
 12225  054D  00B5               	movwf	??_Handler_I2c
 12226  054E  0835               	movf	??_Handler_I2c,w
 12227  054F  00F0               	movwf	_Temp_Heater2
 12228                           
 12229                           ;main.c: 652:     if(Temp_Heater1 < 50)
 12230  0550  0871               	movf	_Temp_Heater1,w
 12231  0551  3A80               	xorlw	128
 12232  0552  3E4E               	addlw	-178
 12233  0553  1803               	skipnc
 12234  0554  2DD0               	goto	l5943
 12235                           
 12236                           ;main.c: 653:     {;main.c: 654:         if(Temp_Heater1 <= PWM_Table_Temp1){
 12237  0555  0021               	movlb	1	; select bank1
 12238  0556  0868               	movf	_PWM_Table_Temp1^(0+128),w
 12239  0557  3A80               	xorlw	128
 12240  0558  0020               	movlb	0	; select bank0
 12241  0559  00B5               	movwf	??_Handler_I2c
 12242  055A  0871               	movf	_Temp_Heater1,w
 12243  055B  3A80               	xorlw	128
 12244  055C  02B5               	subwf	??_Handler_I2c,f
 12245  055D  1C03               	skipc
 12246  055E  2D62               	goto	l5915
 12247                           
 12248                           ;main.c: 655:             CurrentPWM1 = PWM_1;
 12249  055F  0021               	movlb	1	; select bank1
 12250  0560  0863               	movf	_PWM_1^(0+128),w
 12251  0561  2DCA               	goto	L11
 12252  0562                     l5915:	
 12253                           ;main.c: 656:         }else if (PWM_Table_Temp1 < Temp_Heater1 && Temp_Heater1<= PWM_Tab
      +                          le_Temp2){
 12254                           
 12255  0562  0021               	movlb	1	; select bank1
 12256  0563  0868               	movf	_PWM_Table_Temp1^(0+128),w
 12257  0564  3A80               	xorlw	128
 12258  0565  0020               	movlb	0	; select bank0
 12259  0566  00B5               	movwf	??_Handler_I2c
 12260  0567  0871               	movf	_Temp_Heater1,w
 12261  0568  3A80               	xorlw	128
 12262  0569  02B5               	subwf	??_Handler_I2c,f
 12263  056A  1803               	skipnc
 12264  056B  2D79               	goto	l5921
 12265  056C  0021               	movlb	1	; select bank1
 12266  056D  0867               	movf	_PWM_Table_Temp2^(0+128),w
 12267  056E  3A80               	xorlw	128
 12268  056F  0020               	movlb	0	; select bank0
 12269  0570  00B5               	movwf	??_Handler_I2c
 12270  0571  0871               	movf	_Temp_Heater1,w
 12271  0572  3A80               	xorlw	128
 12272  0573  02B5               	subwf	??_Handler_I2c,f
 12273  0574  1C03               	skipc
 12274  0575  2D79               	goto	l5921
 12275                           
 12276                           ;main.c: 657:             CurrentPWM1 = PWM_2;
 12277  0576  0021               	movlb	1	; select bank1
 12278  0577  0862               	movf	_PWM_2^(0+128),w
 12279  0578  2DCA               	goto	L11
 12280  0579                     l5921:	
 12281                           ;main.c: 658:         }else if (PWM_Table_Temp2 < Temp_Heater1 && Temp_Heater1<= PWM_Tab
      +                          le_Temp3){
 12282                           
 12283  0579  0021               	movlb	1	; select bank1
 12284  057A  0867               	movf	_PWM_Table_Temp2^(0+128),w
 12285  057B  3A80               	xorlw	128
 12286  057C  0020               	movlb	0	; select bank0
 12287  057D  00B5               	movwf	??_Handler_I2c
 12288  057E  0871               	movf	_Temp_Heater1,w
 12289  057F  3A80               	xorlw	128
 12290  0580  02B5               	subwf	??_Handler_I2c,f
 12291  0581  1803               	skipnc
 12292  0582  2D90               	goto	l5927
 12293  0583  0021               	movlb	1	; select bank1
 12294  0584  0866               	movf	_PWM_Table_Temp3^(0+128),w
 12295  0585  3A80               	xorlw	128
 12296  0586  0020               	movlb	0	; select bank0
 12297  0587  00B5               	movwf	??_Handler_I2c
 12298  0588  0871               	movf	_Temp_Heater1,w
 12299  0589  3A80               	xorlw	128
 12300  058A  02B5               	subwf	??_Handler_I2c,f
 12301  058B  1C03               	skipc
 12302  058C  2D90               	goto	l5927
 12303                           
 12304                           ;main.c: 659:             CurrentPWM1 = PWM_3;
 12305  058D  0021               	movlb	1	; select bank1
 12306  058E  0861               	movf	_PWM_3^(0+128),w
 12307  058F  2DCA               	goto	L11
 12308  0590                     l5927:	
 12309                           ;main.c: 660:         }else if (PWM_Table_Temp3 < Temp_Heater1 && Temp_Heater1<= PWM_Tab
      +                          le_Temp4){
 12310                           
 12311  0590  0021               	movlb	1	; select bank1
 12312  0591  0866               	movf	_PWM_Table_Temp3^(0+128),w
 12313  0592  3A80               	xorlw	128
 12314  0593  0020               	movlb	0	; select bank0
 12315  0594  00B5               	movwf	??_Handler_I2c
 12316  0595  0871               	movf	_Temp_Heater1,w
 12317  0596  3A80               	xorlw	128
 12318  0597  02B5               	subwf	??_Handler_I2c,f
 12319  0598  1803               	skipnc
 12320  0599  2DA7               	goto	l5933
 12321  059A  0021               	movlb	1	; select bank1
 12322  059B  0865               	movf	_PWM_Table_Temp4^(0+128),w
 12323  059C  3A80               	xorlw	128
 12324  059D  0020               	movlb	0	; select bank0
 12325  059E  00B5               	movwf	??_Handler_I2c
 12326  059F  0871               	movf	_Temp_Heater1,w
 12327  05A0  3A80               	xorlw	128
 12328  05A1  02B5               	subwf	??_Handler_I2c,f
 12329  05A2  1C03               	skipc
 12330  05A3  2DA7               	goto	l5933
 12331                           
 12332                           ;main.c: 661:             CurrentPWM1 = PWM_4;
 12333  05A4  0021               	movlb	1	; select bank1
 12334  05A5  0860               	movf	_PWM_4^(0+128),w
 12335  05A6  2DCA               	goto	L11
 12336  05A7                     l5933:	
 12337                           ;main.c: 662:         }else if (PWM_Table_Temp4 < Temp_Heater1 && Temp_Heater1<= PWM_Tab
      +                          le_Temp5){
 12338                           
 12339  05A7  0021               	movlb	1	; select bank1
 12340  05A8  0865               	movf	_PWM_Table_Temp4^(0+128),w
 12341  05A9  3A80               	xorlw	128
 12342  05AA  0020               	movlb	0	; select bank0
 12343  05AB  00B5               	movwf	??_Handler_I2c
 12344  05AC  0871               	movf	_Temp_Heater1,w
 12345  05AD  3A80               	xorlw	128
 12346  05AE  02B5               	subwf	??_Handler_I2c,f
 12347  05AF  1803               	skipnc
 12348  05B0  2DBE               	goto	l5939
 12349  05B1  0021               	movlb	1	; select bank1
 12350  05B2  0864               	movf	_PWM_Table_Temp5^(0+128),w
 12351  05B3  3A80               	xorlw	128
 12352  05B4  0020               	movlb	0	; select bank0
 12353  05B5  00B5               	movwf	??_Handler_I2c
 12354  05B6  0871               	movf	_Temp_Heater1,w
 12355  05B7  3A80               	xorlw	128
 12356  05B8  02B5               	subwf	??_Handler_I2c,f
 12357  05B9  1C03               	skipc
 12358  05BA  2DBE               	goto	l5939
 12359                           
 12360                           ;main.c: 663:             CurrentPWM1 = PWM_5;
 12361  05BB  0021               	movlb	1	; select bank1
 12362  05BC  085F               	movf	_PWM_5^(0+128),w
 12363  05BD  2DCA               	goto	L11
 12364  05BE                     l5939:	
 12365                           ;main.c: 664:         }else if (PWM_Table_Temp5 < Temp_Heater1){
 12366                           
 12367  05BE  0021               	movlb	1	; select bank1
 12368  05BF  0864               	movf	_PWM_Table_Temp5^(0+128),w
 12369  05C0  3A80               	xorlw	128
 12370  05C1  0020               	movlb	0	; select bank0
 12371  05C2  00B5               	movwf	??_Handler_I2c
 12372  05C3  0871               	movf	_Temp_Heater1,w
 12373  05C4  3A80               	xorlw	128
 12374  05C5  02B5               	subwf	??_Handler_I2c,f
 12375  05C6  1803               	skipnc
 12376  05C7  2DD2               	goto	l5945
 12377                           
 12378                           ;main.c: 665:             CurrentPWM1 = PWM_6;
 12379  05C8  0021               	movlb	1	; select bank1
 12380  05C9  085E               	movf	_PWM_6^(0+128),w
 12381  05CA                     L11:	
 12382  05CA  0020               	movlb	0	; select bank0
 12383  05CB  00B5               	movwf	??_Handler_I2c
 12384  05CC  0835               	movf	??_Handler_I2c,w
 12385  05CD  0021               	movlb	1	; select bank1
 12386  05CE  00DD               	movwf	_CurrentPWM1^(0+128)
 12387  05CF  2DD2               	goto	l5945
 12388  05D0                     l5943:	
 12389                           
 12390                           ;main.c: 668:         CurrentPWM1 = 0;
 12391  05D0  0021               	movlb	1	; select bank1
 12392  05D1  01DD               	clrf	_CurrentPWM1^(0+128)
 12393  05D2                     l5945:	
 12394                           
 12395                           ;main.c: 670:     PWM5_LoadDutyValue((CurrentPWM1*319)/100);
 12396  05D2  3064               	movlw	100
 12397  05D3  0020               	movlb	0	; select bank0
 12398  05D4  00A6               	movwf	___awdiv@divisor
 12399  05D5  3000               	movlw	0
 12400  05D6  00A7               	movwf	___awdiv@divisor+1
 12401  05D7  0021               	movlb	1	; select bank1
 12402  05D8  085D               	movf	_CurrentPWM1^(0+128),w
 12403  05D9  0020               	movlb	0	; select bank0
 12404  05DA  00B5               	movwf	??_Handler_I2c
 12405  05DB  01B6               	clrf	??_Handler_I2c+1
 12406  05DC  0835               	movf	??_Handler_I2c,w
 12407  05DD  00A0               	movwf	___wmul@multiplier
 12408  05DE  0836               	movf	??_Handler_I2c+1,w
 12409  05DF  00A1               	movwf	___wmul@multiplier+1
 12410  05E0  303F               	movlw	63
 12411  05E1  00A2               	movwf	___wmul@multiplicand
 12412  05E2  3001               	movlw	1
 12413  05E3  00A3               	movwf	___wmul@multiplicand+1
 12414  05E4  3191  21EF  3184   	fcall	___wmul
 12415  05E7  0020               	movlb	0	; select bank0
 12416  05E8  0821               	movf	?___wmul+1,w
 12417  05E9  00A9               	movwf	___awdiv@dividend+1
 12418  05EA  0820               	movf	?___wmul,w
 12419  05EB  00A8               	movwf	___awdiv@dividend
 12420  05EC  3195  25C4  3184   	fcall	___awdiv
 12421  05EF  0020               	movlb	0	; select bank0
 12422  05F0  0827               	movf	?___awdiv+1,w
 12423  05F1  00B0               	movwf	PWM5_LoadDutyValue@dutyValue+1
 12424  05F2  0826               	movf	?___awdiv,w
 12425  05F3  00AF               	movwf	PWM5_LoadDutyValue@dutyValue
 12426  05F4  3191  2170  3184   	fcall	_PWM5_LoadDutyValue
 12427                           
 12428                           ;main.c: 672:     if(Temp_Heater2 < 50)
 12429  05F7  0870               	movf	_Temp_Heater2,w
 12430  05F8  3A80               	xorlw	128
 12431  05F9  3E4E               	addlw	-178
 12432  05FA  1803               	skipnc
 12433  05FB  2E77               	goto	l5981
 12434                           
 12435                           ;main.c: 673:     {;main.c: 674:         if(Temp_Heater2 <= PWM_Table_Temp1){
 12436  05FC  0021               	movlb	1	; select bank1
 12437  05FD  0868               	movf	_PWM_Table_Temp1^(0+128),w
 12438  05FE  3A80               	xorlw	128
 12439  05FF  0020               	movlb	0	; select bank0
 12440  0600  00B5               	movwf	??_Handler_I2c
 12441  0601  0870               	movf	_Temp_Heater2,w
 12442  0602  3A80               	xorlw	128
 12443  0603  02B5               	subwf	??_Handler_I2c,f
 12444  0604  1C03               	skipc
 12445  0605  2E09               	goto	l5953
 12446                           
 12447                           ;main.c: 675:             CurrentPWM2 = PWM_1;
 12448  0606  0021               	movlb	1	; select bank1
 12449  0607  0863               	movf	_PWM_1^(0+128),w
 12450  0608  2E71               	goto	L16
 12451  0609                     l5953:	
 12452                           ;main.c: 676:         }else if (PWM_Table_Temp1 < Temp_Heater2 && Temp_Heater2<= PWM_Tab
      +                          le_Temp2){
 12453                           
 12454  0609  0021               	movlb	1	; select bank1
 12455  060A  0868               	movf	_PWM_Table_Temp1^(0+128),w
 12456  060B  3A80               	xorlw	128
 12457  060C  0020               	movlb	0	; select bank0
 12458  060D  00B5               	movwf	??_Handler_I2c
 12459  060E  0870               	movf	_Temp_Heater2,w
 12460  060F  3A80               	xorlw	128
 12461  0610  02B5               	subwf	??_Handler_I2c,f
 12462  0611  1803               	skipnc
 12463  0612  2E20               	goto	l5959
 12464  0613  0021               	movlb	1	; select bank1
 12465  0614  0867               	movf	_PWM_Table_Temp2^(0+128),w
 12466  0615  3A80               	xorlw	128
 12467  0616  0020               	movlb	0	; select bank0
 12468  0617  00B5               	movwf	??_Handler_I2c
 12469  0618  0870               	movf	_Temp_Heater2,w
 12470  0619  3A80               	xorlw	128
 12471  061A  02B5               	subwf	??_Handler_I2c,f
 12472  061B  1C03               	skipc
 12473  061C  2E20               	goto	l5959
 12474                           
 12475                           ;main.c: 677:             CurrentPWM2 = PWM_2;
 12476  061D  0021               	movlb	1	; select bank1
 12477  061E  0862               	movf	_PWM_2^(0+128),w
 12478  061F  2E71               	goto	L16
 12479  0620                     l5959:	
 12480                           ;main.c: 678:         }else if (PWM_Table_Temp2 < Temp_Heater2 && Temp_Heater2<= PWM_Tab
      +                          le_Temp3){
 12481                           
 12482  0620  0021               	movlb	1	; select bank1
 12483  0621  0867               	movf	_PWM_Table_Temp2^(0+128),w
 12484  0622  3A80               	xorlw	128
 12485  0623  0020               	movlb	0	; select bank0
 12486  0624  00B5               	movwf	??_Handler_I2c
 12487  0625  0870               	movf	_Temp_Heater2,w
 12488  0626  3A80               	xorlw	128
 12489  0627  02B5               	subwf	??_Handler_I2c,f
 12490  0628  1803               	skipnc
 12491  0629  2E37               	goto	l5965
 12492  062A  0021               	movlb	1	; select bank1
 12493  062B  0866               	movf	_PWM_Table_Temp3^(0+128),w
 12494  062C  3A80               	xorlw	128
 12495  062D  0020               	movlb	0	; select bank0
 12496  062E  00B5               	movwf	??_Handler_I2c
 12497  062F  0870               	movf	_Temp_Heater2,w
 12498  0630  3A80               	xorlw	128
 12499  0631  02B5               	subwf	??_Handler_I2c,f
 12500  0632  1C03               	skipc
 12501  0633  2E37               	goto	l5965
 12502                           
 12503                           ;main.c: 679:             CurrentPWM2 = PWM_3;
 12504  0634  0021               	movlb	1	; select bank1
 12505  0635  0861               	movf	_PWM_3^(0+128),w
 12506  0636  2E71               	goto	L16
 12507  0637                     l5965:	
 12508                           ;main.c: 680:         }else if (PWM_Table_Temp3 < Temp_Heater2 && Temp_Heater2<= PWM_Tab
      +                          le_Temp4){
 12509                           
 12510  0637  0021               	movlb	1	; select bank1
 12511  0638  0866               	movf	_PWM_Table_Temp3^(0+128),w
 12512  0639  3A80               	xorlw	128
 12513  063A  0020               	movlb	0	; select bank0
 12514  063B  00B5               	movwf	??_Handler_I2c
 12515  063C  0870               	movf	_Temp_Heater2,w
 12516  063D  3A80               	xorlw	128
 12517  063E  02B5               	subwf	??_Handler_I2c,f
 12518  063F  1803               	skipnc
 12519  0640  2E4E               	goto	l5971
 12520  0641  0021               	movlb	1	; select bank1
 12521  0642  0865               	movf	_PWM_Table_Temp4^(0+128),w
 12522  0643  3A80               	xorlw	128
 12523  0644  0020               	movlb	0	; select bank0
 12524  0645  00B5               	movwf	??_Handler_I2c
 12525  0646  0870               	movf	_Temp_Heater2,w
 12526  0647  3A80               	xorlw	128
 12527  0648  02B5               	subwf	??_Handler_I2c,f
 12528  0649  1C03               	skipc
 12529  064A  2E4E               	goto	l5971
 12530                           
 12531                           ;main.c: 681:             CurrentPWM2 = PWM_4;
 12532  064B  0021               	movlb	1	; select bank1
 12533  064C  0860               	movf	_PWM_4^(0+128),w
 12534  064D  2E71               	goto	L16
 12535  064E                     l5971:	
 12536                           ;main.c: 682:         }else if (PWM_Table_Temp4 < Temp_Heater2 && Temp_Heater2<= PWM_Tab
      +                          le_Temp5){
 12537                           
 12538  064E  0021               	movlb	1	; select bank1
 12539  064F  0865               	movf	_PWM_Table_Temp4^(0+128),w
 12540  0650  3A80               	xorlw	128
 12541  0651  0020               	movlb	0	; select bank0
 12542  0652  00B5               	movwf	??_Handler_I2c
 12543  0653  0870               	movf	_Temp_Heater2,w
 12544  0654  3A80               	xorlw	128
 12545  0655  02B5               	subwf	??_Handler_I2c,f
 12546  0656  1803               	skipnc
 12547  0657  2E65               	goto	l5977
 12548  0658  0021               	movlb	1	; select bank1
 12549  0659  0864               	movf	_PWM_Table_Temp5^(0+128),w
 12550  065A  3A80               	xorlw	128
 12551  065B  0020               	movlb	0	; select bank0
 12552  065C  00B5               	movwf	??_Handler_I2c
 12553  065D  0870               	movf	_Temp_Heater2,w
 12554  065E  3A80               	xorlw	128
 12555  065F  02B5               	subwf	??_Handler_I2c,f
 12556  0660  1C03               	skipc
 12557  0661  2E65               	goto	l5977
 12558                           
 12559                           ;main.c: 683:             CurrentPWM2 = PWM_5;
 12560  0662  0021               	movlb	1	; select bank1
 12561  0663  085F               	movf	_PWM_5^(0+128),w
 12562  0664  2E71               	goto	L16
 12563  0665                     l5977:	
 12564                           ;main.c: 684:         }else if (PWM_Table_Temp5 < Temp_Heater2){
 12565                           
 12566  0665  0021               	movlb	1	; select bank1
 12567  0666  0864               	movf	_PWM_Table_Temp5^(0+128),w
 12568  0667  3A80               	xorlw	128
 12569  0668  0020               	movlb	0	; select bank0
 12570  0669  00B5               	movwf	??_Handler_I2c
 12571  066A  0870               	movf	_Temp_Heater2,w
 12572  066B  3A80               	xorlw	128
 12573  066C  02B5               	subwf	??_Handler_I2c,f
 12574  066D  1803               	skipnc
 12575  066E  2E79               	goto	l5983
 12576                           
 12577                           ;main.c: 685:             CurrentPWM2 = PWM_6;
 12578  066F  0021               	movlb	1	; select bank1
 12579  0670  085E               	movf	_PWM_6^(0+128),w
 12580  0671                     L16:	
 12581  0671  0020               	movlb	0	; select bank0
 12582  0672  00B5               	movwf	??_Handler_I2c
 12583  0673  0835               	movf	??_Handler_I2c,w
 12584  0674  0021               	movlb	1	; select bank1
 12585  0675  00DC               	movwf	_CurrentPWM2^(0+128)
 12586  0676  2E79               	goto	l5983
 12587  0677                     l5981:	
 12588                           
 12589                           ;main.c: 688:         CurrentPWM2 = 0;
 12590  0677  0021               	movlb	1	; select bank1
 12591  0678  01DC               	clrf	_CurrentPWM2^(0+128)
 12592  0679                     l5983:	
 12593                           
 12594                           ;main.c: 690:     PWM6_LoadDutyValue((CurrentPWM2*319)/100);
 12595  0679  3064               	movlw	100
 12596  067A  0020               	movlb	0	; select bank0
 12597  067B  00A6               	movwf	___awdiv@divisor
 12598  067C  3000               	movlw	0
 12599  067D  00A7               	movwf	___awdiv@divisor+1
 12600  067E  0021               	movlb	1	; select bank1
 12601  067F  085C               	movf	_CurrentPWM2^(0+128),w
 12602  0680  0020               	movlb	0	; select bank0
 12603  0681  00B5               	movwf	??_Handler_I2c
 12604  0682  01B6               	clrf	??_Handler_I2c+1
 12605  0683  0835               	movf	??_Handler_I2c,w
 12606  0684  00A0               	movwf	___wmul@multiplier
 12607  0685  0836               	movf	??_Handler_I2c+1,w
 12608  0686  00A1               	movwf	___wmul@multiplier+1
 12609  0687  303F               	movlw	63
 12610  0688  00A2               	movwf	___wmul@multiplicand
 12611  0689  3001               	movlw	1
 12612  068A  00A3               	movwf	___wmul@multiplicand+1
 12613  068B  3191  21EF  3184   	fcall	___wmul
 12614  068E  0020               	movlb	0	; select bank0
 12615  068F  0821               	movf	?___wmul+1,w
 12616  0690  00A9               	movwf	___awdiv@dividend+1
 12617  0691  0820               	movf	?___wmul,w
 12618  0692  00A8               	movwf	___awdiv@dividend
 12619  0693  3195  25C4  3184   	fcall	___awdiv
 12620  0696  0020               	movlb	0	; select bank0
 12621  0697  0827               	movf	?___awdiv+1,w
 12622  0698  00B0               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12623  0699  0826               	movf	?___awdiv,w
 12624  069A  00AF               	movwf	PWM6_LoadDutyValue@dutyValue
 12625  069B  3191  2189         	fcall	_PWM6_LoadDutyValue
 12626  069D  0008               	return
 12627  069E                     __end_of_Handler_I2c:	
 12628                           
 12629                           	psect	text46
 12630  1744                     __ptext46:	
 12631 ;; *************** function _memset *****************
 12632 ;; Defined at:
 12633 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
 12634 ;; Parameters:    Size  Location     Type
 12635 ;;  dest            2    0[BANK0 ] PTR void 
 12636 ;;		 -> Handler_I2c@ReadBuffer(2), Handler_Uart@rcv_Buff(64), 
 12637 ;;  c               2    2[BANK0 ] int 
 12638 ;;  n               2    4[BANK0 ] unsigned int 
 12639 ;; Auto vars:     Size  Location     Type
 12640 ;;  s               2   12[BANK0 ] PTR unsigned char 
 12641 ;;		 -> Handler_I2c@ReadBuffer(2), Handler_Uart@rcv_Buff(64), 
 12642 ;;  k               2   10[BANK0 ] unsigned int 
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  2    0[BANK0 ] PTR void 
 12645 ;; Registers used:
 12646 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12652 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;Total ram usage:       14 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; Hardware stack levels required when called:    4
 12659 ;; This function calls:
 12660 ;;		Nothing
 12661 ;; This function is called by:
 12662 ;;		_Handler_Uart
 12663 ;;		_Handler_I2c
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           
 12668                           ;psect for function _memset
 12669  1744                     _memset:	
 12670                           
 12671                           ;incstack = 0
 12672                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12673  1744  0020               	movlb	0	; select bank0
 12674  1745  0821               	movf	memset@dest+1,w
 12675  1746  00AD               	movwf	memset@s+1
 12676  1747  0820               	movf	memset@dest,w
 12677  1748  00AC               	movwf	memset@s
 12678  1749  0824               	movf	memset@n,w
 12679  174A  0425               	iorwf	memset@n+1,w
 12680  174B  1903               	btfsc	3,2
 12681  174C  0008               	return
 12682  174D  082C               	movf	memset@s,w
 12683  174E  0086               	movwf	6
 12684  174F  082D               	movf	memset@s+1,w
 12685  1750  0087               	movwf	7
 12686  1751  0822               	movf	memset@c,w
 12687  1752  0081               	movwf	1
 12688  1753  0824               	movf	memset@n,w
 12689  1754  072C               	addwf	memset@s,w
 12690  1755  00A6               	movwf	??_memset
 12691  1756  0825               	movf	memset@n+1,w
 12692  1757  3D2D               	addwfc	memset@s+1,w
 12693  1758  00A7               	movwf	??_memset+1
 12694  1759  0826               	movf	??_memset,w
 12695  175A  3EFF               	addlw	255
 12696  175B  00A8               	movwf	??_memset+2
 12697  175C  30FF               	movlw	255
 12698  175D  3D27               	addwfc	??_memset+1,w
 12699  175E  00A9               	movwf	??_memset+3
 12700  175F  0828               	movf	??_memset+2,w
 12701  1760  0086               	movwf	6
 12702  1761  0829               	movf	??_memset+3,w
 12703  1762  0087               	movwf	7
 12704  1763  0822               	movf	memset@c,w
 12705  1764  0081               	movwf	1
 12706  1765  3000               	movlw	0
 12707  1766  0225               	subwf	memset@n+1,w
 12708  1767  3003               	movlw	3
 12709  1768  1903               	skipnz
 12710  1769  0224               	subwf	memset@n,w
 12711  176A  1C03               	btfss	3,0
 12712  176B  0008               	return
 12713  176C  082C               	movf	memset@s,w
 12714  176D  3E01               	addlw	1
 12715  176E  00A6               	movwf	??_memset
 12716  176F  3000               	movlw	0
 12717  1770  3D2D               	addwfc	memset@s+1,w
 12718  1771  00A7               	movwf	??_memset+1
 12719  1772  0826               	movf	??_memset,w
 12720  1773  0086               	movwf	6
 12721  1774  0827               	movf	??_memset+1,w
 12722  1775  0087               	movwf	7
 12723  1776  0822               	movf	memset@c,w
 12724  1777  0081               	movwf	1
 12725  1778  082C               	movf	memset@s,w
 12726  1779  3E02               	addlw	2
 12727  177A  00A6               	movwf	??_memset
 12728  177B  3000               	movlw	0
 12729  177C  3D2D               	addwfc	memset@s+1,w
 12730  177D  00A7               	movwf	??_memset+1
 12731  177E  0826               	movf	??_memset,w
 12732  177F  0086               	movwf	6
 12733  1780  0827               	movf	??_memset+1,w
 12734  1781  0087               	movwf	7
 12735  1782  0822               	movf	memset@c,w
 12736  1783  0081               	movwf	1
 12737  1784  0824               	movf	memset@n,w
 12738  1785  072C               	addwf	memset@s,w
 12739  1786  00A6               	movwf	??_memset
 12740  1787  0825               	movf	memset@n+1,w
 12741  1788  3D2D               	addwfc	memset@s+1,w
 12742  1789  00A7               	movwf	??_memset+1
 12743  178A  0826               	movf	??_memset,w
 12744  178B  3EFE               	addlw	254
 12745  178C  00A8               	movwf	??_memset+2
 12746  178D  30FF               	movlw	255
 12747  178E  3D27               	addwfc	??_memset+1,w
 12748  178F  00A9               	movwf	??_memset+3
 12749  1790  0828               	movf	??_memset+2,w
 12750  1791  0086               	movwf	6
 12751  1792  0829               	movf	??_memset+3,w
 12752  1793  0087               	movwf	7
 12753  1794  0822               	movf	memset@c,w
 12754  1795  0081               	movwf	1
 12755  1796  0824               	movf	memset@n,w
 12756  1797  072C               	addwf	memset@s,w
 12757  1798  00A6               	movwf	??_memset
 12758  1799  0825               	movf	memset@n+1,w
 12759  179A  3D2D               	addwfc	memset@s+1,w
 12760  179B  00A7               	movwf	??_memset+1
 12761  179C  0826               	movf	??_memset,w
 12762  179D  3EFD               	addlw	253
 12763  179E  00A8               	movwf	??_memset+2
 12764  179F  30FF               	movlw	255
 12765  17A0  3D27               	addwfc	??_memset+1,w
 12766  17A1  00A9               	movwf	??_memset+3
 12767  17A2  0828               	movf	??_memset+2,w
 12768  17A3  0086               	movwf	6
 12769  17A4  0829               	movf	??_memset+3,w
 12770  17A5  0087               	movwf	7
 12771  17A6  0822               	movf	memset@c,w
 12772  17A7  0081               	movwf	1
 12773  17A8  3000               	movlw	0
 12774  17A9  0225               	subwf	memset@n+1,w
 12775  17AA  3007               	movlw	7
 12776  17AB  1903               	skipnz
 12777  17AC  0224               	subwf	memset@n,w
 12778  17AD  1C03               	btfss	3,0
 12779  17AE  0008               	return
 12780  17AF  082C               	movf	memset@s,w
 12781  17B0  3E03               	addlw	3
 12782  17B1  00A6               	movwf	??_memset
 12783  17B2  3000               	movlw	0
 12784  17B3  3D2D               	addwfc	memset@s+1,w
 12785  17B4  00A7               	movwf	??_memset+1
 12786  17B5  0826               	movf	??_memset,w
 12787  17B6  0086               	movwf	6
 12788  17B7  0827               	movf	??_memset+1,w
 12789  17B8  0087               	movwf	7
 12790  17B9  0822               	movf	memset@c,w
 12791  17BA  0081               	movwf	1
 12792  17BB  0824               	movf	memset@n,w
 12793  17BC  072C               	addwf	memset@s,w
 12794  17BD  00A6               	movwf	??_memset
 12795  17BE  0825               	movf	memset@n+1,w
 12796  17BF  3D2D               	addwfc	memset@s+1,w
 12797  17C0  00A7               	movwf	??_memset+1
 12798  17C1  0826               	movf	??_memset,w
 12799  17C2  3EFC               	addlw	252
 12800  17C3  00A8               	movwf	??_memset+2
 12801  17C4  30FF               	movlw	255
 12802  17C5  3D27               	addwfc	??_memset+1,w
 12803  17C6  00A9               	movwf	??_memset+3
 12804  17C7  0828               	movf	??_memset+2,w
 12805  17C8  0086               	movwf	6
 12806  17C9  0829               	movf	??_memset+3,w
 12807  17CA  0087               	movwf	7
 12808  17CB  0822               	movf	memset@c,w
 12809  17CC  0081               	movwf	1
 12810  17CD  3000               	movlw	0
 12811  17CE  0225               	subwf	memset@n+1,w
 12812  17CF  3009               	movlw	9
 12813  17D0  1903               	skipnz
 12814  17D1  0224               	subwf	memset@n,w
 12815  17D2  1C03               	btfss	3,0
 12816  17D3  0008               	return
 12817  17D4  092C               	comf	memset@s,w
 12818  17D5  00A6               	movwf	??_memset
 12819  17D6  092D               	comf	memset@s+1,w
 12820  17D7  00A7               	movwf	??_memset+1
 12821  17D8  0AA6               	incf	??_memset,f
 12822  17D9  1903               	skipnz
 12823  17DA  0AA7               	incf	??_memset+1,f
 12824  17DB  3003               	movlw	3
 12825  17DC  0526               	andwf	??_memset,w
 12826  17DD  00AA               	movwf	memset@k
 12827  17DE  3000               	movlw	0
 12828  17DF  0527               	andwf	??_memset+1,w
 12829  17E0  00AB               	movwf	memset@k+1
 12830  17E1  082A               	movf	memset@k,w
 12831  17E2  07AC               	addwf	memset@s,f
 12832  17E3  082B               	movf	memset@k+1,w
 12833  17E4  3DAD               	addwfc	memset@s+1,f
 12834  17E5  082A               	movf	memset@k,w
 12835  17E6  02A4               	subwf	memset@n,f
 12836  17E7  082B               	movf	memset@k+1,w
 12837  17E8  3BA5               	subwfb	memset@n+1,f
 12838  17E9  30FC               	movlw	252
 12839  17EA  05A4               	andwf	memset@n,f
 12840  17EB  30FF               	movlw	255
 12841  17EC  05A5               	andwf	memset@n+1,f
 12842  17ED                     l4445:	
 12843  17ED  0824               	movf	memset@n,w
 12844  17EE  0425               	iorwf	memset@n+1,w
 12845  17EF  1903               	btfsc	3,2
 12846  17F0  0008               	return
 12847  17F1  082C               	movf	memset@s,w
 12848  17F2  0086               	movwf	6
 12849  17F3  082D               	movf	memset@s+1,w
 12850  17F4  0087               	movwf	7
 12851  17F5  0822               	movf	memset@c,w
 12852  17F6  0081               	movwf	1
 12853  17F7  3001               	movlw	1
 12854  17F8  02A4               	subwf	memset@n,f
 12855  17F9  3000               	movlw	0
 12856  17FA  3BA5               	subwfb	memset@n+1,f
 12857  17FB  3001               	movlw	1
 12858  17FC  07AC               	addwf	memset@s,f
 12859  17FD  3000               	movlw	0
 12860  17FE  3DAD               	addwfc	memset@s+1,f
 12861  17FF  2FED               	goto	l4445
 12862  1800                     __end_of_memset:	
 12863                           
 12864                           	psect	text47
 12865  11EF                     __ptext47:	
 12866 ;; *************** function ___wmul *****************
 12867 ;; Defined at:
 12868 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12871 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;  product         2    4[BANK0 ] unsigned int 
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  2    0[BANK0 ] unsigned int 
 12876 ;; Registers used:
 12877 ;;		wreg, status,2, status,0
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;Total ram usage:        6 bytes
 12888 ;; Hardware stack levels used:    1
 12889 ;; Hardware stack levels required when called:    4
 12890 ;; This function calls:
 12891 ;;		Nothing
 12892 ;; This function is called by:
 12893 ;;		_UartResponse_WriteCmd
 12894 ;;		_Handler_I2c
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           
 12899                           ;psect for function ___wmul
 12900  11EF                     ___wmul:	
 12901                           
 12902                           ;incstack = 0
 12903                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12904  11EF  0020               	movlb	0	; select bank0
 12905  11F0  01A4               	clrf	___wmul@product
 12906  11F1  01A5               	clrf	___wmul@product+1
 12907  11F2                     l5499:	
 12908  11F2  1C20               	btfss	___wmul@multiplier,0
 12909  11F3  29F8               	goto	l1171
 12910  11F4  0822               	movf	___wmul@multiplicand,w
 12911  11F5  07A4               	addwf	___wmul@product,f
 12912  11F6  0823               	movf	___wmul@multiplicand+1,w
 12913  11F7  3DA5               	addwfc	___wmul@product+1,f
 12914  11F8                     l1171:	
 12915  11F8  3001               	movlw	1
 12916  11F9                     u4375:	
 12917  11F9  35A2               	lslf	___wmul@multiplicand,f
 12918  11FA  0DA3               	rlf	___wmul@multiplicand+1,f
 12919  11FB  0B89               	decfsz	9,f
 12920  11FC  29F9               	goto	u4375
 12921  11FD  3001               	movlw	1
 12922  11FE                     u4385:	
 12923  11FE  36A1               	lsrf	___wmul@multiplier+1,f
 12924  11FF  0CA0               	rrf	___wmul@multiplier,f
 12925  1200  0B89               	decfsz	9,f
 12926  1201  29FE               	goto	u4385
 12927  1202  0820               	movf	___wmul@multiplier,w
 12928  1203  0421               	iorwf	___wmul@multiplier+1,w
 12929  1204  1D03               	btfss	3,2
 12930  1205  29F2               	goto	l5499
 12931  1206  0825               	movf	___wmul@product+1,w
 12932  1207  00A1               	movwf	?___wmul+1
 12933  1208  0824               	movf	___wmul@product,w
 12934  1209  00A0               	movwf	?___wmul
 12935  120A  0008               	return
 12936  120B                     __end_of___wmul:	
 12937                           
 12938                           	psect	text48
 12939  1360                     __ptext48:	
 12940 ;; *************** function ___lmul *****************
 12941 ;; Defined at:
 12942 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;  multiplier      4    0[BANK0 ] unsigned long 
 12945 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 12946 ;; Auto vars:     Size  Location     Type
 12947 ;;  product         4    8[BANK0 ] unsigned long 
 12948 ;; Return value:  Size  Location     Type
 12949 ;;                  4    0[BANK0 ] unsigned long 
 12950 ;; Registers used:
 12951 ;;		wreg, status,2, status,0
 12952 ;; Tracked objects:
 12953 ;;		On entry : 0/0
 12954 ;;		On exit  : 0/0
 12955 ;;		Unchanged: 0/0
 12956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;Total ram usage:       12 bytes
 12962 ;; Hardware stack levels used:    1
 12963 ;; Hardware stack levels required when called:    4
 12964 ;; This function calls:
 12965 ;;		Nothing
 12966 ;; This function is called by:
 12967 ;;		_Handler_I2c
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           
 12972                           ;psect for function ___lmul
 12973  1360                     ___lmul:	
 12974                           
 12975                           ;incstack = 0
 12976                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12977  1360  3000               	movlw	0
 12978  1361  0020               	movlb	0	; select bank0
 12979  1362  00AB               	movwf	___lmul@product+3
 12980  1363  3000               	movlw	0
 12981  1364  00AA               	movwf	___lmul@product+2
 12982  1365  3000               	movlw	0
 12983  1366  00A9               	movwf	___lmul@product+1
 12984  1367  3000               	movlw	0
 12985  1368  00A8               	movwf	___lmul@product
 12986  1369                     l5765:	
 12987  1369  1C20               	btfss	___lmul@multiplier,0
 12988  136A  2B73               	goto	l5769
 12989  136B  0824               	movf	___lmul@multiplicand,w
 12990  136C  07A8               	addwf	___lmul@product,f
 12991  136D  0825               	movf	___lmul@multiplicand+1,w
 12992  136E  3DA9               	addwfc	___lmul@product+1,f
 12993  136F  0826               	movf	___lmul@multiplicand+2,w
 12994  1370  3DAA               	addwfc	___lmul@product+2,f
 12995  1371  0827               	movf	___lmul@multiplicand+3,w
 12996  1372  3DAB               	addwfc	___lmul@product+3,f
 12997  1373                     l5769:	
 12998  1373  3001               	movlw	1
 12999  1374                     u4455:	
 13000  1374  35A4               	lslf	___lmul@multiplicand,f
 13001  1375  0DA5               	rlf	___lmul@multiplicand+1,f
 13002  1376  0DA6               	rlf	___lmul@multiplicand+2,f
 13003  1377  0DA7               	rlf	___lmul@multiplicand+3,f
 13004  1378  0B89               	decfsz	9,f
 13005  1379  2B74               	goto	u4455
 13006  137A  3001               	movlw	1
 13007  137B                     u4465:	
 13008  137B  36A3               	lsrf	___lmul@multiplier+3,f
 13009  137C  0CA2               	rrf	___lmul@multiplier+2,f
 13010  137D  0CA1               	rrf	___lmul@multiplier+1,f
 13011  137E  0CA0               	rrf	___lmul@multiplier,f
 13012  137F  0B89               	decfsz	9,f
 13013  1380  2B7B               	goto	u4465
 13014  1381  0823               	movf	___lmul@multiplier+3,w
 13015  1382  0422               	iorwf	___lmul@multiplier+2,w
 13016  1383  0421               	iorwf	___lmul@multiplier+1,w
 13017  1384  0420               	iorwf	___lmul@multiplier,w
 13018  1385  1D03               	skipz
 13019  1386  2B69               	goto	l5765
 13020  1387  082B               	movf	___lmul@product+3,w
 13021  1388  00A3               	movwf	?___lmul+3
 13022  1389  082A               	movf	___lmul@product+2,w
 13023  138A  00A2               	movwf	?___lmul+2
 13024  138B  0829               	movf	___lmul@product+1,w
 13025  138C  00A1               	movwf	?___lmul+1
 13026  138D  0828               	movf	___lmul@product,w
 13027  138E  00A0               	movwf	?___lmul
 13028  138F  0008               	return
 13029  1390                     __end_of___lmul:	
 13030                           
 13031                           	psect	text49
 13032  15C4                     __ptext49:	
 13033 ;; *************** function ___awdiv *****************
 13034 ;; Defined at:
 13035 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  divisor         2    6[BANK0 ] int 
 13038 ;;  dividend        2    8[BANK0 ] int 
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;  quotient        2   13[BANK0 ] int 
 13041 ;;  sign            1   12[BANK0 ] unsigned char 
 13042 ;;  counter         1   11[BANK0 ] unsigned char 
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  2    6[BANK0 ] int 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;Total ram usage:        9 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    4
 13059 ;; This function calls:
 13060 ;;		Nothing
 13061 ;; This function is called by:
 13062 ;;		_UartResponse_WriteCmd
 13063 ;;		_Handler_I2c
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           
 13068                           ;psect for function ___awdiv
 13069  15C4                     ___awdiv:	
 13070                           
 13071                           ;incstack = 0
 13072                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13073  15C4  0020               	movlb	0	; select bank0
 13074  15C5  01AC               	clrf	___awdiv@sign
 13075  15C6  1FA7               	btfss	___awdiv@divisor+1,7
 13076  15C7  2DCF               	goto	l4069
 13077  15C8  09A6               	comf	___awdiv@divisor,f
 13078  15C9  09A7               	comf	___awdiv@divisor+1,f
 13079  15CA  0AA6               	incf	___awdiv@divisor,f
 13080  15CB  1903               	skipnz
 13081  15CC  0AA7               	incf	___awdiv@divisor+1,f
 13082  15CD  01AC               	clrf	___awdiv@sign
 13083  15CE  0AAC               	incf	___awdiv@sign,f
 13084  15CF                     l4069:	
 13085  15CF  1FA9               	btfss	___awdiv@dividend+1,7
 13086  15D0  2DDA               	goto	l4075
 13087  15D1  09A8               	comf	___awdiv@dividend,f
 13088  15D2  09A9               	comf	___awdiv@dividend+1,f
 13089  15D3  0AA8               	incf	___awdiv@dividend,f
 13090  15D4  1903               	skipnz
 13091  15D5  0AA9               	incf	___awdiv@dividend+1,f
 13092  15D6  3001               	movlw	1
 13093  15D7  00AA               	movwf	??___awdiv
 13094  15D8  082A               	movf	??___awdiv,w
 13095  15D9  06AC               	xorwf	___awdiv@sign,f
 13096  15DA                     l4075:	
 13097  15DA  01AD               	clrf	___awdiv@quotient
 13098  15DB  01AE               	clrf	___awdiv@quotient+1
 13099  15DC  0826               	movf	___awdiv@divisor,w
 13100  15DD  0427               	iorwf	___awdiv@divisor+1,w
 13101  15DE  1903               	btfsc	3,2
 13102  15DF  2E09               	goto	l4097
 13103  15E0  01AB               	clrf	___awdiv@counter
 13104  15E1  0AAB               	incf	___awdiv@counter,f
 13105  15E2                     l4085:	
 13106  15E2  1BA7               	btfsc	___awdiv@divisor+1,7
 13107  15E3  2DEE               	goto	l4087
 13108  15E4  3001               	movlw	1
 13109  15E5                     u2795:	
 13110  15E5  35A6               	lslf	___awdiv@divisor,f
 13111  15E6  0DA7               	rlf	___awdiv@divisor+1,f
 13112  15E7  0B89               	decfsz	9,f
 13113  15E8  2DE5               	goto	u2795
 13114  15E9  3001               	movlw	1
 13115  15EA  00AA               	movwf	??___awdiv
 13116  15EB  082A               	movf	??___awdiv,w
 13117  15EC  07AB               	addwf	___awdiv@counter,f
 13118  15ED  2DE2               	goto	l4085
 13119  15EE                     l4087:	
 13120  15EE  3001               	movlw	1
 13121  15EF                     u2815:	
 13122  15EF  35AD               	lslf	___awdiv@quotient,f
 13123  15F0  0DAE               	rlf	___awdiv@quotient+1,f
 13124  15F1  0B89               	decfsz	9,f
 13125  15F2  2DEF               	goto	u2815
 13126  15F3  0827               	movf	___awdiv@divisor+1,w
 13127  15F4  0229               	subwf	___awdiv@dividend+1,w
 13128  15F5  1D03               	skipz
 13129  15F6  2DF9               	goto	u2825
 13130  15F7  0826               	movf	___awdiv@divisor,w
 13131  15F8  0228               	subwf	___awdiv@dividend,w
 13132  15F9                     u2825:	
 13133  15F9  1C03               	skipc
 13134  15FA  2E00               	goto	l4093
 13135  15FB  0826               	movf	___awdiv@divisor,w
 13136  15FC  02A8               	subwf	___awdiv@dividend,f
 13137  15FD  0827               	movf	___awdiv@divisor+1,w
 13138  15FE  3BA9               	subwfb	___awdiv@dividend+1,f
 13139  15FF  142D               	bsf	___awdiv@quotient,0
 13140  1600                     l4093:	
 13141  1600  3001               	movlw	1
 13142  1601                     u2835:	
 13143  1601  36A7               	lsrf	___awdiv@divisor+1,f
 13144  1602  0CA6               	rrf	___awdiv@divisor,f
 13145  1603  0B89               	decfsz	9,f
 13146  1604  2E01               	goto	u2835
 13147  1605  3001               	movlw	1
 13148  1606  02AB               	subwf	___awdiv@counter,f
 13149  1607  1D03               	btfss	3,2
 13150  1608  2DEE               	goto	l4087
 13151  1609                     l4097:	
 13152  1609  082C               	movf	___awdiv@sign,w
 13153  160A  1903               	btfsc	3,2
 13154  160B  2E11               	goto	l4101
 13155  160C  09AD               	comf	___awdiv@quotient,f
 13156  160D  09AE               	comf	___awdiv@quotient+1,f
 13157  160E  0AAD               	incf	___awdiv@quotient,f
 13158  160F  1903               	skipnz
 13159  1610  0AAE               	incf	___awdiv@quotient+1,f
 13160  1611                     l4101:	
 13161  1611  082E               	movf	___awdiv@quotient+1,w
 13162  1612  00A7               	movwf	?___awdiv+1
 13163  1613  082D               	movf	___awdiv@quotient,w
 13164  1614  00A6               	movwf	?___awdiv
 13165  1615  0008               	return
 13166  1616                     __end_of___awdiv:	
 13167                           
 13168                           	psect	text50
 13169  1616                     __ptext50:	
 13170 ;; *************** function ___aldiv *****************
 13171 ;; Defined at:
 13172 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  divisor         4    0[BANK0 ] long 
 13175 ;;  dividend        4    4[BANK0 ] long 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  quotient        4   11[BANK0 ] long 
 13178 ;;  sign            1   10[BANK0 ] unsigned char 
 13179 ;;  counter         1    9[BANK0 ] unsigned char 
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  4    0[BANK0 ] long 
 13182 ;; Registers used:
 13183 ;;		wreg, status,2, status,0
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13189 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;Total ram usage:       15 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; Hardware stack levels required when called:    4
 13196 ;; This function calls:
 13197 ;;		Nothing
 13198 ;; This function is called by:
 13199 ;;		_Handler_I2c
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           
 13204                           ;psect for function ___aldiv
 13205  1616                     ___aldiv:	
 13206                           
 13207                           ;incstack = 0
 13208                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 13209  1616  0020               	movlb	0	; select bank0
 13210  1617  01AA               	clrf	___aldiv@sign
 13211  1618  1FA3               	btfss	___aldiv@divisor+3,7
 13212  1619  2E27               	goto	l1236
 13213  161A  09A0               	comf	___aldiv@divisor,f
 13214  161B  09A1               	comf	___aldiv@divisor+1,f
 13215  161C  09A2               	comf	___aldiv@divisor+2,f
 13216  161D  09A3               	comf	___aldiv@divisor+3,f
 13217  161E  0AA0               	incf	___aldiv@divisor,f
 13218  161F  1903               	skipnz
 13219  1620  0AA1               	incf	___aldiv@divisor+1,f
 13220  1621  1903               	skipnz
 13221  1622  0AA2               	incf	___aldiv@divisor+2,f
 13222  1623  1903               	skipnz
 13223  1624  0AA3               	incf	___aldiv@divisor+3,f
 13224  1625  01AA               	clrf	___aldiv@sign
 13225  1626  0AAA               	incf	___aldiv@sign,f
 13226  1627                     l1236:	
 13227  1627  1FA7               	btfss	___aldiv@dividend+3,7
 13228  1628  2E38               	goto	l4471
 13229  1629  09A4               	comf	___aldiv@dividend,f
 13230  162A  09A5               	comf	___aldiv@dividend+1,f
 13231  162B  09A6               	comf	___aldiv@dividend+2,f
 13232  162C  09A7               	comf	___aldiv@dividend+3,f
 13233  162D  0AA4               	incf	___aldiv@dividend,f
 13234  162E  1903               	skipnz
 13235  162F  0AA5               	incf	___aldiv@dividend+1,f
 13236  1630  1903               	skipnz
 13237  1631  0AA6               	incf	___aldiv@dividend+2,f
 13238  1632  1903               	skipnz
 13239  1633  0AA7               	incf	___aldiv@dividend+3,f
 13240  1634  3001               	movlw	1
 13241  1635  00A8               	movwf	??___aldiv
 13242  1636  0828               	movf	??___aldiv,w
 13243  1637  06AA               	xorwf	___aldiv@sign,f
 13244  1638                     l4471:	
 13245  1638  3000               	movlw	0
 13246  1639  00AE               	movwf	___aldiv@quotient+3
 13247  163A  3000               	movlw	0
 13248  163B  00AD               	movwf	___aldiv@quotient+2
 13249  163C  3000               	movlw	0
 13250  163D  00AC               	movwf	___aldiv@quotient+1
 13251  163E  3000               	movlw	0
 13252  163F  00AB               	movwf	___aldiv@quotient
 13253  1640  0823               	movf	___aldiv@divisor+3,w
 13254  1641  0422               	iorwf	___aldiv@divisor+2,w
 13255  1642  0421               	iorwf	___aldiv@divisor+1,w
 13256  1643  0420               	iorwf	___aldiv@divisor,w
 13257  1644  1903               	skipnz
 13258  1645  2E81               	goto	l4493
 13259  1646  01A9               	clrf	___aldiv@counter
 13260  1647  0AA9               	incf	___aldiv@counter,f
 13261  1648                     l4479:	
 13262  1648  1BA3               	btfsc	___aldiv@divisor+3,7
 13263  1649  2E56               	goto	l4481
 13264  164A  3001               	movlw	1
 13265  164B                     u3075:	
 13266  164B  35A0               	lslf	___aldiv@divisor,f
 13267  164C  0DA1               	rlf	___aldiv@divisor+1,f
 13268  164D  0DA2               	rlf	___aldiv@divisor+2,f
 13269  164E  0DA3               	rlf	___aldiv@divisor+3,f
 13270  164F  0B89               	decfsz	9,f
 13271  1650  2E4B               	goto	u3075
 13272  1651  3001               	movlw	1
 13273  1652  00A8               	movwf	??___aldiv
 13274  1653  0828               	movf	??___aldiv,w
 13275  1654  07A9               	addwf	___aldiv@counter,f
 13276  1655  2E48               	goto	l4479
 13277  1656                     l4481:	
 13278  1656  3001               	movlw	1
 13279  1657                     u3095:	
 13280  1657  35AB               	lslf	___aldiv@quotient,f
 13281  1658  0DAC               	rlf	___aldiv@quotient+1,f
 13282  1659  0DAD               	rlf	___aldiv@quotient+2,f
 13283  165A  0DAE               	rlf	___aldiv@quotient+3,f
 13284  165B  0B89               	decfsz	9,f
 13285  165C  2E57               	goto	u3095
 13286  165D  0823               	movf	___aldiv@divisor+3,w
 13287  165E  0227               	subwf	___aldiv@dividend+3,w
 13288  165F  1D03               	skipz
 13289  1660  2E6B               	goto	u3105
 13290  1661  0822               	movf	___aldiv@divisor+2,w
 13291  1662  0226               	subwf	___aldiv@dividend+2,w
 13292  1663  1D03               	skipz
 13293  1664  2E6B               	goto	u3105
 13294  1665  0821               	movf	___aldiv@divisor+1,w
 13295  1666  0225               	subwf	___aldiv@dividend+1,w
 13296  1667  1D03               	skipz
 13297  1668  2E6B               	goto	u3105
 13298  1669  0820               	movf	___aldiv@divisor,w
 13299  166A  0224               	subwf	___aldiv@dividend,w
 13300  166B                     u3105:	
 13301  166B  1C03               	skipc
 13302  166C  2E76               	goto	l4489
 13303  166D  0820               	movf	___aldiv@divisor,w
 13304  166E  02A4               	subwf	___aldiv@dividend,f
 13305  166F  0821               	movf	___aldiv@divisor+1,w
 13306  1670  3BA5               	subwfb	___aldiv@dividend+1,f
 13307  1671  0822               	movf	___aldiv@divisor+2,w
 13308  1672  3BA6               	subwfb	___aldiv@dividend+2,f
 13309  1673  0823               	movf	___aldiv@divisor+3,w
 13310  1674  3BA7               	subwfb	___aldiv@dividend+3,f
 13311  1675  142B               	bsf	___aldiv@quotient,0
 13312  1676                     l4489:	
 13313  1676  3001               	movlw	1
 13314  1677                     u3115:	
 13315  1677  36A3               	lsrf	___aldiv@divisor+3,f
 13316  1678  0CA2               	rrf	___aldiv@divisor+2,f
 13317  1679  0CA1               	rrf	___aldiv@divisor+1,f
 13318  167A  0CA0               	rrf	___aldiv@divisor,f
 13319  167B  0B89               	decfsz	9,f
 13320  167C  2E77               	goto	u3115
 13321  167D  3001               	movlw	1
 13322  167E  02A9               	subwf	___aldiv@counter,f
 13323  167F  1D03               	btfss	3,2
 13324  1680  2E56               	goto	l4481
 13325  1681                     l4493:	
 13326  1681  082A               	movf	___aldiv@sign,w
 13327  1682  1903               	btfsc	3,2
 13328  1683  2E8F               	goto	l4497
 13329  1684  09AB               	comf	___aldiv@quotient,f
 13330  1685  09AC               	comf	___aldiv@quotient+1,f
 13331  1686  09AD               	comf	___aldiv@quotient+2,f
 13332  1687  09AE               	comf	___aldiv@quotient+3,f
 13333  1688  0AAB               	incf	___aldiv@quotient,f
 13334  1689  1903               	skipnz
 13335  168A  0AAC               	incf	___aldiv@quotient+1,f
 13336  168B  1903               	skipnz
 13337  168C  0AAD               	incf	___aldiv@quotient+2,f
 13338  168D  1903               	skipnz
 13339  168E  0AAE               	incf	___aldiv@quotient+3,f
 13340  168F                     l4497:	
 13341  168F  082E               	movf	___aldiv@quotient+3,w
 13342  1690  00A3               	movwf	?___aldiv+3
 13343  1691  082D               	movf	___aldiv@quotient+2,w
 13344  1692  00A2               	movwf	?___aldiv+2
 13345  1693  082C               	movf	___aldiv@quotient+1,w
 13346  1694  00A1               	movwf	?___aldiv+1
 13347  1695  082B               	movf	___aldiv@quotient,w
 13348  1696  00A0               	movwf	?___aldiv
 13349  1697  0008               	return
 13350  1698                     __end_of___aldiv:	
 13351                           
 13352                           	psect	text51
 13353  1189                     __ptext51:	
 13354 ;; *************** function _PWM6_LoadDutyValue *****************
 13355 ;; Defined at:
 13356 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;  dutyValue       2   15[BANK0 ] unsigned short 
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;		None
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  1    wreg      void 
 13363 ;; Registers used:
 13364 ;;		wreg, status,2, status,0
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;Total ram usage:        4 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    4
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_UartResponse_WriteCmd
 13381 ;;		_Handler_I2c
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           
 13386                           ;psect for function _PWM6_LoadDutyValue
 13387  1189                     _PWM6_LoadDutyValue:	
 13388                           
 13389                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 13390                           
 13391                           ;incstack = 0
 13392                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13393  1189  0020               	movlb	0	; select bank0
 13394  118A  0830               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 13395  118B  00B2               	movwf	??_PWM6_LoadDutyValue+1
 13396  118C  082F               	movf	PWM6_LoadDutyValue@dutyValue,w
 13397  118D  00B1               	movwf	??_PWM6_LoadDutyValue
 13398  118E  36B2               	lsrf	??_PWM6_LoadDutyValue+1,f
 13399  118F  0CB1               	rrf	??_PWM6_LoadDutyValue,f
 13400  1190  36B2               	lsrf	??_PWM6_LoadDutyValue+1,f
 13401  1191  0CB1               	rrf	??_PWM6_LoadDutyValue,f
 13402  1192  0831               	movf	??_PWM6_LoadDutyValue,w
 13403  1193  002C               	movlb	12	; select bank12
 13404  1194  009B               	movwf	27	;volatile
 13405                           
 13406                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 13407  1195  0020               	movlb	0	; select bank0
 13408  1196  082F               	movf	PWM6_LoadDutyValue@dutyValue,w
 13409  1197  3903               	andlw	3
 13410  1198  00B1               	movwf	??_PWM6_LoadDutyValue
 13411  1199  3005               	movlw	5
 13412  119A                     u2605:	
 13413  119A  35B1               	lslf	??_PWM6_LoadDutyValue,f
 13414  119B  3EFF               	addlw	-1
 13415  119C  1D03               	skipz
 13416  119D  299A               	goto	u2605
 13417  119E  3531               	lslf	??_PWM6_LoadDutyValue,w
 13418  119F  002C               	movlb	12	; select bank12
 13419  11A0  009A               	movwf	26	;volatile
 13420  11A1  0008               	return
 13421  11A2                     __end_of_PWM6_LoadDutyValue:	
 13422                           
 13423                           	psect	text52
 13424  1170                     __ptext52:	
 13425 ;; *************** function _PWM5_LoadDutyValue *****************
 13426 ;; Defined at:
 13427 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;  dutyValue       2   15[BANK0 ] unsigned short 
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;		None
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  1    wreg      void 
 13434 ;; Registers used:
 13435 ;;		wreg, status,2, status,0
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;Total ram usage:        4 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:    4
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_UartResponse_WriteCmd
 13452 ;;		_Handler_I2c
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           
 13457                           ;psect for function _PWM5_LoadDutyValue
 13458  1170                     _PWM5_LoadDutyValue:	
 13459                           
 13460                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 13461                           
 13462                           ;incstack = 0
 13463                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 13464  1170  0020               	movlb	0	; select bank0
 13465  1171  0830               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 13466  1172  00B2               	movwf	??_PWM5_LoadDutyValue+1
 13467  1173  082F               	movf	PWM5_LoadDutyValue@dutyValue,w
 13468  1174  00B1               	movwf	??_PWM5_LoadDutyValue
 13469  1175  36B2               	lsrf	??_PWM5_LoadDutyValue+1,f
 13470  1176  0CB1               	rrf	??_PWM5_LoadDutyValue,f
 13471  1177  36B2               	lsrf	??_PWM5_LoadDutyValue+1,f
 13472  1178  0CB1               	rrf	??_PWM5_LoadDutyValue,f
 13473  1179  0831               	movf	??_PWM5_LoadDutyValue,w
 13474  117A  002C               	movlb	12	; select bank12
 13475  117B  0098               	movwf	24	;volatile
 13476                           
 13477                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 13478  117C  0020               	movlb	0	; select bank0
 13479  117D  082F               	movf	PWM5_LoadDutyValue@dutyValue,w
 13480  117E  3903               	andlw	3
 13481  117F  00B1               	movwf	??_PWM5_LoadDutyValue
 13482  1180  3005               	movlw	5
 13483  1181                     u2595:	
 13484  1181  35B1               	lslf	??_PWM5_LoadDutyValue,f
 13485  1182  3EFF               	addlw	-1
 13486  1183  1D03               	skipz
 13487  1184  2981               	goto	u2595
 13488  1185  3531               	lslf	??_PWM5_LoadDutyValue,w
 13489  1186  002C               	movlb	12	; select bank12
 13490  1187  0097               	movwf	23	;volatile
 13491  1188  0008               	return
 13492  1189                     __end_of_PWM5_LoadDutyValue:	
 13493                           
 13494                           	psect	text53
 13495  1529                     __ptext53:	
 13496 ;; *************** function _I2C1_RBlk *****************
 13497 ;; Defined at:
 13498 ;;		line 112 in file "main.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;  slaveDeviceA    2    8[BANK0 ] unsigned short 
 13501 ;;  wblk            1   10[BANK0 ] PTR unsigned char 
 13502 ;;		 -> Handler_I2c@Reg(1), UartResponse_ReadCmd@reg(1), 
 13503 ;;  wCount          2   11[BANK0 ] unsigned short 
 13504 ;;  pData           2   13[BANK0 ] PTR unsigned char 
 13505 ;;		 -> Handler_I2c@ReadBuffer(2), RAM(4096), 
 13506 ;;  rCount          2   15[BANK0 ] unsigned short 
 13507 ;; Auto vars:     Size  Location     Type
 13508 ;;  status          1   20[BANK0 ] enum E6646
 13509 ;;  timeOut         1   19[BANK0 ] unsigned char 
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  1    wreg      void 
 13512 ;; Registers used:
 13513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13514 ;; Tracked objects:
 13515 ;;		On entry : 0/0
 13516 ;;		On exit  : 0/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13519 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13522 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13523 ;;Total ram usage:       13 bytes
 13524 ;; Hardware stack levels used:    1
 13525 ;; Hardware stack levels required when called:    6
 13526 ;; This function calls:
 13527 ;;		_I2C1_MasterReadTRBBuild
 13528 ;;		_I2C1_MasterTRBInsert
 13529 ;;		_I2C1_MasterWriteTRBBuild
 13530 ;; This function is called by:
 13531 ;;		_UartResponse_ReadCmd
 13532 ;;		_Handler_I2c
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           
 13537                           ;psect for function _I2C1_RBlk
 13538  1529                     _I2C1_RBlk:	
 13539                           
 13540                           ;main.c: 113:         uint16_t slaveDeviceAddress,;main.c: 114:         uint8_t *wblk,;m
      +                          ain.c: 115:         uint16_t wCount,;main.c: 116:         uint8_t *pData,;main.c: 117:  
      +                                 uint16_t rCount);main.c: 118: {;main.c: 119:     I2C1_MESSAGE_STATUS status;;main
      +                          .c: 120:     static I2C1_TRANSACTION_REQUEST_BLOCK readTRB[2];;main.c: 122:     uint8_t 
      +                          timeOut = 0;
 13541                           
 13542                           ;incstack = 0
 13543                           ; Regs used in _I2C1_RBlk: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13544  1529  0020               	movlb	0	; select bank0
 13545  152A  01B3               	clrf	I2C1_RBlk@timeOut
 13546                           
 13547                           ;main.c: 124:     status = I2C1_MESSAGE_PENDING;
 13548  152B  3002               	movlw	2
 13549  152C  00B1               	movwf	??_I2C1_RBlk
 13550  152D  0831               	movf	??_I2C1_RBlk,w
 13551  152E  00B4               	movwf	I2C1_RBlk@status
 13552                           
 13553                           ;main.c: 128:     I2C1_MasterWriteTRBBuild(&readTRB[0],
 13554  152F  30C6               	movlw	low I2C1_RBlk@readTRB
 13555  1530  00A0               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 13556  1531  3001               	movlw	high I2C1_RBlk@readTRB
 13557  1532  00A1               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1
 13558  1533  082A               	movf	I2C1_RBlk@wblk,w
 13559  1534  00B1               	movwf	??_I2C1_RBlk
 13560  1535  0831               	movf	??_I2C1_RBlk,w
 13561  1536  00A2               	movwf	I2C1_MasterWriteTRBBuild@pdata
 13562  1537  082B               	movf	I2C1_RBlk@wCount,w
 13563  1538  00B2               	movwf	??_I2C1_RBlk+1
 13564  1539  0832               	movf	??_I2C1_RBlk+1,w
 13565  153A  00A3               	movwf	I2C1_MasterWriteTRBBuild@length
 13566  153B  0829               	movf	I2C1_RBlk@slaveDeviceAddress+1,w
 13567  153C  00A5               	movwf	I2C1_MasterWriteTRBBuild@address+1
 13568  153D  0828               	movf	I2C1_RBlk@slaveDeviceAddress,w
 13569  153E  00A4               	movwf	I2C1_MasterWriteTRBBuild@address
 13570  153F  3192  22E8  3195   	fcall	_I2C1_MasterWriteTRBBuild
 13571                           
 13572                           ;main.c: 133:     I2C1_MasterReadTRBBuild(&readTRB[1],
 13573  1542  0020               	movlb	0	; select bank0
 13574  1543  082E               	movf	I2C1_RBlk@pData+1,w
 13575  1544  00A1               	movwf	I2C1_MasterReadTRBBuild@pdata+1
 13576  1545  082D               	movf	I2C1_RBlk@pData,w
 13577  1546  00A0               	movwf	I2C1_MasterReadTRBBuild@pdata
 13578  1547  082F               	movf	I2C1_RBlk@rCount,w
 13579  1548  00B1               	movwf	??_I2C1_RBlk
 13580  1549  0831               	movf	??_I2C1_RBlk,w
 13581  154A  00A2               	movwf	I2C1_MasterReadTRBBuild@length
 13582  154B  0829               	movf	I2C1_RBlk@slaveDeviceAddress+1,w
 13583  154C  00A4               	movwf	I2C1_MasterReadTRBBuild@address+1
 13584  154D  0828               	movf	I2C1_RBlk@slaveDeviceAddress,w
 13585  154E  00A3               	movwf	I2C1_MasterReadTRBBuild@address
 13586  154F  30CB               	movlw	(low ((I2C1_RBlk@readTRB| (0+256)+5)))& (0+255)
 13587  1550  3193  2334  3195   	fcall	_I2C1_MasterReadTRBBuild
 13588  1553                     l800:	
 13589                           ;main.c: 155:     }
 13590                           
 13591                           ;main.c: 137:     while (status != I2C1_MESSAGE_FAIL) {
 13592                           
 13593                           
 13594                           ;main.c: 137:     while (status != I2C1_MESSAGE_FAIL) {
 13595  1553  0020               	movlb	0	; select bank0
 13596  1554  0334               	decf	I2C1_RBlk@status,w
 13597  1555  1903               	btfsc	3,2
 13598  1556  0008               	return
 13599                           
 13600                           ;main.c: 139:         I2C1_MasterTRBInsert(2, readTRB, &status);
 13601  1557  30C6               	movlw	low I2C1_RBlk@readTRB
 13602  1558  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 13603  1559  3001               	movlw	high I2C1_RBlk@readTRB
 13604  155A  00A1               	movwf	I2C1_MasterTRBInsert@ptrb_list+1
 13605  155B  3034               	movlw	(low (I2C1_RBlk@status| 0))& (0+255)
 13606  155C  00B1               	movwf	??_I2C1_RBlk
 13607  155D  0831               	movf	??_I2C1_RBlk,w
 13608  155E  00A2               	movwf	I2C1_MasterTRBInsert@pflag
 13609  155F  3002               	movlw	2
 13610  1560  3188  2026  3195   	fcall	_I2C1_MasterTRBInsert
 13611  1563                     l5423:	
 13612                           ;main.c: 142:         while (status == I2C1_MESSAGE_PENDING);
 13613                           
 13614  1563  3002               	movlw	2
 13615  1564  0020               	movlb	0	; select bank0
 13616  1565  0634               	xorwf	I2C1_RBlk@status,w
 13617  1566  1903               	btfsc	3,2
 13618  1567  2D63               	goto	l5423
 13619                           
 13620                           ;main.c: 143:         if (status == I2C1_MESSAGE_COMPLETE)
 13621  1568  0834               	movf	I2C1_RBlk@status,w
 13622  1569  1903               	btfsc	3,2
 13623  156A  0008               	return
 13624                           
 13625                           ;main.c: 151:         if (timeOut == 3)
 13626  156B  3003               	movlw	3
 13627  156C  0633               	xorwf	I2C1_RBlk@timeOut,w
 13628  156D  1903               	btfsc	3,2
 13629  156E  0008               	return
 13630                           
 13631                           ;main.c: 154:             timeOut++;
 13632  156F  3001               	movlw	1
 13633  1570  00B1               	movwf	??_I2C1_RBlk
 13634  1571  0831               	movf	??_I2C1_RBlk,w
 13635  1572  07B3               	addwf	I2C1_RBlk@timeOut,f
 13636  1573  2D53               	goto	l800
 13637  1574                     __end_of_I2C1_RBlk:	
 13638                           
 13639                           	psect	text54
 13640  12E8                     __ptext54:	
 13641 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 13642 ;; Defined at:
 13643 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;  ptrb            2    0[BANK0 ] PTR struct .
 13646 ;;		 -> I2C1_WBlk@WriteTRB(5), I2C1_RBlk@readTRB(10), I2C1_MasterWrite@trBlock(5), 
 13647 ;;  pdata           1    2[BANK0 ] PTR unsigned char 
 13648 ;;		 -> Handler_I2c@Reg(1), UartResponse_WriteCmd@data(2), UartResponse_ReadCmd@reg(1), 
 13649 ;;  length          1    3[BANK0 ] unsigned char 
 13650 ;;  address         2    4[BANK0 ] unsigned short 
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;		None
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13662 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;Total ram usage:        8 bytes
 13667 ;; Hardware stack levels used:    1
 13668 ;; Hardware stack levels required when called:    4
 13669 ;; This function calls:
 13670 ;;		Nothing
 13671 ;; This function is called by:
 13672 ;;		_I2C1_RBlk
 13673 ;;		_I2C1_WBlk
 13674 ;;		_I2C1_MasterWrite
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678                           
 13679                           ;psect for function _I2C1_MasterWriteTRBBuild
 13680  12E8                     _I2C1_MasterWriteTRBBuild:	
 13681                           
 13682                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 13683                           
 13684                           ;incstack = 0
 13685                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 13686  12E8  0020               	movlb	0	; select bank0
 13687  12E9  0825               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 13688  12EA  00A7               	movwf	??_I2C1_MasterWriteTRBBuild+1
 13689  12EB  0824               	movf	I2C1_MasterWriteTRBBuild@address,w
 13690  12EC  00A6               	movwf	??_I2C1_MasterWriteTRBBuild
 13691  12ED  35A6               	lslf	??_I2C1_MasterWriteTRBBuild,f
 13692  12EE  0DA7               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 13693  12EF  0820               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13694  12F0  0086               	movwf	6
 13695  12F1  0821               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w
 13696  12F2  0087               	movwf	7
 13697  12F3  0826               	movf	??_I2C1_MasterWriteTRBBuild,w
 13698  12F4  3FC0               	movwi [0]fsr1
 13699  12F5  0827               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 13700  12F6  3FC1               	movwi [1]fsr1
 13701                           
 13702                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 13703  12F7  0820               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13704  12F8  3E02               	addlw	2
 13705  12F9  00A6               	movwf	??_I2C1_MasterWriteTRBBuild
 13706  12FA  3000               	movlw	0
 13707  12FB  3D21               	addwfc	I2C1_MasterWriteTRBBuild@ptrb+1,w
 13708  12FC  00A7               	movwf	??_I2C1_MasterWriteTRBBuild+1
 13709  12FD  0826               	movf	??_I2C1_MasterWriteTRBBuild,w
 13710  12FE  0086               	movwf	6
 13711  12FF  0827               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 13712  1300  0087               	movwf	7
 13713  1301  0823               	movf	I2C1_MasterWriteTRBBuild@length,w
 13714  1302  0081               	movwf	1
 13715                           
 13716                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 13717  1303  0820               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13718  1304  0086               	movwf	6
 13719  1305  0821               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w
 13720  1306  0087               	movwf	7
 13721  1307  3143               	addfsr 1,3
 13722  1308  0822               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 13723  1309  3FC0               	movwi [0]fsr1
 13724  130A  3000               	movlw	0
 13725  130B  3FC1               	movwi [1]fsr1
 13726  130C  0008               	return
 13727  130D                     __end_of_I2C1_MasterWriteTRBBuild:	
 13728                           
 13729                           	psect	text55
 13730  0826                     __ptext55:	
 13731 ;; *************** function _I2C1_MasterTRBInsert *****************
 13732 ;; Defined at:
 13733 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  count           1    wreg     unsigned char 
 13736 ;;  ptrb_list       2    0[BANK0 ] PTR struct .
 13737 ;;		 -> I2C1_WBlk@WriteTRB(5), I2C1_RBlk@readTRB(10), I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 13738 ;;  pflag           1    2[BANK0 ] PTR enum E6644
 13739 ;;		 -> I2C1_WBlk@status(1), I2C1_RBlk@status(1), 
 13740 ;; Auto vars:     Size  Location     Type
 13741 ;;  count           1    4[BANK0 ] unsigned char 
 13742 ;; Return value:  Size  Location     Type
 13743 ;;                  1    wreg      void 
 13744 ;; Registers used:
 13745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13746 ;; Tracked objects:
 13747 ;;		On entry : 0/0
 13748 ;;		On exit  : 0/0
 13749 ;;		Unchanged: 0/0
 13750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13751 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13754 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13755 ;;Total ram usage:        5 bytes
 13756 ;; Hardware stack levels used:    1
 13757 ;; Hardware stack levels required when called:    5
 13758 ;; This function calls:
 13759 ;;		_I2C1_WaitForLastPacketToComplete
 13760 ;; This function is called by:
 13761 ;;		_I2C1_RBlk
 13762 ;;		_I2C1_WBlk
 13763 ;;		_I2C1_MasterWrite
 13764 ;;		_I2C1_MasterRead
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768                           
 13769                           ;psect for function _I2C1_MasterTRBInsert
 13770  0826                     _I2C1_MasterTRBInsert:	
 13771                           
 13772                           ;incstack = 0
 13773                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13774                           ;I2C1_MasterTRBInsert@count stored from wreg
 13775  0826  0020               	movlb	0	; select bank0
 13776  0827  00A4               	movwf	I2C1_MasterTRBInsert@count
 13777                           
 13778                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 13779  0828  0021               	movlb	1	; select bank1
 13780  0829  184D               	btfsc	(_i2c1_object^(0+128)+2),0
 13781  082A  2868               	goto	l5219
 13782                           
 13783                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 13784  082B  3002               	movlw	2
 13785  082C  0020               	movlb	0	; select bank0
 13786  082D  00A3               	movwf	??_I2C1_MasterTRBInsert
 13787  082E  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13788  082F  0086               	movwf	6
 13789  0830  0187               	clrf	7
 13790  0831  0823               	movf	??_I2C1_MasterTRBInsert,w
 13791  0832  0081               	movwf	1
 13792                           
 13793                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 13794  0833  0021               	movlb	1	; select bank1
 13795  0834  0A4B               	incf	_i2c1_object^(0+128),w
 13796  0835  0086               	movwf	6
 13797  0836  3001               	movlw	1	; select bank2/3
 13798  0837  0087               	movwf	7
 13799  0838  0020               	movlb	0	; select bank0
 13800  0839  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 13801  083A  3FC0               	movwi [0]fsr1
 13802  083B  0821               	movf	I2C1_MasterTRBInsert@ptrb_list+1,w
 13803  083C  3FC1               	movwi [1]fsr1
 13804                           
 13805                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 13806  083D  0824               	movf	I2C1_MasterTRBInsert@count,w
 13807  083E  00A3               	movwf	??_I2C1_MasterTRBInsert
 13808  083F  0021               	movlb	1	; select bank1
 13809  0840  084B               	movf	_i2c1_object^(0+128),w
 13810  0841  0086               	movwf	6
 13811  0842  3001               	movlw	1	; select bank2/3
 13812  0843  0087               	movwf	7
 13813  0844  0020               	movlb	0	; select bank0
 13814  0845  0823               	movf	??_I2C1_MasterTRBInsert,w
 13815  0846  0081               	movwf	1
 13816                           
 13817                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 13818  0847  0021               	movlb	1	; select bank1
 13819  0848  084B               	movf	_i2c1_object^(0+128),w
 13820  0849  3E03               	addlw	3
 13821  084A  0086               	movwf	6
 13822  084B  3001               	movlw	1	; select bank2/3
 13823  084C  0087               	movwf	7
 13824  084D  0020               	movlb	0	; select bank0
 13825  084E  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13826  084F  3FC0               	movwi [0]fsr1
 13827  0850  3000               	movlw	0
 13828  0851  3FC1               	movwi [1]fsr1
 13829                           
 13830                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 13831  0852  3005               	movlw	5
 13832  0853  00A3               	movwf	??_I2C1_MasterTRBInsert
 13833  0854  0823               	movf	??_I2C1_MasterTRBInsert,w
 13834  0855  0021               	movlb	1	; select bank1
 13835  0856  07CB               	addwf	_i2c1_object^(0+128),f
 13836                           
 13837                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 13838  0857  084B               	movf	_i2c1_object^(0+128),w
 13839  0858  3ADF               	xorlw	(low ((_i2c1_tr_queue| (0+256)+5)))& (0+255)
 13840  0859  1D03               	skipz
 13841  085A  2861               	goto	l5215
 13842                           
 13843                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 13844  085B  30DA               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 13845  085C  0020               	movlb	0	; select bank0
 13846  085D  00A3               	movwf	??_I2C1_MasterTRBInsert
 13847  085E  0823               	movf	??_I2C1_MasterTRBInsert,w
 13848  085F  0021               	movlb	1	; select bank1
 13849  0860  00CB               	movwf	_i2c1_object^(0+128)
 13850  0861                     l5215:	
 13851                           
 13852                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 13853  0861  10CD               	bcf	(_i2c1_object^(0+128)+2),1
 13854                           
 13855                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 13856  0862  084C               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 13857  0863  064B               	xorwf	_i2c1_object^(0+128),w
 13858  0864  1D03               	skipz
 13859  0865  286E               	goto	l5221
 13860                           
 13861                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 13862  0866  144D               	bsf	(_i2c1_object^(0+128)+2),0
 13863  0867  286E               	goto	l5221
 13864  0868                     l5219:	
 13865                           
 13866                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 13867  0868  0020               	movlb	0	; select bank0
 13868  0869  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13869  086A  0086               	movwf	6
 13870  086B  0187               	clrf	7
 13871  086C  0181               	clrf	1
 13872  086D  0A81               	incf	1,f
 13873  086E                     l5221:	
 13874                           
 13875                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 13876  086E  0020               	movlb	0	; select bank0
 13877  086F  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13878  0870  0086               	movwf	6
 13879  0871  0187               	clrf	7
 13880  0872  3002               	movlw	2
 13881  0873  0601               	xorwf	1,w
 13882  0874  1D03               	btfss	3,2
 13883  0875  0008               	return
 13884                           
 13885                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 13886  0876  3190  203A         	fcall	_I2C1_WaitForLastPacketToComplete
 13887                           
 13888                           ;mcc_generated_files/i2c1.c: 702:         PIR1bits.SSP1IF = 1;
 13889  0878  0020               	movlb	0	; select bank0
 13890  0879  1591               	bsf	17,3	;volatile
 13891  087A  0008               	return
 13892  087B                     __end_of_I2C1_MasterTRBInsert:	
 13893                           
 13894                           	psect	text56
 13895  103A                     __ptext56:	
 13896 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 13897 ;; Defined at:
 13898 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;		None
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;		None
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      void 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2, status,0
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;Total ram usage:        0 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    4
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_I2C1_MasterTRBInsert
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           
 13927                           ;psect for function _I2C1_WaitForLastPacketToComplete
 13928  103A                     _I2C1_WaitForLastPacketToComplete:	
 13929  103A                     l5147:	
 13930                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13931                           
 13932                           ;incstack = 0
 13933                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 13934                           
 13935                           
 13936                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13937  103A  0021               	movlb	1	; select bank1
 13938  103B  086D               	movf	_i2c1_state^(0+128),w
 13939  103C  1903               	btfsc	3,2
 13940  103D  0008               	return
 13941  103E  283A               	goto	l5147
 13942  103F                     __end_of_I2C1_WaitForLastPacketToComplete:	
 13943                           
 13944                           	psect	text57
 13945  1334                     __ptext57:	
 13946 ;; *************** function _I2C1_MasterReadTRBBuild *****************
 13947 ;; Defined at:
 13948 ;;		line 708 in file "mcc_generated_files/i2c1.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;  ptrb            1    wreg     PTR struct .
 13951 ;;		 -> I2C1_RBlk@readTRB(10), I2C1_MasterRead@trBlock(5), 
 13952 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 13953 ;;		 -> Handler_I2c@ReadBuffer(2), RAM(4096), 
 13954 ;;  length          1    2[BANK0 ] unsigned char 
 13955 ;;  address         2    3[BANK0 ] unsigned short 
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;  ptrb            1    7[BANK0 ] PTR struct .
 13958 ;;		 -> I2C1_RBlk@readTRB(10), I2C1_MasterRead@trBlock(5), 
 13959 ;; Return value:  Size  Location     Type
 13960 ;;                  1    wreg      void 
 13961 ;; Registers used:
 13962 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13963 ;; Tracked objects:
 13964 ;;		On entry : 0/0
 13965 ;;		On exit  : 0/0
 13966 ;;		Unchanged: 0/0
 13967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13968 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13972 ;;Total ram usage:        8 bytes
 13973 ;; Hardware stack levels used:    1
 13974 ;; Hardware stack levels required when called:    4
 13975 ;; This function calls:
 13976 ;;		Nothing
 13977 ;; This function is called by:
 13978 ;;		_I2C1_RBlk
 13979 ;;		_I2C1_MasterRead
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           
 13984                           ;psect for function _I2C1_MasterReadTRBBuild
 13985  1334                     _I2C1_MasterReadTRBBuild:	
 13986                           
 13987                           ;incstack = 0
 13988                           ; Regs used in _I2C1_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 13989                           ;I2C1_MasterReadTRBBuild@ptrb stored from wreg
 13990  1334  0020               	movlb	0	; select bank0
 13991  1335  00A7               	movwf	I2C1_MasterReadTRBBuild@ptrb
 13992                           
 13993                           ;mcc_generated_files/i2c1.c: 709:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 710:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 711:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 712:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 713: {;mcc_generated_files/i2c1.c: 714:     ptrb->address = add
      +                          ress << 1;
 13994  1336  0824               	movf	I2C1_MasterReadTRBBuild@address+1,w
 13995  1337  00A6               	movwf	??_I2C1_MasterReadTRBBuild+1
 13996  1338  0823               	movf	I2C1_MasterReadTRBBuild@address,w
 13997  1339  00A5               	movwf	??_I2C1_MasterReadTRBBuild
 13998  133A  35A5               	lslf	??_I2C1_MasterReadTRBBuild,f
 13999  133B  0DA6               	rlf	??_I2C1_MasterReadTRBBuild+1,f
 14000  133C  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 14001  133D  0086               	movwf	6
 14002  133E  3001               	movlw	1	; select bank2/3
 14003  133F  0087               	movwf	7
 14004  1340  0825               	movf	??_I2C1_MasterReadTRBBuild,w
 14005  1341  3FC0               	movwi [0]fsr1
 14006  1342  0826               	movf	??_I2C1_MasterReadTRBBuild+1,w
 14007  1343  3FC1               	movwi [1]fsr1
 14008                           
 14009                           ;mcc_generated_files/i2c1.c: 716:     ptrb->address |= 0x01;
 14010  1344  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 14011  1345  0086               	movwf	6
 14012  1346  3001               	movlw	1	; select bank2/3
 14013  1347  0087               	movwf	7
 14014  1348  3001               	movlw	1
 14015  1349  0481               	iorwf	1,f
 14016  134A  3141               	addfsr 1,1
 14017  134B  3000               	movlw	0
 14018  134C  0481               	iorwf	1,f
 14019                           
 14020                           ;mcc_generated_files/i2c1.c: 717:     ptrb->length = length;
 14021  134D  0822               	movf	I2C1_MasterReadTRBBuild@length,w
 14022  134E  00A5               	movwf	??_I2C1_MasterReadTRBBuild
 14023  134F  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 14024  1350  3E02               	addlw	2
 14025  1351  0086               	movwf	6
 14026  1352  3001               	movlw	1	; select bank2/3
 14027  1353  0087               	movwf	7
 14028  1354  0825               	movf	??_I2C1_MasterReadTRBBuild,w
 14029  1355  0081               	movwf	1
 14030                           
 14031                           ;mcc_generated_files/i2c1.c: 718:     ptrb->pbuffer = pdata;
 14032  1356  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 14033  1357  3E03               	addlw	3
 14034  1358  0086               	movwf	6
 14035  1359  3001               	movlw	1	; select bank2/3
 14036  135A  0087               	movwf	7
 14037  135B  0820               	movf	I2C1_MasterReadTRBBuild@pdata,w
 14038  135C  3FC0               	movwi [0]fsr1
 14039  135D  0821               	movf	I2C1_MasterReadTRBBuild@pdata+1,w
 14040  135E  3FC1               	movwi [1]fsr1
 14041  135F  0008               	return
 14042  1360                     __end_of_I2C1_MasterReadTRBBuild:	
 14043                           
 14044                           	psect	intentry
 14045  0404                     __pintentry:	
 14046 ;; *************** function _INTERRUPT_InterruptManager *****************
 14047 ;; Defined at:
 14048 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;		None
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;		None
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  1    wreg      void 
 14055 ;; Registers used:
 14056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14066 ;;Total ram usage:        0 bytes
 14067 ;; Hardware stack levels used:    1
 14068 ;; Hardware stack levels required when called:    3
 14069 ;; This function calls:
 14070 ;;		Absolute function
 14071 ;;		_EUSART_Receive_ISR
 14072 ;;		_EUSART_Transmit_ISR
 14073 ;;		_I2C1_BusCollisionISR
 14074 ;;		_I2C1_ISR
 14075 ;;		_TMR0_ISR
 14076 ;; This function is called by:
 14077 ;;		Interrupt level 1
 14078 ;; This function uses a non-reentrant model
 14079 ;;
 14080                           
 14081  0404                     _INTERRUPT_InterruptManager:	
 14082                           
 14083                           ;incstack = 0
 14084  0404  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14085                           
 14086                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14087  0405  3184               	pagesel	$
 14088                           
 14089                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 14090  0406  0021               	movlb	1	; select bank1
 14091  0407  1E90               	btfss	16,5	;volatile
 14092  0408  2C10               	goto	i1l370
 14093  0409  0020               	movlb	0	; select bank0
 14094  040A  1E90               	btfss	16,5	;volatile
 14095  040B  2C10               	goto	i1l370
 14096                           
 14097                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 14098  040C  3191  211B  3184   	fcall	_TMR0_ISR
 14099                           
 14100                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14101  040F  2C3F               	goto	i1l382
 14102  0410                     i1l370:	
 14103                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 14104                           
 14105  0410  1F0B               	btfss	11,6	;volatile
 14106  0411  2C3F               	goto	i1l382
 14107                           
 14108                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 14109  0412  0021               	movlb	1	; select bank1
 14110  0413  1D11               	btfss	17,2	;volatile
 14111  0414  2C1C               	goto	i1l373
 14112  0415  0020               	movlb	0	; select bank0
 14113  0416  1D11               	btfss	17,2	;volatile
 14114  0417  2C1C               	goto	i1l373
 14115                           
 14116                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 14117  0418  3190  202F  3184   	fcall	_I2C1_BusCollisionISR
 14118                           
 14119                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14120  041B  2C3F               	goto	i1l382
 14121  041C                     i1l373:	
 14122                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 14123                           
 14124  041C  0021               	movlb	1	; select bank1
 14125  041D  1D91               	btfss	17,3	;volatile
 14126  041E  2C26               	goto	i1l375
 14127  041F  0020               	movlb	0	; select bank0
 14128  0420  1D91               	btfss	17,3	;volatile
 14129  0421  2C26               	goto	i1l375
 14130                           
 14131                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 14132  0422  3186  269E  3184   	fcall	_I2C1_ISR
 14133                           
 14134                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14135  0425  2C3F               	goto	i1l382
 14136  0426                     i1l375:	
 14137                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
 14138                           
 14139  0426  0021               	movlb	1	; select bank1
 14140  0427  1E11               	btfss	17,4	;volatile
 14141  0428  2C33               	goto	i1l377
 14142  0429  0020               	movlb	0	; select bank0
 14143  042A  1E11               	btfss	17,4	;volatile
 14144  042B  2C33               	goto	i1l377
 14145                           
 14146                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
 14147  042C  0023               	movlb	3	; select bank3
 14148  042D  086A               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384),w
 14149  042E  008A               	movwf	10
 14150  042F  0869               	movf	_EUSART_TxDefaultInterruptHandler^(0+384),w
 14151  0430  000A               	callw
 14152  0431  3184               	pagesel	$
 14153                           
 14154                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14155  0432  2C3F               	goto	i1l382
 14156  0433                     i1l377:	
 14157                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 14158                           
 14159  0433  0021               	movlb	1	; select bank1
 14160  0434  1E91               	btfss	17,5	;volatile
 14161  0435  2C3F               	goto	i1l382
 14162  0436  0020               	movlb	0	; select bank0
 14163  0437  1E91               	btfss	17,5	;volatile
 14164  0438  2C3F               	goto	i1l382
 14165                           
 14166                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART_RxDefaultInterruptHandler();
 14167  0439  0023               	movlb	3	; select bank3
 14168  043A  0868               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384),w
 14169  043B  008A               	movwf	10
 14170  043C  0867               	movf	_EUSART_RxDefaultInterruptHandler^(0+384),w
 14171  043D  000A               	callw
 14172  043E  3184               	pagesel	$
 14173  043F                     i1l382:	
 14174                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 14175                           
 14176  043F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14177  0440  0009               	retfie
 14178  0441                     __end_of_INTERRUPT_InterruptManager:	
 14179                           
 14180                           	psect	text59
 14181  111B                     __ptext59:	
 14182 ;; *************** function _TMR0_ISR *****************
 14183 ;; Defined at:
 14184 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 14185 ;; Parameters:    Size  Location     Type
 14186 ;;		None
 14187 ;; Auto vars:     Size  Location     Type
 14188 ;;		None
 14189 ;; Return value:  Size  Location     Type
 14190 ;;                  1    wreg      void 
 14191 ;; Registers used:
 14192 ;;		wreg, status,2, status,0, pclath, cstack
 14193 ;; Tracked objects:
 14194 ;;		On entry : 0/0
 14195 ;;		On exit  : 0/0
 14196 ;;		Unchanged: 0/0
 14197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14202 ;;Total ram usage:        0 bytes
 14203 ;; Hardware stack levels used:    1
 14204 ;; Hardware stack levels required when called:    2
 14205 ;; This function calls:
 14206 ;;		_TMR0_CallBack
 14207 ;; This function is called by:
 14208 ;;		_INTERRUPT_InterruptManager
 14209 ;; This function uses a non-reentrant model
 14210 ;;
 14211                           
 14212                           
 14213                           ;psect for function _TMR0_ISR
 14214  111B                     _TMR0_ISR:	
 14215                           
 14216                           ;mcc_generated_files/tmr0.c: 123:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 14217                           
 14218                           ;incstack = 0
 14219                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14220  111B  0020               	movlb	0	; select bank0
 14221  111C  1290               	bcf	16,5	;volatile
 14222                           
 14223                           ;mcc_generated_files/tmr0.c: 128:     if (++CountCallBack >= 25)
 14224  111D  3001               	movlw	1
 14225  111E  0023               	movlb	3	; select bank3
 14226  111F  07C2               	addwf	TMR0_ISR@CountCallBack^(0+384),f	;volatile
 14227  1120  3000               	movlw	0
 14228  1121  3DC3               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+384),f	;volatile
 14229  1122  3000               	movlw	0
 14230  1123  0243               	subwf	(TMR0_ISR@CountCallBack+1)^(0+384),w	;volatile
 14231  1124  3019               	movlw	25
 14232  1125  1903               	skipnz
 14233  1126  0242               	subwf	TMR0_ISR@CountCallBack^(0+384),w	;volatile
 14234  1127  1C03               	skipc
 14235  1128  0008               	return
 14236                           
 14237                           ;mcc_generated_files/tmr0.c: 129:     {;mcc_generated_files/tmr0.c: 131:         TMR0_Ca
      +                          llBack();
 14238  1129  3190  20BD         	fcall	_TMR0_CallBack
 14239                           
 14240                           ;mcc_generated_files/tmr0.c: 134:         CountCallBack = 0;
 14241  112B  0023               	movlb	3	; select bank3
 14242  112C  01C2               	clrf	TMR0_ISR@CountCallBack^(0+384)	;volatile
 14243  112D  01C3               	clrf	(TMR0_ISR@CountCallBack+1)^(0+384)	;volatile
 14244  112E  0008               	return
 14245  112F                     __end_of_TMR0_ISR:	
 14246                           
 14247                           	psect	text60
 14248  10BD                     __ptext60:	
 14249 ;; *************** function _TMR0_CallBack *****************
 14250 ;; Defined at:
 14251 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;		None
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;		None
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  1    wreg      void 
 14258 ;; Registers used:
 14259 ;;		wreg, status,2, status,0, pclath, cstack
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;Total ram usage:        0 bytes
 14270 ;; Hardware stack levels used:    1
 14271 ;; Hardware stack levels required when called:    1
 14272 ;; This function calls:
 14273 ;;		Absolute function
 14274 ;;		_TMR0_DefaultInterruptHandler
 14275 ;; This function is called by:
 14276 ;;		_TMR0_ISR
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           
 14281                           ;psect for function _TMR0_CallBack
 14282  10BD                     _TMR0_CallBack:	
 14283                           
 14284                           ;mcc_generated_files/tmr0.c: 144:     if(TMR0_InterruptHandler)
 14285                           
 14286                           ;incstack = 0
 14287                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14288  10BD  0023               	movlb	3	; select bank3
 14289  10BE  085F               	movf	_TMR0_InterruptHandler^(0+384),w
 14290  10BF  0460               	iorwf	(_TMR0_InterruptHandler+1)^(0+384),w
 14291  10C0  1903               	btfsc	3,2
 14292  10C1  0008               	return
 14293                           
 14294                           ;mcc_generated_files/tmr0.c: 145:     {;mcc_generated_files/tmr0.c: 146:         TMR0_In
      +                          terruptHandler();
 14295  10C2  0860               	movf	(_TMR0_InterruptHandler+1)^(0+384),w
 14296  10C3  008A               	movwf	10
 14297  10C4  085F               	movf	_TMR0_InterruptHandler^(0+384),w
 14298  10C5  000A               	callw
 14299  10C6  3190               	pagesel	$
 14300  10C7  0008               	return
 14301  10C8                     __end_of_TMR0_CallBack:	
 14302                           
 14303                           	psect	text61
 14304  07FF                     __ptext61:	
 14305 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14306 ;; Defined at:
 14307 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 14308 ;; Parameters:    Size  Location     Type
 14309 ;;		None
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;		None
 14312 ;; Return value:  Size  Location     Type
 14313 ;;                  1    wreg      void 
 14314 ;; Registers used:
 14315 ;;		None
 14316 ;; Tracked objects:
 14317 ;;		On entry : 0/0
 14318 ;;		On exit  : 0/0
 14319 ;;		Unchanged: 0/0
 14320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;Total ram usage:        0 bytes
 14326 ;; Hardware stack levels used:    1
 14327 ;; This function calls:
 14328 ;;		Nothing
 14329 ;; This function is called by:
 14330 ;;		_TMR0_Initialize
 14331 ;;		_TMR0_CallBack
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           
 14336                           ;psect for function _TMR0_DefaultInterruptHandler
 14337  07FF                     _TMR0_DefaultInterruptHandler:	
 14338                           
 14339                           ;incstack = 0
 14340                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 14341  07FF  0008               	return
 14342  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 14343                           
 14344                           	psect	text62
 14345  069E                     __ptext62:	
 14346 ;; *************** function _I2C1_ISR *****************
 14347 ;; Defined at:
 14348 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;		None
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;		None
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      void 
 14355 ;; Registers used:
 14356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;Total ram usage:        4 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    1
 14369 ;; This function calls:
 14370 ;;		_I2C1_FunctionComplete
 14371 ;;		_I2C1_Stop
 14372 ;; This function is called by:
 14373 ;;		_INTERRUPT_InterruptManager
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           
 14378                           ;psect for function _I2C1_ISR
 14379  069E                     _I2C1_ISR:	
 14380                           
 14381                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR1bits.SSP1IF = 0;
 14382                           
 14383                           ;incstack = 0
 14384                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14385  069E  0020               	movlb	0	; select bank0
 14386  069F  1191               	bcf	17,3	;volatile
 14387                           
 14388                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 14389  06A0  0024               	movlb	4	; select bank4
 14390  06A1  1F95               	btfss	21,7	;volatile
 14391  06A2  2FD2               	goto	i1l4699
 14392                           
 14393                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 14394  06A3  1395               	bcf	21,7	;volatile
 14395                           
 14396                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 14397  06A4  0021               	movlb	1	; select bank1
 14398  06A5  01ED               	clrf	_i2c1_state^(0+128)
 14399                           
 14400                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 14401  06A6  086B               	movf	_p_i2c1_current^(0+128),w
 14402  06A7  3E03               	addlw	3
 14403  06A8  0086               	movwf	6
 14404  06A9  3001               	movlw	1	; select bank2/3
 14405  06AA  0087               	movwf	7
 14406  06AB  3F40               	moviw [0]fsr1
 14407  06AC  00FA               	movwf	??_I2C1_ISR
 14408  06AD  3F41               	moviw [1]fsr1
 14409  06AE  00FB               	movwf	??_I2C1_ISR+1
 14410  06AF  087A               	movf	??_I2C1_ISR,w
 14411  06B0  0086               	movwf	6
 14412  06B1  087B               	movf	??_I2C1_ISR+1,w
 14413  06B2  0087               	movwf	7
 14414  06B3  3001               	movlw	1
 14415  06B4  0081               	movwf	1
 14416                           
 14417                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 14418  06B5  01EB               	clrf	_p_i2c1_current^(0+128)
 14419  06B6  0008               	return
 14420  06B7                     i1l442:	
 14421                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 14422                           
 14423                           
 14424                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 14425  06B7  18CD               	btfsc	(_i2c1_object^(0+128)+2),1
 14426  06B8  0008               	return
 14427                           
 14428                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 14429  06B9  084C               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14430  06BA  00FA               	movwf	??_I2C1_ISR
 14431  06BB  087A               	movf	??_I2C1_ISR,w
 14432  06BC  00EB               	movwf	_p_i2c1_current^(0+128)
 14433                           
 14434                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 14435  06BD  084C               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14436  06BE  0086               	movwf	6
 14437  06BF  3001               	movlw	1	; select bank2/3
 14438  06C0  0087               	movwf	7
 14439  06C1  0801               	movf	1,w
 14440  06C2  00FA               	movwf	??_I2C1_ISR
 14441  06C3  087A               	movf	??_I2C1_ISR,w
 14442  06C4  00EC               	movwf	_i2c1_trb_count^(0+128)
 14443                           
 14444                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 14445  06C5  0A4C               	incf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14446  06C6  0086               	movwf	6
 14447  06C7  3001               	movlw	1	; select bank2/3
 14448  06C8  0087               	movwf	7
 14449  06C9  3F40               	moviw [0]fsr1
 14450  06CA  00D8               	movwf	_p_i2c1_trb_current^(0+128)
 14451  06CB  3F41               	moviw [1]fsr1
 14452  06CC  00D9               	movwf	(_p_i2c1_trb_current+1)^(0+128)
 14453                           
 14454                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 14455  06CD  3005               	movlw	5
 14456  06CE  00FA               	movwf	??_I2C1_ISR
 14457  06CF  087A               	movf	??_I2C1_ISR,w
 14458  06D0  07CC               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 14459                           
 14460                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 14461  06D1  084C               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14462  06D2  3ADF               	xorlw	(low ((_i2c1_tr_queue| (0+256)+5)))& (0+255)
 14463  06D3  1D03               	skipz
 14464  06D4  2ED9               	goto	i1l4587
 14465                           
 14466                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 14467  06D5  30DA               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 14468  06D6  00FA               	movwf	??_I2C1_ISR
 14469  06D7  087A               	movf	??_I2C1_ISR,w
 14470  06D8  00CC               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 14471  06D9                     i1l4587:	
 14472                           
 14473                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 14474  06D9  104D               	bcf	(_i2c1_object^(0+128)+2),0
 14475                           
 14476                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 14477  06DA  084C               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14478  06DB  064B               	xorwf	_i2c1_object^(0+128),w
 14479  06DC  1903               	btfsc	3,2
 14480                           
 14481                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 14482  06DD  14CD               	bsf	(_i2c1_object^(0+128)+2),1
 14483                           
 14484                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 14485                           
 14486                           ;mcc_generated_files/i2c1.c: 290:                 }
 14487  06DE  0024               	movlb	4	; select bank4
 14488  06DF  1416               	bsf	22,0	;volatile
 14489  06E0                     i1l4591:	
 14490                           
 14491                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 14492  06E0  3002               	movlw	2
 14493  06E1  00FA               	movwf	??_I2C1_ISR
 14494  06E2  087A               	movf	??_I2C1_ISR,w
 14495  06E3  0021               	movlb	1	; select bank1
 14496  06E4  00ED               	movwf	_i2c1_state^(0+128)
 14497  06E5  0008               	return
 14498  06E6                     i1l447:	
 14499                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 14500                           
 14501  06E6  2F78               	goto	i1l468
 14502  06E7                     i1l448:	
 14503                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 14504                           
 14505                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 14506                           
 14507                           
 14508                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 14509  06E7  0024               	movlb	4	; select bank4
 14510  06E8  1F16               	btfss	22,6	;volatile
 14511  06E9  2EF3               	goto	i1l4599
 14512                           
 14513                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 14514  06EA  3001               	movlw	1
 14515  06EB  00FA               	movwf	??_I2C1_ISR
 14516  06EC  087A               	movf	??_I2C1_ISR,w
 14517  06ED  0021               	movlb	1	; select bank1
 14518  06EE  07CF               	addwf	(_i2c1_object^(0+128)+4),f
 14519                           
 14520                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 14521  06EF  3004               	movlw	4
 14522  06F0  3192  2228         	fcall	_I2C1_Stop
 14523                           
 14524                           ;mcc_generated_files/i2c1.c: 319:             }
 14525  06F2  0008               	return
 14526  06F3                     i1l4599:	
 14527                           
 14528                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 14529  06F3  0876               	movf	I2C1_ISR@i2c_address+1,w
 14530  06F4  00FB               	movwf	??_I2C1_ISR+1
 14531  06F5  0875               	movf	I2C1_ISR@i2c_address,w
 14532  06F6  00FA               	movwf	??_I2C1_ISR
 14533  06F7  36FB               	lsrf	??_I2C1_ISR+1,f
 14534  06F8  0CFA               	rrf	??_I2C1_ISR,f
 14535  06F9  087A               	movf	??_I2C1_ISR,w
 14536  06FA  0091               	movwf	17	;volatile
 14537                           
 14538                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 14539  06FB  1C75               	btfss	I2C1_ISR@i2c_address,0
 14540  06FC  2F03               	goto	i1l4605
 14541                           
 14542                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 14543  06FD  300B               	movlw	11
 14544  06FE  00FA               	movwf	??_I2C1_ISR
 14545  06FF  087A               	movf	??_I2C1_ISR,w
 14546  0700  0021               	movlb	1	; select bank1
 14547  0701  00ED               	movwf	_i2c1_state^(0+128)
 14548                           
 14549                           ;mcc_generated_files/i2c1.c: 331:                 }
 14550  0702  0008               	return
 14551  0703                     i1l4605:	
 14552                           
 14553                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 14554  0703  3003               	movlw	3
 14555  0704  00FA               	movwf	??_I2C1_ISR
 14556  0705  087A               	movf	??_I2C1_ISR,w
 14557  0706  0021               	movlb	1	; select bank1
 14558  0707  00ED               	movwf	_i2c1_state^(0+128)
 14559  0708  0008               	return
 14560  0709                     i1l453:	
 14561                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 14562                           
 14563                           
 14564                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 14565  0709  0024               	movlb	4	; select bank4
 14566  070A  1F16               	btfss	22,6	;volatile
 14567  070B  2F15               	goto	i1l454
 14568                           
 14569                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 14570  070C  3001               	movlw	1
 14571  070D  00FA               	movwf	??_I2C1_ISR
 14572  070E  087A               	movf	??_I2C1_ISR,w
 14573  070F  0021               	movlb	1	; select bank1
 14574  0710  07CF               	addwf	(_i2c1_object^(0+128)+4),f
 14575                           
 14576                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 14577  0711  3004               	movlw	4
 14578  0712  3192  2228         	fcall	_I2C1_Stop
 14579                           
 14580                           ;mcc_generated_files/i2c1.c: 347:             }
 14581  0714  0008               	return
 14582  0715                     i1l454:	
 14583                           ;mcc_generated_files/i2c1.c: 348:             else
 14584                           
 14585                           
 14586                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 14587  0715  1496               	bsf	22,1	;volatile
 14588                           
 14589                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 14590  0716  0876               	movf	I2C1_ISR@i2c_address+1,w
 14591  0717  00FB               	movwf	??_I2C1_ISR+1
 14592  0718  0875               	movf	I2C1_ISR@i2c_address,w
 14593  0719  00FA               	movwf	??_I2C1_ISR
 14594  071A  087B               	movf	??_I2C1_ISR+1,w
 14595  071B  00FA               	movwf	??_I2C1_ISR
 14596  071C  01FB               	clrf	??_I2C1_ISR+1
 14597  071D  3006               	movlw	6
 14598  071E  057A               	andwf	??_I2C1_ISR,w
 14599  071F  00FC               	movwf	??_I2C1_ISR+2
 14600  0720  3000               	movlw	0
 14601  0721  057B               	andwf	??_I2C1_ISR+1,w
 14602  0722  00FD               	movwf	??_I2C1_ISR+3
 14603  0723  30F0               	movlw	240
 14604  0724  047C               	iorwf	??_I2C1_ISR+2,w
 14605  0725  00F5               	movwf	I2C1_ISR@i2c_address
 14606  0726  3000               	movlw	0
 14607  0727  047D               	iorwf	??_I2C1_ISR+3,w
 14608  0728  00F6               	movwf	I2C1_ISR@i2c_address+1
 14609                           
 14610                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 14611  0729  1475               	bsf	I2C1_ISR@i2c_address,0
 14612                           
 14613                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 14614  072A  0021               	movlb	1	; select bank1
 14615  072B  01E9               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 14616  072C  0AE9               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 14617  072D  2EE0               	goto	i1l4591
 14618  072E                     i1l4619:	
 14619                           
 14620                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 14621  072E  0369               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 14622  072F  1903               	btfsc	3,2
 14623  0730  2F4D               	goto	i1l4637
 14624                           
 14625                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 14626  0731  0858               	movf	_p_i2c1_trb_current^(0+128),w
 14627  0732  0086               	movwf	6
 14628  0733  0859               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 14629  0734  0087               	movwf	7
 14630  0735  3F40               	moviw [0]fsr1
 14631  0736  00F5               	movwf	I2C1_ISR@i2c_address
 14632  0737  3F41               	moviw [1]fsr1
 14633  0738  00F6               	movwf	I2C1_ISR@i2c_address+1
 14634                           
 14635                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 14636  0739  0858               	movf	_p_i2c1_trb_current^(0+128),w
 14637  073A  0086               	movwf	6
 14638  073B  0859               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 14639  073C  0087               	movwf	7
 14640  073D  3143               	addfsr 1,3
 14641  073E  3F40               	moviw [0]fsr1
 14642  073F  0023               	movlb	3	; select bank3
 14643  0740  00C4               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+384)
 14644  0741  3F41               	moviw [1]fsr1
 14645  0742  00C5               	movwf	(I2C1_ISR@pi2c_buf_ptr+1)^(0+384)
 14646                           
 14647                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 14648  0743  0021               	movlb	1	; select bank1
 14649  0744  0858               	movf	_p_i2c1_trb_current^(0+128),w
 14650  0745  0086               	movwf	6
 14651  0746  0859               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 14652  0747  0087               	movwf	7
 14653  0748  3142               	addfsr 1,2
 14654  0749  0801               	movf	1,w
 14655  074A  00FA               	movwf	??_I2C1_ISR
 14656  074B  087A               	movf	??_I2C1_ISR,w
 14657  074C  00EA               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 14658  074D                     i1l4637:	
 14659                           
 14660                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 14661  074D  0875               	movf	I2C1_ISR@i2c_address,w
 14662  074E  0024               	movlb	4	; select bank4
 14663  074F  0091               	movwf	17	;volatile
 14664                           
 14665                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 14666  0750  1C75               	btfss	I2C1_ISR@i2c_address,0
 14667  0751  2F03               	goto	i1l4605
 14668                           
 14669                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 14670  0752  3005               	movlw	5
 14671  0753  00FA               	movwf	??_I2C1_ISR
 14672  0754  087A               	movf	??_I2C1_ISR,w
 14673  0755  0021               	movlb	1	; select bank1
 14674  0756  00ED               	movwf	_i2c1_state^(0+128)
 14675                           
 14676                           ;mcc_generated_files/i2c1.c: 419:                 }
 14677  0757  0008               	return
 14678  0758                     i1l464:	
 14679                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 14680                           
 14681                           
 14682                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 14683  0758  0024               	movlb	4	; select bank4
 14684  0759  1F16               	btfss	22,6	;volatile
 14685  075A  2F66               	goto	i1l4651
 14686                           
 14687                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 14688  075B  3001               	movlw	1
 14689  075C  00FA               	movwf	??_I2C1_ISR
 14690  075D  087A               	movf	??_I2C1_ISR,w
 14691  075E  0021               	movlb	1	; select bank1
 14692  075F  07CF               	addwf	(_i2c1_object^(0+128)+4),f
 14693                           
 14694                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 14695  0760  0024               	movlb	4	; select bank4
 14696  0761  1316               	bcf	22,6	;volatile
 14697                           
 14698                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 14699  0762  3005               	movlw	5
 14700  0763  3192  2228         	fcall	_I2C1_Stop
 14701                           
 14702                           ;mcc_generated_files/i2c1.c: 442:             }
 14703  0765  0008               	return
 14704  0766                     i1l4651:	
 14705                           
 14706                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 14707  0766  3001               	movlw	1
 14708  0767  0021               	movlb	1	; select bank1
 14709  0768  02EA               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 14710  0769  0A6A               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 14711  076A  1D03               	btfss	3,2
 14712  076B  2F7B               	goto	i1l4661
 14713                           
 14714                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 14715  076C  3005               	movlw	5
 14716  076D  07D8               	addwf	_p_i2c1_trb_current^(0+128),f
 14717  076E  3000               	movlw	0
 14718  076F  3DD9               	addwfc	(_p_i2c1_trb_current+1)^(0+128),f
 14719                           
 14720                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 14721  0770  3001               	movlw	1
 14722  0771  02EC               	subwf	_i2c1_trb_count^(0+128),f
 14723  0772  1D03               	btfss	3,2
 14724  0773  2F78               	goto	i1l468
 14725                           
 14726                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14727  0774  3000               	movlw	0
 14728  0775  3192  2228         	fcall	_I2C1_Stop
 14729                           
 14730                           ;mcc_generated_files/i2c1.c: 457:                     }
 14731  0777  0008               	return
 14732  0778                     i1l468:	
 14733                           ;mcc_generated_files/i2c1.c: 458:                     else
 14734                           
 14735                           
 14736                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 14737  0778  0024               	movlb	4	; select bank4
 14738  0779  1496               	bsf	22,1	;volatile
 14739  077A  2EE0               	goto	i1l4591
 14740  077B                     i1l4661:	
 14741                           
 14742                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 14743  077B  0023               	movlb	3	; select bank3
 14744  077C  0844               	movf	I2C1_ISR@pi2c_buf_ptr^(0+384),w
 14745  077D  0086               	movwf	6
 14746  077E  0845               	movf	(I2C1_ISR@pi2c_buf_ptr+1)^(0+384),w
 14747  077F  0087               	movwf	7
 14748  0780  0801               	movf	1,w
 14749  0781  0024               	movlb	4	; select bank4
 14750  0782  0091               	movwf	17	;volatile
 14751  0783  3001               	movlw	1
 14752  0784  0023               	movlb	3	; select bank3
 14753  0785  07C4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+384),f
 14754  0786  3000               	movlw	0
 14755  0787  3DC5               	addwfc	(I2C1_ISR@pi2c_buf_ptr+1)^(0+384),f
 14756  0788  0008               	return
 14757  0789                     i1l471:	
 14758                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 14759                           
 14760                           
 14761                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 14762  0789  0024               	movlb	4	; select bank4
 14763  078A  1F16               	btfss	22,6	;volatile
 14764  078B  2F97               	goto	i1l472
 14765                           
 14766                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 14767  078C  3001               	movlw	1
 14768  078D  00FA               	movwf	??_I2C1_ISR
 14769  078E  087A               	movf	??_I2C1_ISR,w
 14770  078F  0021               	movlb	1	; select bank1
 14771  0790  07CF               	addwf	(_i2c1_object^(0+128)+4),f
 14772                           
 14773                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 14774  0791  3004               	movlw	4
 14775  0792  3192  2228         	fcall	_I2C1_Stop
 14776                           
 14777                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 14778  0794  0024               	movlb	4	; select bank4
 14779  0795  1316               	bcf	22,6	;volatile
 14780                           
 14781                           ;mcc_generated_files/i2c1.c: 495:             }
 14782  0796  0008               	return
 14783  0797                     i1l472:	
 14784                           ;mcc_generated_files/i2c1.c: 496:             else
 14785                           
 14786                           
 14787                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 14788  0797  1596               	bsf	22,3	;volatile
 14789                           
 14790                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 14791  0798  3008               	movlw	8
 14792  0799  00FA               	movwf	??_I2C1_ISR
 14793  079A  087A               	movf	??_I2C1_ISR,w
 14794  079B  0021               	movlb	1	; select bank1
 14795  079C  00ED               	movwf	_i2c1_state^(0+128)
 14796  079D  0008               	return
 14797  079E                     i1l4673:	
 14798                           
 14799                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 14800  079E  3008               	movlw	8
 14801  079F  00FA               	movwf	??_I2C1_ISR
 14802  07A0  087A               	movf	??_I2C1_ISR,w
 14803  07A1  00ED               	movwf	_i2c1_state^(0+128)
 14804                           
 14805                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 14806  07A2  0024               	movlb	4	; select bank4
 14807  07A3  1596               	bsf	22,3	;volatile
 14808                           
 14809                           ;mcc_generated_files/i2c1.c: 513:             break;
 14810  07A4  0008               	return
 14811  07A5                     i1l4677:	
 14812                           
 14813                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 14814  07A5  0023               	movlb	3	; select bank3
 14815  07A6  0844               	movf	I2C1_ISR@pi2c_buf_ptr^(0+384),w
 14816  07A7  0086               	movwf	6
 14817  07A8  0845               	movf	(I2C1_ISR@pi2c_buf_ptr+1)^(0+384),w
 14818  07A9  0087               	movwf	7
 14819  07AA  0024               	movlb	4	; select bank4
 14820  07AB  0811               	movf	17,w	;volatile
 14821  07AC  0081               	movwf	1
 14822  07AD  3001               	movlw	1
 14823  07AE  0023               	movlb	3	; select bank3
 14824  07AF  07C4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+384),f
 14825  07B0  3000               	movlw	0
 14826  07B1  3DC5               	addwfc	(I2C1_ISR@pi2c_buf_ptr+1)^(0+384),f
 14827                           
 14828                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 14829  07B2  3001               	movlw	1
 14830  07B3  0021               	movlb	1	; select bank1
 14831  07B4  02EA               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 14832  07B5  1903               	btfsc	3,2
 14833  07B6  2FBF               	goto	i1l476
 14834                           
 14835                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 14836  07B7  0024               	movlb	4	; select bank4
 14837  07B8  1296               	bcf	22,5	;volatile
 14838                           
 14839                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 14840  07B9  3006               	movlw	6
 14841  07BA  00FA               	movwf	??_I2C1_ISR
 14842  07BB  087A               	movf	??_I2C1_ISR,w
 14843  07BC  0021               	movlb	1	; select bank1
 14844  07BD  00ED               	movwf	_i2c1_state^(0+128)
 14845                           
 14846                           ;mcc_generated_files/i2c1.c: 532:             }
 14847  07BE  2FC3               	goto	i1l4689
 14848  07BF                     i1l476:	
 14849                           ;mcc_generated_files/i2c1.c: 533:             else
 14850                           
 14851                           
 14852                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 14853  07BF  0024               	movlb	4	; select bank4
 14854  07C0  1696               	bsf	22,5	;volatile
 14855                           
 14856                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 14857  07C1  3191  210A         	fcall	_I2C1_FunctionComplete
 14858  07C3                     i1l4689:	
 14859                           
 14860                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 14861  07C3  0024               	movlb	4	; select bank4
 14862  07C4  1616               	bsf	22,4	;volatile
 14863                           
 14864                           ;mcc_generated_files/i2c1.c: 545:             break;
 14865  07C5  0008               	return
 14866  07C6                     i1l4691:	
 14867                           
 14868                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14869  07C6  3000               	movlw	0
 14870  07C7  3192  2228         	fcall	_I2C1_Stop
 14871                           
 14872                           ;mcc_generated_files/i2c1.c: 552:             break;
 14873  07C9  0008               	return
 14874  07CA                     i1l4693:	
 14875                           
 14876                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 14877  07CA  3001               	movlw	1
 14878  07CB  00FA               	movwf	??_I2C1_ISR
 14879  07CC  087A               	movf	??_I2C1_ISR,w
 14880  07CD  07CF               	addwf	(_i2c1_object^(0+128)+4),f
 14881                           
 14882                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 14883  07CE  3006               	movlw	6
 14884  07CF  3192  2228         	fcall	_I2C1_Stop
 14885                           
 14886                           ;mcc_generated_files/i2c1.c: 560:             break;
 14887  07D1  0008               	return
 14888  07D2                     i1l4699:	
 14889  07D2  0021               	movlb	1	; select bank1
 14890  07D3  086D               	movf	_i2c1_state^(0+128),w
 14891  07D4  00FA               	movwf	??_I2C1_ISR
 14892  07D5  01FB               	clrf	??_I2C1_ISR+1
 14893                           
 14894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14895                           ; Switch size 1, requested type "simple"
 14896                           ; Number of cases is 1, Range of values is 0 to 0
 14897                           ; switch strategies available:
 14898                           ; Name         Instructions Cycles
 14899                           ; simple_byte            4     3 (average)
 14900                           ; direct_byte            8     6 (fixed)
 14901                           ; jumptable            260     6 (fixed)
 14902                           ;	Chosen strategy is simple_byte
 14903  07D6  087B               	movf	??_I2C1_ISR+1,w
 14904  07D7  3A00               	xorlw	0	; case 0
 14905  07D8  1903               	skipnz
 14906  07D9  2FDB               	goto	i1l6103
 14907  07DA  2FCA               	goto	i1l4693
 14908  07DB                     i1l6103:	
 14909                           
 14910                           ; Switch size 1, requested type "simple"
 14911                           ; Number of cases is 11, Range of values is 0 to 11
 14912                           ; switch strategies available:
 14913                           ; Name         Instructions Cycles
 14914                           ; direct_byte           30     6 (fixed)
 14915                           ; simple_byte           34    18 (average)
 14916                           ; jumptable            260     6 (fixed)
 14917                           ;	Chosen strategy is simple_byte
 14918  07DB  087A               	movf	??_I2C1_ISR,w
 14919  07DC  3A00               	xorlw	0	; case 0
 14920  07DD  1903               	skipnz
 14921  07DE  2EB7               	goto	i1l442
 14922  07DF  3A01               	xorlw	1	; case 1
 14923  07E0  1903               	skipnz
 14924  07E1  2EE6               	goto	i1l447
 14925  07E2  3A03               	xorlw	3	; case 2
 14926  07E3  1903               	skipnz
 14927  07E4  2F2E               	goto	i1l4619
 14928  07E5  3A01               	xorlw	1	; case 3
 14929  07E6  1903               	skipnz
 14930  07E7  2F58               	goto	i1l464
 14931  07E8  3A07               	xorlw	7	; case 4
 14932  07E9  1903               	skipnz
 14933  07EA  2FC6               	goto	i1l4691
 14934  07EB  3A01               	xorlw	1	; case 5
 14935  07EC  1903               	skipnz
 14936  07ED  2F89               	goto	i1l471
 14937  07EE  3A03               	xorlw	3	; case 6
 14938  07EF  1903               	skipnz
 14939  07F0  2F9E               	goto	i1l4673
 14940  07F1  3A01               	xorlw	1	; case 7
 14941  07F2  1903               	skipnz
 14942  07F3  2FC6               	goto	i1l4691
 14943  07F4  3A0F               	xorlw	15	; case 8
 14944  07F5  1903               	skipnz
 14945  07F6  2FA5               	goto	i1l4677
 14946  07F7  3A02               	xorlw	2	; case 10
 14947  07F8  1903               	skipnz
 14948  07F9  2EE7               	goto	i1l448
 14949  07FA  3A01               	xorlw	1	; case 11
 14950  07FB  1903               	skipnz
 14951  07FC  2F09               	goto	i1l453
 14952  07FD  2FCA               	goto	i1l4693
 14953  07FE  0008               	return
 14954  07FF                     __end_of_I2C1_ISR:	
 14955                           
 14956                           	psect	text63
 14957  1228                     __ptext63:	
 14958 ;; *************** function _I2C1_Stop *****************
 14959 ;; Defined at:
 14960 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  completion_c    1    wreg     enum E6644
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  completion_c    1    2[COMMON] enum E6644
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      void 
 14967 ;; Registers used:
 14968 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;Total ram usage:        3 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; This function calls:
 14981 ;;		Nothing
 14982 ;; This function is called by:
 14983 ;;		_I2C1_ISR
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987                           
 14988                           ;psect for function _I2C1_Stop
 14989  1228                     _I2C1_Stop:	
 14990                           
 14991                           ;incstack = 0
 14992                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 14993                           ;I2C1_Stop@completion_code stored from wreg
 14994  1228  00F9               	movwf	I2C1_Stop@completion_code
 14995                           
 14996                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 14997  1229  0024               	movlb	4	; select bank4
 14998  122A  1516               	bsf	22,2	;volatile
 14999                           
 15000                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 15001  122B  0021               	movlb	1	; select bank1
 15002  122C  086B               	movf	_p_i2c1_current^(0+128),w
 15003  122D  3E03               	addlw	3
 15004  122E  0086               	movwf	6
 15005  122F  3001               	movlw	1	; select bank2/3
 15006  1230  0087               	movwf	7
 15007  1231  0016               	moviw fsr1++
 15008  1232  0401               	iorwf	1,w
 15009  1233  1903               	btfsc	3,2
 15010  1234  2A44               	goto	i1l4163
 15011                           
 15012                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 15013  1235  086B               	movf	_p_i2c1_current^(0+128),w
 15014  1236  3E03               	addlw	3
 15015  1237  0086               	movwf	6
 15016  1238  3001               	movlw	1	; select bank2/3
 15017  1239  0087               	movwf	7
 15018  123A  3F40               	moviw [0]fsr1
 15019  123B  00F7               	movwf	??_I2C1_Stop
 15020  123C  3F41               	moviw [1]fsr1
 15021  123D  00F8               	movwf	??_I2C1_Stop+1
 15022  123E  0877               	movf	??_I2C1_Stop,w
 15023  123F  0086               	movwf	6
 15024  1240  0878               	movf	??_I2C1_Stop+1,w
 15025  1241  0087               	movwf	7
 15026  1242  0879               	movf	I2C1_Stop@completion_code,w
 15027  1243  0081               	movwf	1
 15028  1244                     i1l4163:	
 15029                           
 15030                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 15031  1244  01ED               	clrf	_i2c1_state^(0+128)
 15032  1245  0008               	return
 15033  1246                     __end_of_I2C1_Stop:	
 15034                           
 15035                           	psect	text64
 15036  110A                     __ptext64:	
 15037 ;; *************** function _I2C1_FunctionComplete *****************
 15038 ;; Defined at:
 15039 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;		None
 15042 ;; Auto vars:     Size  Location     Type
 15043 ;;		None
 15044 ;; Return value:  Size  Location     Type
 15045 ;;                  1    wreg      void 
 15046 ;; Registers used:
 15047 ;;		wreg, status,2, status,0
 15048 ;; Tracked objects:
 15049 ;;		On entry : 0/0
 15050 ;;		On exit  : 0/0
 15051 ;;		Unchanged: 0/0
 15052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15057 ;;Total ram usage:        1 bytes
 15058 ;; Hardware stack levels used:    1
 15059 ;; This function calls:
 15060 ;;		Nothing
 15061 ;; This function is called by:
 15062 ;;		_I2C1_ISR
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066                           
 15067                           ;psect for function _I2C1_FunctionComplete
 15068  110A                     _I2C1_FunctionComplete:	
 15069                           
 15070                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 15071                           
 15072                           ;incstack = 0
 15073                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 15074  110A  3005               	movlw	5
 15075  110B  0021               	movlb	1	; select bank1
 15076  110C  07D8               	addwf	_p_i2c1_trb_current^(0+128),f
 15077  110D  3000               	movlw	0
 15078  110E  3DD9               	addwfc	(_p_i2c1_trb_current+1)^(0+128),f
 15079                           
 15080                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 15081  110F  3001               	movlw	1
 15082  1110  02EC               	subwf	_i2c1_trb_count^(0+128),f
 15083  1111  1D03               	btfss	3,2
 15084  1112  2918               	goto	i1l483
 15085                           
 15086                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 15087  1113  3004               	movlw	4
 15088  1114  00F7               	movwf	??_I2C1_FunctionComplete
 15089  1115  0877               	movf	??_I2C1_FunctionComplete,w
 15090  1116  00ED               	movwf	_i2c1_state^(0+128)
 15091                           
 15092                           ;mcc_generated_files/i2c1.c: 575:     }
 15093  1117  0008               	return
 15094  1118                     i1l483:	
 15095                           ;mcc_generated_files/i2c1.c: 576:     else
 15096                           
 15097                           
 15098                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 15099  1118  01ED               	clrf	_i2c1_state^(0+128)
 15100  1119  0AED               	incf	_i2c1_state^(0+128),f
 15101  111A  0008               	return
 15102  111B                     __end_of_I2C1_FunctionComplete:	
 15103                           
 15104                           	psect	text65
 15105  102F                     __ptext65:	
 15106 ;; *************** function _I2C1_BusCollisionISR *****************
 15107 ;; Defined at:
 15108 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 15109 ;; Parameters:    Size  Location     Type
 15110 ;;		None
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;		None
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  1    wreg      void 
 15115 ;; Registers used:
 15116 ;;		None
 15117 ;; Tracked objects:
 15118 ;;		On entry : 0/0
 15119 ;;		On exit  : 0/0
 15120 ;;		Unchanged: 0/0
 15121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15126 ;;Total ram usage:        0 bytes
 15127 ;; Hardware stack levels used:    1
 15128 ;; This function calls:
 15129 ;;		Nothing
 15130 ;; This function is called by:
 15131 ;;		_INTERRUPT_InterruptManager
 15132 ;; This function uses a non-reentrant model
 15133 ;;
 15134                           
 15135                           
 15136                           ;psect for function _I2C1_BusCollisionISR
 15137  102F                     _I2C1_BusCollisionISR:	
 15138                           
 15139                           ;mcc_generated_files/i2c1.c: 745:  PIR1bits.BCL1IF = 0;
 15140                           
 15141                           ;incstack = 0
 15142                           ; Regs used in _I2C1_BusCollisionISR: []
 15143  102F  0020               	movlb	0	; select bank0
 15144  1030  1111               	bcf	17,2	;volatile
 15145  1031  0008               	return
 15146  1032                     __end_of_I2C1_BusCollisionISR:	
 15147                           
 15148                           	psect	text66
 15149  1265                     __ptext66:	
 15150 ;; *************** function _EUSART_Transmit_ISR *****************
 15151 ;; Defined at:
 15152 ;;		line 221 in file "mcc_generated_files/eusart.c"
 15153 ;; Parameters:    Size  Location     Type
 15154 ;;		None
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;		None
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      void 
 15159 ;; Registers used:
 15160 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;Total ram usage:        1 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; This function calls:
 15173 ;;		Nothing
 15174 ;; This function is called by:
 15175 ;;		_EUSART_Initialize
 15176 ;;		_INTERRUPT_InterruptManager
 15177 ;; This function uses a non-reentrant model
 15178 ;;
 15179                           
 15180                           
 15181                           ;psect for function _EUSART_Transmit_ISR
 15182  1265                     _EUSART_Transmit_ISR:	
 15183                           
 15184                           ;mcc_generated_files/eusart.c: 225:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 15185                           
 15186                           ;incstack = 0
 15187                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15188  1265  3040               	movlw	64
 15189  1266  0023               	movlb	3	; select bank3
 15190  1267  026B               	subwf	_eusartTxBufferRemaining^(0+384),w	;volatile
 15191  1268  1803               	skipnc
 15192  1269  2A82               	goto	i1l307
 15193                           
 15194                           ;mcc_generated_files/eusart.c: 226:     {;mcc_generated_files/eusart.c: 227:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 15195  126A  0021               	movlb	1	; select bank1
 15196  126B  086F               	movf	_eusartTxTail^(0+128),w
 15197  126C  3E20               	addlw	(low (_eusartTxBuffer| (0+1024)))& (0+255)
 15198  126D  0086               	movwf	6
 15199  126E  3004               	movlw	4	; select bank8/9
 15200  126F  0087               	movwf	7
 15201  1270  0801               	movf	1,w
 15202  1271  0023               	movlb	3	; select bank3
 15203  1272  009A               	movwf	26	;volatile
 15204  1273  3001               	movlw	1
 15205  1274  00F7               	movwf	??_EUSART_Transmit_ISR
 15206  1275  0877               	movf	??_EUSART_Transmit_ISR,w
 15207  1276  0021               	movlb	1	; select bank1
 15208  1277  07EF               	addwf	_eusartTxTail^(0+128),f	;volatile
 15209                           
 15210                           ;mcc_generated_files/eusart.c: 228:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15211  1278  3040               	movlw	64
 15212  1279  026F               	subwf	_eusartTxTail^(0+128),w	;volatile
 15213  127A  1803               	btfsc	3,0
 15214                           
 15215                           ;mcc_generated_files/eusart.c: 229:         {;mcc_generated_files/eusart.c: 230:        
      +                               eusartTxTail = 0;
 15216  127B  01EF               	clrf	_eusartTxTail^(0+128)	;volatile
 15217                           
 15218                           ;mcc_generated_files/eusart.c: 232:         eusartTxBufferRemaining++;
 15219  127C  3001               	movlw	1
 15220  127D  00F7               	movwf	??_EUSART_Transmit_ISR
 15221  127E  0877               	movf	??_EUSART_Transmit_ISR,w
 15222  127F  0023               	movlb	3	; select bank3
 15223  1280  07EB               	addwf	_eusartTxBufferRemaining^(0+384),f	;volatile
 15224                           
 15225                           ;mcc_generated_files/eusart.c: 233:     }
 15226  1281  0008               	return
 15227  1282                     i1l307:	
 15228                           ;mcc_generated_files/eusart.c: 234:     else
 15229                           
 15230                           
 15231                           ;mcc_generated_files/eusart.c: 235:     {;mcc_generated_files/eusart.c: 236:         PIE
      +                          1bits.TXIE = 0;
 15232  1282  0021               	movlb	1	; select bank1
 15233  1283  1211               	bcf	17,4	;volatile
 15234  1284  0008               	return
 15235  1285                     __end_of_EUSART_Transmit_ISR:	
 15236                           
 15237                           	psect	text67
 15238  1390                     __ptext67:	
 15239 ;; *************** function _EUSART_Receive_ISR *****************
 15240 ;; Defined at:
 15241 ;;		line 240 in file "mcc_generated_files/eusart.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;		None
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;		None
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  1    wreg      void 
 15248 ;; Registers used:
 15249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15259 ;;Total ram usage:        0 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:    2
 15262 ;; This function calls:
 15263 ;;		Absolute function
 15264 ;;		_EUSART_DefaultErrorHandler
 15265 ;;		_EUSART_DefaultFramingErrorHandler
 15266 ;;		_EUSART_DefaultOverrunErrorHandler
 15267 ;;		_EUSART_RxDataHandler
 15268 ;; This function is called by:
 15269 ;;		_EUSART_Initialize
 15270 ;;		_INTERRUPT_InterruptManager
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           
 15275                           ;psect for function _EUSART_Receive_ISR
 15276  1390                     _EUSART_Receive_ISR:	
 15277                           
 15278                           ;mcc_generated_files/eusart.c: 243:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15279                           
 15280                           ;incstack = 0
 15281                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15282  1390  0873               	movf	_eusartRxHead,w	;volatile
 15283  1391  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 15284  1392  0086               	movwf	6
 15285  1393  3003               	movlw	3	; select bank6/7
 15286  1394  0087               	movwf	7
 15287  1395  0181               	clrf	1
 15288                           
 15289                           ;mcc_generated_files/eusart.c: 245:     if(RC1STAbits.FERR){
 15290  1396  0023               	movlb	3	; select bank3
 15291  1397  1D1D               	btfss	29,2	;volatile
 15292  1398  2BA4               	goto	i1l4543
 15293                           
 15294                           ;mcc_generated_files/eusart.c: 246:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15295  1399  0873               	movf	_eusartRxHead,w	;volatile
 15296  139A  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 15297  139B  0086               	movwf	6
 15298  139C  3003               	movlw	3	; select bank6/7
 15299  139D  0087               	movwf	7
 15300  139E  1481               	bsf	1,1
 15301                           
 15302                           ;mcc_generated_files/eusart.c: 247:         EUSART_FramingErrorHandler();
 15303  139F  0866               	movf	(_EUSART_FramingErrorHandler+1)^(0+384),w
 15304  13A0  008A               	movwf	10
 15305  13A1  0865               	movf	_EUSART_FramingErrorHandler^(0+384),w
 15306  13A2  000A               	callw
 15307  13A3  3193               	pagesel	$
 15308  13A4                     i1l4543:	
 15309                           
 15310                           ;mcc_generated_files/eusart.c: 250:     if(RC1STAbits.OERR){
 15311  13A4  0023               	movlb	3	; select bank3
 15312  13A5  1C9D               	btfss	29,1	;volatile
 15313  13A6  2BB2               	goto	i1l4549
 15314                           
 15315                           ;mcc_generated_files/eusart.c: 251:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15316  13A7  0873               	movf	_eusartRxHead,w	;volatile
 15317  13A8  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 15318  13A9  0086               	movwf	6
 15319  13AA  3003               	movlw	3	; select bank6/7
 15320  13AB  0087               	movwf	7
 15321  13AC  1501               	bsf	1,2
 15322                           
 15323                           ;mcc_generated_files/eusart.c: 252:         EUSART_OverrunErrorHandler();
 15324  13AD  0864               	movf	(_EUSART_OverrunErrorHandler+1)^(0+384),w
 15325  13AE  008A               	movwf	10
 15326  13AF  0863               	movf	_EUSART_OverrunErrorHandler^(0+384),w
 15327  13B0  000A               	callw
 15328  13B1  3193               	pagesel	$
 15329  13B2                     i1l4549:	
 15330                           
 15331                           ;mcc_generated_files/eusart.c: 255:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15332  13B2  0873               	movf	_eusartRxHead,w	;volatile
 15333  13B3  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+768)))& (0+255)
 15334  13B4  0086               	movwf	6
 15335  13B5  3003               	movlw	3	; select bank6/7
 15336  13B6  0087               	movwf	7
 15337  13B7  0801               	movf	1,w
 15338  13B8  1903               	btfsc	3,2
 15339  13B9  2BC1               	goto	i1l4553
 15340                           
 15341                           ;mcc_generated_files/eusart.c: 256:         EUSART_ErrorHandler();
 15342  13BA  0023               	movlb	3	; select bank3
 15343  13BB  0862               	movf	(_EUSART_ErrorHandler+1)^(0+384),w
 15344  13BC  008A               	movwf	10
 15345  13BD  0861               	movf	_EUSART_ErrorHandler^(0+384),w
 15346  13BE  000A               	callw
 15347  13BF  3193               	pagesel	$
 15348                           
 15349                           ;mcc_generated_files/eusart.c: 257:     } else {
 15350  13C0  0008               	return
 15351  13C1                     i1l4553:	
 15352                           
 15353                           ;mcc_generated_files/eusart.c: 258:         EUSART_RxDataHandler();
 15354  13C1  3191  2158         	fcall	_EUSART_RxDataHandler
 15355  13C3  0008               	return
 15356  13C4                     __end_of_EUSART_Receive_ISR:	
 15357                           
 15358                           	psect	text68
 15359  1032                     __ptext68:	
 15360 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15361 ;; Defined at:
 15362 ;;		line 276 in file "mcc_generated_files/eusart.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;		None
 15365 ;; Auto vars:     Size  Location     Type
 15366 ;;		None
 15367 ;; Return value:  Size  Location     Type
 15368 ;;                  1    wreg      void 
 15369 ;; Registers used:
 15370 ;;		None
 15371 ;; Tracked objects:
 15372 ;;		On entry : 0/0
 15373 ;;		On exit  : 0/0
 15374 ;;		Unchanged: 0/0
 15375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;Total ram usage:        0 bytes
 15381 ;; Hardware stack levels used:    1
 15382 ;; This function calls:
 15383 ;;		Nothing
 15384 ;; This function is called by:
 15385 ;;		_EUSART_Initialize
 15386 ;;		_EUSART_Receive_ISR
 15387 ;; This function uses a non-reentrant model
 15388 ;;
 15389                           
 15390                           
 15391                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15392  1032                     _EUSART_DefaultOverrunErrorHandler:	
 15393                           
 15394                           ;mcc_generated_files/eusart.c: 279:     RC1STAbits.CREN = 0;
 15395                           
 15396                           ;incstack = 0
 15397                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15398  1032  0023               	movlb	3	; select bank3
 15399  1033  121D               	bcf	29,4	;volatile
 15400                           
 15401                           ;mcc_generated_files/eusart.c: 280:     RC1STAbits.CREN = 1;
 15402  1034  161D               	bsf	29,4	;volatile
 15403  1035  0008               	return
 15404  1036                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 15405                           
 15406                           	psect	text69
 15407  0403                     __ptext69:	
 15408 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15409 ;; Defined at:
 15410 ;;		line 274 in file "mcc_generated_files/eusart.c"
 15411 ;; Parameters:    Size  Location     Type
 15412 ;;		None
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;		None
 15415 ;; Return value:  Size  Location     Type
 15416 ;;                  1    wreg      void 
 15417 ;; Registers used:
 15418 ;;		None
 15419 ;; Tracked objects:
 15420 ;;		On entry : 0/0
 15421 ;;		On exit  : 0/0
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;Total ram usage:        0 bytes
 15429 ;; Hardware stack levels used:    1
 15430 ;; This function calls:
 15431 ;;		Nothing
 15432 ;; This function is called by:
 15433 ;;		_EUSART_Initialize
 15434 ;;		_EUSART_Receive_ISR
 15435 ;; This function uses a non-reentrant model
 15436 ;;
 15437                           
 15438                           
 15439                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15440  0403                     _EUSART_DefaultFramingErrorHandler:	
 15441                           
 15442                           ;incstack = 0
 15443                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15444  0403  0008               	return
 15445  0404                     __end_of_EUSART_DefaultFramingErrorHandler:	
 15446                           
 15447                           	psect	text70
 15448  102C                     __ptext70:	
 15449 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15450 ;; Defined at:
 15451 ;;		line 284 in file "mcc_generated_files/eusart.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;		None
 15454 ;; Auto vars:     Size  Location     Type
 15455 ;;		None
 15456 ;; Return value:  Size  Location     Type
 15457 ;;                  1    wreg      void 
 15458 ;; Registers used:
 15459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15460 ;; Tracked objects:
 15461 ;;		On entry : 0/0
 15462 ;;		On exit  : 0/0
 15463 ;;		Unchanged: 0/0
 15464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;Total ram usage:        0 bytes
 15470 ;; Hardware stack levels used:    1
 15471 ;; Hardware stack levels required when called:    1
 15472 ;; This function calls:
 15473 ;;		_EUSART_RxDataHandler
 15474 ;; This function is called by:
 15475 ;;		_EUSART_Initialize
 15476 ;;		_EUSART_Receive_ISR
 15477 ;; This function uses a non-reentrant model
 15478 ;;
 15479                           
 15480                           
 15481                           ;psect for function _EUSART_DefaultErrorHandler
 15482  102C                     _EUSART_DefaultErrorHandler:	
 15483                           
 15484                           ;mcc_generated_files/eusart.c: 285:     EUSART_RxDataHandler();
 15485                           
 15486                           ;incstack = 0
 15487                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15488  102C  3191  2158         	fcall	_EUSART_RxDataHandler
 15489  102E  0008               	return
 15490  102F                     __end_of_EUSART_DefaultErrorHandler:	
 15491                           
 15492                           	psect	text71
 15493  1158                     __ptext71:	
 15494 ;; *************** function _EUSART_RxDataHandler *****************
 15495 ;; Defined at:
 15496 ;;		line 264 in file "mcc_generated_files/eusart.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;		None
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  1    wreg      void 
 15503 ;; Registers used:
 15504 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;Total ram usage:        1 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; This function calls:
 15517 ;;		Nothing
 15518 ;; This function is called by:
 15519 ;;		_EUSART_Receive_ISR
 15520 ;;		_EUSART_DefaultErrorHandler
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           
 15525                           ;psect for function _EUSART_RxDataHandler
 15526  1158                     _EUSART_RxDataHandler:	
 15527                           
 15528                           ;mcc_generated_files/eusart.c: 266:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 15529                           
 15530                           ;incstack = 0
 15531                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15532  1158  0023               	movlb	3	; select bank3
 15533  1159  0819               	movf	25,w	;volatile
 15534  115A  00F7               	movwf	??_EUSART_RxDataHandler
 15535  115B  0873               	movf	_eusartRxHead,w
 15536  115C  3EA0               	addlw	(low (_eusartRxBuffer| (0+768)))& (0+255)
 15537  115D  0086               	movwf	6
 15538  115E  3003               	movlw	3	; select bank7/8
 15539  115F  0087               	movwf	7
 15540  1160  0877               	movf	??_EUSART_RxDataHandler,w
 15541  1161  0081               	movwf	1
 15542  1162  3001               	movlw	1
 15543  1163  00F7               	movwf	??_EUSART_RxDataHandler
 15544  1164  0877               	movf	??_EUSART_RxDataHandler,w
 15545  1165  07F3               	addwf	_eusartRxHead,f	;volatile
 15546                           
 15547                           ;mcc_generated_files/eusart.c: 267:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15548  1166  3040               	movlw	64
 15549  1167  0273               	subwf	_eusartRxHead,w	;volatile
 15550  1168  1803               	btfsc	3,0
 15551                           
 15552                           ;mcc_generated_files/eusart.c: 268:     {;mcc_generated_files/eusart.c: 269:         eus
      +                          artRxHead = 0;
 15553  1169  01F3               	clrf	_eusartRxHead	;volatile
 15554                           
 15555                           ;mcc_generated_files/eusart.c: 271:     eusartRxCount++;
 15556  116A  3001               	movlw	1
 15557  116B  00F7               	movwf	??_EUSART_RxDataHandler
 15558  116C  0877               	movf	??_EUSART_RxDataHandler,w
 15559  116D  0022               	movlb	2	; select bank2
 15560  116E  07EF               	addwf	_eusartRxCount^(0+256),f	;volatile
 15561  116F  0008               	return
 15562  1170                     __end_of_EUSART_RxDataHandler:	
 15563  007E                     btemp	set	126	;btemp
 15564  007E                     int$flags	set	126
 15565  007E                     wtemp0	set	126


Data Sizes:
    Strings     56
    Constant    0
    Data        11
    BSS         521
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     43      80
    BANK2            80     66      80
    BANK3            80      0      76
    BANK4            80      0      75
    BANK5            80      0      80
    BANK6            80      0      64
    BANK7            80      0      64
    BANK8            80      0      64
    BANK9            80      0      64
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    I2C1_RBlk@readTRB.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    I2C1_WBlk@WriteTRB.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E6644 size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_2(CODE[34]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1818_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 64
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_Uart@rcv_Buff(BANK2[64]), 

    memset@s	PTR unsigned char  size(2) Largest target is 64
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_Uart@rcv_Buff(BANK2[64]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_2(CODE[34]), STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_2(CODE[34]), STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    sp__memset	PTR void  size(2) Largest target is 64
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_Uart@rcv_Buff(BANK2[64]), 

    UART_Write_Buffer@sendBuff	PTR unsigned char  size(1) Largest target is 16
		 -> UartResponse_Err@sendBuff(BANK0[1]), UartResponse_WriteCmd@sendBuff(BANK1[4]), UartResponse_ReadCmd@sendBuff(BANK1[16]), 

    I2C1_WBlk@pData	PTR unsigned char  size(1) Largest target is 2
		 -> UartResponse_WriteCmd@data(BANK1[2]), 

    I2C1_RBlk@pData	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), RAM(DATA[4096]), 

    I2C1_RBlk@wblk	PTR unsigned char  size(1) Largest target is 1
		 -> Handler_I2c@Reg(BANK0[1]), UartResponse_ReadCmd@reg(BANK1[1]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 2
		 -> Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    I2C1_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), RAM(DATA[4096]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    I2C1_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E6644 size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E6644 size(1) Largest target is 1
		 -> I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    F6755.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    F6749.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 
		 -> NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E6644 size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    S582$pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    S594$pTrFlag	PTR enum E6644 size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E6644 size(2) Largest target is 4096
		 -> Handler_I2c@ReadBuffer(BANK0[2]), Handler_I2c@Reg(BANK0[1]), UartResponse_WriteCmd@data(BANK1[2]), UartResponse_ReadCmd@reg(BANK1[1]), 
		 -> RAM(DATA[4096]), I2C1_WBlk@status(BANK0[1]), I2C1_RBlk@status(BANK0[1]), 

    S594$ptrb_list	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 10
		 -> I2C1_WBlk@WriteTRB(BANK0[5]), I2C1_RBlk@readTRB(BANK3[10]), I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[5]), NULL(NULL[0]), 

    S605$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[5]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[5]), 

    S605$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[5]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[5]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_Read_N@rcv_Buff	PTR unsigned char  size(1) Largest target is 64
		 -> Handler_Uart@rcv_Buff(BANK2[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _init->_DATAEE_WriteByte
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _UartResponse_WriteCmd->_printf
    _I2C1_WBlk->_I2C1_MasterWriteTRBBuild
    _UartResponse_ReadCmd->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _UartResponse_Err->_UART_Write_Buffer
    _UART_Write_Buffer->_EUSART_Write
    _Handler_I2c->_I2C1_RBlk
    ___awdiv->___wmul
    _PWM6_LoadDutyValue->___awdiv
    _PWM5_LoadDutyValue->___awdiv
    _I2C1_RBlk->_I2C1_MasterReadTRBBuild
    _I2C1_RBlk->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Handler_Uart
    _Handler_Uart->_UartResponse_ReadCmd
    _UartResponse_WriteCmd->_printf
    _UartResponse_ReadCmd->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Handler_Uart

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   43805
                                             41 BANK1      2     2      0
                        _Handler_I2c
                       _Handler_Uart
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                36    36      0    2777
                                              4 BANK0     36    36      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     726
                     _ADC_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     605
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handler_Uart                                        68    68      0   32760
                                             39 BANK1      2     2      0
                                              0 BANK2     66    66      0
                      _EUSART_Read_N
                   _UartResponse_Err
               _UartResponse_ReadCmd
              _UartResponse_WriteCmd
                             _memset
 ---------------------------------------------------------------------------------
 (2) _UartResponse_WriteCmd                               13    12      1   15138
                                             12 BANK1     13    12      1
                   _DATAEE_WriteByte
                   _EraseResetVector
                          _I2C1_WBlk
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                _Signal_BL_Requested
                  _UART_Write_Buffer
                            ___awdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Signal_BL_Requested                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_WBlk                                           14     9      5    2674
                                              8 BANK0     14     9      5
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _EraseResetVector                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     847
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _UartResponse_ReadCmd                                27    27      0   15184
                                             12 BANK1     27    27      0
                  _ADC_GetConversion
                    _DATAEE_ReadByte
                          _I2C1_RBlk
                  _UART_Write_Buffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6    7468
                                             79 BANK0      1     1      0
                                              3 BANK1      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     5      3    7207
                                             74 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           40    38      2    6769
                                             58 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                30    22      8    5029
                                             28 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     6      3    3177
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     7      1    1429
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3    1037
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _UartResponse_Err                                     2     2      0     733
                                              7 BANK0      2     2      0
                  _UART_Write_Buffer
 ---------------------------------------------------------------------------------
 (3) _UART_Write_Buffer                                    5     4      1     696
                                              2 BANK0      5     4      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read_N                                        3     3      0      81
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Handler_I2c                                          8     8      0    8268
                                             21 BANK0      8     8      0
                          _I2C1_RBlk
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___aldiv
                            ___awdiv
                             ___lmul
                             ___wmul
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              14     8      6    1097
                                              0 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     856
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     196
                                             15 BANK0      4     2      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     196
                                             15 BANK0      4     2      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2C1_RBlk                                           13     4      9    3984
                                              8 BANK0     13     4      9
            _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             8     2      6    1116
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 5     2      3     906
                                              0 BANK0      5     2      3
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (5) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterReadTRBBuild                              8     3      5     676
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0      22
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_ISR                                            4     4      0      22
                                              3 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (14) _I2C1_Stop                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Handler_I2c
     _I2C1_RBlk
       _I2C1_MasterReadTRBBuild
       _I2C1_MasterTRBInsert
         _I2C1_WaitForLastPacketToComplete
       _I2C1_MasterWriteTRBBuild
     _PWM5_LoadDutyValue
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _PWM6_LoadDutyValue
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___aldiv
     ___awdiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _memset
   _Handler_Uart
     _EUSART_Read_N
     _UartResponse_Err
       _UART_Write_Buffer
         _EUSART_Write
     _UartResponse_ReadCmd
       _ADC_GetConversion
       _DATAEE_ReadByte
       _I2C1_RBlk
         _I2C1_MasterReadTRBBuild
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
       _UART_Write_Buffer
         _EUSART_Write
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART_Write
                 _strlen
             _fputc
               _putch
                 _EUSART_Write
     _UartResponse_WriteCmd
       _DATAEE_WriteByte
       _EraseResetVector
       _I2C1_WBlk
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
       _PWM5_LoadDutyValue
         ___awdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _PWM6_LoadDutyValue
         ___awdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _Signal_BL_Requested
       _UART_Write_Buffer
         _EUSART_Write
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART_Write
                 _strlen
             _fputc
               _putch
                 _EUSART_Write
     _memset
   _init
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _SYSTEM_Initialize
       _ADC_Initialize
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _I2C1_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _PWM5_Initialize
       _PWM6_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
       _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2B      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     42      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4C      11       95.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4B      13       93.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      50      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     2E5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      40      22       80.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      40      24       80.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     2E5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 04 15:23:20 2020

                ?_EUSART_SetRxInterruptHandler 0020                               I2C1_RBlk@readTRB 01C6  
                   __size_of_UART_Write_Buffer 0020                                    __CFG_CP$OFF 0000  
                                 ___awdiv@sign 002C                               I2C1_RBlk@timeOut 0033  
                          ___wmul@multiplicand 0022                    __size_of_PWM6_LoadDutyValue 0019  
                                  __CFG_LVP$ON 0000                                            l154 125B  
                                          l295 131B                                            l800 1553  
                                          l812 1449                                            l661 12DE  
                                          l855 0EDE                                            _PR2 001E  
                                 __CFG_CPD$OFF 0000                                            _abs 11A2  
                       ??_EUSART_RxDataHandler 0077                                            _cmd 0220  
                                          _pad 1574                 ?_EUSART_SetFramingErrorHandler 0020  
                      __size_of_PMD_Initialize 0008                              _Default_PWM_Table 0260  
                              _TMR2_Initialize 1059                                            wreg 0009  
                          __end_of_Handler_I2c 069E                               __end_of_I2C1_ISR 07FF  
                                         l1122 158C                                           l1130 0C34  
                                         l1131 0C3B                                           ?_abs 0033  
                                         l1125 15AC                                           l1126 15B8  
                                         l1135 0C56                                           l1136 0C6A  
                                         l1171 11F8                                           l1139 0D00  
                                         l1236 1627                                           l1271 0BDC  
                                         l1284 0AE5                                           l4101 1611  
                                         l5041 1331                                           l5105 0C65  
                                         l4075 15DA                                           l4147 14A9  
                                         l5027 130F                                           l3531 0B50  
                                         l5051 1403                                           l5131 0D14  
                                         l5221 086E                                           l4093 1600  
                                         l4085 15E2                                           l4069 15CF  
                                         l4149 14DF                                           l3541 0B67  
                                         l3525 0B23                                           l5141 0D2C  
                                         l5109 0C97                                           l6101 0FC6  
                                         l5215 0861                                           l4087 15EE  
                                         l3551 0BAF                                           l3543 0B76  
                                         l5055 1426                                           l5071 1582  
                                         l5119 0C72                                           l5127 0D0C  
                                         l4097 1609                                           l3553 0BBB  
                                         l3529 0B4B                                           l5065 0804  
                                         l5081 158E                                           l5137 0D1F  
                                         l5161 0989                                           l5147 103A  
                                         l5219 0868                                           l3563 0A44  
                                         l3491 11CD                                           l5075 158A  
                                         l5235 13D1                                           l6019 11D7  
                                         l4445 17ED                                           l3581 0AB8  
                                         l5237 13F0                                           ?_pad 0033  
                                         l5423 1563                                           l4471 1638  
                                         l3575 0A79                                           l3583 0AC4  
                                         l3567 0A6C                                           l5175 09E4  
                                         l4481 1656                                           l3577 0A88  
                                         l3489 11C1                                           l5169 09C3  
                                         l5185 09F5                                           l5099 0C4E  
                                         l5179 09EA                                           l4493 1681  
                                         l5605 0F15                                           l5445 1459  
                                         l5701 0DCA                                           l4479 1648  
                                         l5631 0F80                                           l5623 0F71  
                                         l5543 0EA8                                           l4497 168F  
                                         l4489 1676                                           l5465 1289  
                                         l5619 0F5C                                           l5555 0ECC  
                                         l6099 0E7A                                           l5731 0E3C  
                                         l5803 088E                                           l5637 0F9D  
                                         l5581 0F13                                           l5557 0EF1  
                                         l5661 0FF5                                           l5719 0E10  
                                         l5751 0E72                                           l5921 0579  
                                         l5569 0F11                                           l5745 0E6C  
                                         l5729 0E38                                           l5753 0E8B  
                                         l5833 08E9                                           l5499 11F2  
                                         l5915 0562                                           l5659 0FBE  
                                         l5739 0E4C                                           l5819 08BB  
                                         l5765 1369                                           l5933 05A7  
                                         l5677 0D56                                           l5927 0590  
                                         l5943 05D0                                           l5839 0905  
                                         l5769 1373                                           l5953 0609  
                                         l5945 05D2                                           l5689 0D90  
                                         l5971 064E                                           l5939 05BE  
                                         l5883 172C                                           l5875 16F2  
                                         l5965 0637                                           l5981 0677  
                                         l5877 171E                                           l5959 0620  
                                         l5983 0679                                           l5977 0665  
                                         l5889 1741                                           STR_1 1822  
                                         STR_2 1800                                           u2105 11AC  
                                         _LATA 010C                                           u2150 0B58  
                                         _LATB 010D                                           _LATC 010E  
                                         u4000 0C0A                                           u3105 166B  
                                         u4010 0C0B                                           u3115 1677  
                                         u2185 0B9C                                           u4105 0C86  
                                         u3075 164B                                           u4115 0C92  
                                         u2605 119A                                           u2285 0AA6  
                                         u3095 1657                                           u4055 0C46  
                                         u4400 0E9F                                           u5027 11DD  
                                         u4500 0883                                           u4085 0D0A  
                                         u5037 08DF                                           u2815 15EF  
                                         u4415 0EC0                                           u5047 0E32  
                                         u2825 15F9                                           u5057 1256  
                                         u2595 1181                                           u2835 1601  
                                         u4355 1292                                           _PMD0 0911  
                                         _PMD1 0912                                           u4550 16A0  
                                         _PMD2 0913                                           u4455 1374  
                                         u4375 11F9                                           _PMD3 0914  
                                         _PMD4 0915                                           u4465 137B  
                                         u4385 11FE                                           _PMD5 0916  
                                         u2795 15E5                                           u4655 0512  
                                         u3945 1424                                           u4595 1703  
                                         u3985 1598                                           _TMR2 001D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                __end_of_I2C1_MasterReadTRBBuild 1360  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 0033                                           _dbuf 02D0  
                                         _main 11D4                                           _dtoa 0BEE  
                                         _init 087B                                           _prec 00D4  
                                         _nout 01BC                                           pad@i 0037  
                                         pad@p 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0039  
                       ??_I2C1_MasterTRBInsert 0023                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                  __CFG_BORV$LOW 0000  
                                         start 0441                                _PWM5_Initialize 10A9  
                                __CFG_CSWEN$ON 0000                                  __CFG_MCLRE$ON 0000  
                   __end_of_PWM5_LoadDutyValue 1189                 I2C1_MasterWriteTRBBuild@length 0023  
                                        ??_abs 0035                                          ??_pad 0036  
                    __size_of_DATAEE_WriteByte 0022                           __end_of_Handler_Uart 1744  
                      __end_of_TMR0_Initialize 1143                                     _i2c1_state 00ED  
               ??_TMR0_DefaultInterruptHandler 0077                                  ?_EUSART_Write 0077  
               __size_of_OSCILLATOR_Initialize 0009                      I2C1_MasterTRBInsert@count 0024  
                __end_of_OSCILLATOR_Initialize 10A0                              __end_of_I2C1_RBlk 1574  
                            __end_of_I2C1_WBlk 146A                      I2C1_MasterTRBInsert@pflag 0022  
                              __end_of___aldiv 1698                                __end_of___aodiv 0BEE  
                                        _ADACT 009F                                          ?_main 0077  
                                        ?_dtoa 003C                                __end_of___aomod 0AF7  
                                        ?_init 0077                                __end_of___awdiv 1616  
                            __end_of_I2C1_Stop 1246                                  __CFG_WDTE$OFF 0000  
                              ___awdiv@divisor 0026                                          _T2CON 001F  
                               __CFG_DEBUG$OFF 0000                                          i1l307 1282  
                                        i1l442 06B7                                          i1l370 0410  
                                        i1l453 0709                                          i1l373 041C  
                                        i1l454 0715                                          i1l382 043F  
                                        i1l471 0789                                          i1l447 06E6  
                                        i1l375 0426                                          i1l472 0797  
                                        i1l464 0758                                          i1l448 06E7  
                                        i1l377 0433                                          i1l483 1118  
                                        i1l476 07BF                                          i1l468 0778  
                                _EUSART_Read_N 14A5                                ___awdiv@counter 002B  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 005A  
                                        _TMR0H 0016                                          _TMR0L 0015  
                                        _TRISA 008C                                          _PWM_1 00E3  
                                        _TRISB 008D                                          _PWM_2 00E2  
                                        _TRISC 008E                                          _PWM_3 00E1  
                                        _PWM_4 00E0                                          _PWM_5 00DF  
                                        _PWM_6 00DE                                          _RXPPS 0E24  
            __size_of_TMR0_SetInterruptHandler 0009                   __end_of_I2C1_BusCollisionISR 1032  
                              _PWM6_Initialize 10B3                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                              ??_I2C1_Initialize 0020  
                             __end_of_TMR0_ISR 112F                                _DATAEE_ReadByte 10EC  
                                        _flags 00D6                                 _WDT_Initialize 1036  
                                        _fputc 13F9                                          _fputs 0800  
                                        pad@fp 003B                                          _width 01BE  
                                        _putch 103F                                          dtoa@d 003C  
                                        dtoa@i 0058                                          dtoa@n 0050  
                                        dtoa@p 004A                                          dtoa@s 004E  
                                        dtoa@w 004C                                          init@i 0046  
                    UartResponse_WriteCmd@data 00B1                                          pclath 000A  
                    UartResponse_WriteCmd@type 00B4                                          status 0003  
                                        wtemp0 007E                I2C1_MasterWriteTRBBuild@address 0024  
                              __initialization 0443                                   __end_of_main 11EF  
                                 __end_of_dtoa 0D3F                                   __end_of_init 0947  
                               ??_EUSART_Write 0020                        __end_of_TMR2_Initialize 1061  
                  ?_INTERRUPT_InterruptManager 0077                 ??_EUSART_SetRxInterruptHandler 0022  
                                  _i2c1_object 00CB                                         ??_main 00C9  
                                       ??_dtoa 0044                                    _Handler_I2c 04A1  
                                       ??_init 0024                                 ?_EUSART_Read_N 0077  
                     __end_of_UartResponse_Err 10D3                         __end_of_WDT_Initialize 103A  
                        UART_Write_Buffer@size 0022                            _Signal_BL_Requested 10FB  
    __end_of_EUSART_DefaultFramingErrorHandler 0404     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0077             ?_EUSART_DefaultFramingErrorHandler 0077  
            _EUSART_DefaultFramingErrorHandler 0403                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 01E3  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _ADRESH 009C                                         _ADRESL 009B  
                             ___awdiv@dividend 0028                                         _ANSELA 018C  
                                       ?_putch 0077                                         _ANSELB 018D  
                                       _ANSELC 018E                             __CFG_RSTOSC$HFINT1 0000  
                                       _T0CON0 0017                                         _T0CON1 0018  
                                       _RC1REG 0199                                         _RA4PPS 0E94  
                                       _RA5PPS 0E95                                         _RC1STA 019D  
                               __p_NVFlag_text 1FFF                                         _RB7PPS 0E9F  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _RC6PPS 0EA6                                         _ODCONC 028E  
                                       _RC7PPS 0EA7                                         i1l4163 1244  
                      __end_of_PWM5_Initialize 10B3                                         i1l6103 07DB  
                                       i1l4605 0703                                         i1l4543 13A4  
                                       i1l4553 13C1                                         i1l4651 0766  
                                       i1l4619 072E                                         i1l4549 13B2  
                                       i1l4661 077B                                         i1l4637 074D  
                                       i1l4591 06E0                                         i1l4673 079E  
                                       i1l4691 07C6                                         i1l4587 06D9  
                                       i1l4693 07CA                                         i1l4677 07A5  
                                       i1l4599 06F3                                         i1l4689 07C3  
                                       i1l4699 07D2                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                             I2C1_WBlk@timeOut 002F                                         _OSCFRQ 091F  
                            ?_EraseResetVector 0077                                         u212lld 0B20  
                                       u223lld 0A41                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                                       _NVFlag 1FFF                             ??_EraseResetVector 0020  
                               __CFG_PWRTE$OFF 0000                           ?_Signal_BL_Requested 0077  
                                       _Temp_1 00DB                                         _Temp_2 016D  
                                       _Temp_3 016C                                         _Temp_4 016B  
                                       _Temp_5 016A                                         _Temp_6 0169  
                                 vfprintf@cfmt 00A1                                 _p_i2c1_current 00EB  
                   UartResponse_WriteCmd@F7379 01A0                                         ___lmul 1360  
                                    ??___aldiv 0028                                      ??___aodiv 0030  
                                    ??___aomod 0030                                         ___wmul 11EF  
                                    ??___awdiv 002A                                 __CFG_STVREN$ON 0000  
                          _EUSART_Transmit_ISR 1265                     ??_I2C1_MasterWriteTRBBuild 0026  
                        UartResponse_ReadCmd@i 00B4                               ?_TMR0_Initialize 0077  
                                       _memset 1744                        __end_of_PWM6_Initialize 10BD  
                         Handler_Uart@rcv_Buff 0120                                      ?_I2C1_ISR 0077  
                             ___awdiv@quotient 002D                                         _printf 1143  
                    UART_Write_Buffer@sendBuff 0024                                         pad@buf 0033  
                                       dtoa@fp 0049                        __end_of_DATAEE_ReadByte 10FB  
                                       _strlen 11BB               __size_of_I2C1_MasterReadTRBBuild 002C  
                                       fputc@c 0023                                 _PMD_Initialize 1051  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032                 __size_of_UartResponse_WriteCmd 0157  
                __end_of_UartResponse_WriteCmd 0E96                     UartResponse_WriteCmd@value 00AC  
                              ?_WDT_Initialize 0077                       ADC_GetConversion@channel 0023  
                        __end_of_TMR0_CallBack 10C8                               __end_of_vfprintf 13F9  
     TMR0_SetInterruptHandler@InterruptHandler 0020                  I2C1_MasterWriteTRBBuild@pdata 0022  
                         ?_EUSART_Transmit_ISR 0077                              _SYSTEM_Initialize 12A5  
                      __end_of__initialization 049D                              Handler_Uart@F7386 04A0  
                           ?_SYSTEM_Initialize 0077                                  _Fan_PWM_Value 00DA  
                               _i2c1_trb_count 00EC                          ??_Signal_BL_Requested 0020  
                        __size_of_Handler_Uart 00AC           __end_of_EUSART_SetTxInterruptHandler 1097  
        __size_of_EUSART_SetTxInterruptHandler 0009                   _EUSART_SetTxInterruptHandler 108E  
                        _I2C1_FunctionComplete 110A                           _I2C1_BusCollisionISR 102F  
                               __pcstackCOMMON 0077                                   __pidataBANK4 10D3  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0077  
                             _DATAEE_WriteByte 12C6                                  __end_of_fputc 1430  
                                __end_of_fputs 0826                                ??_EUSART_Read_N 0020  
                                __end_of_putch 1045                                     ??_I2C1_ISR 007A  
                             ?_TMR2_Initialize 0077                                    _CurrentPWM1 00DD  
                                  _CurrentPWM2 00DC                         __end_of_PMD_Initialize 1059  
               I2C1_MasterReadTRBBuild@address 0023                          TMR0_ISR@CountCallBack 01C2  
                         _eusartRxStatusBuffer 0320                               _Read_SI7020_Temp 00D0  
                __size_of_UartResponse_ReadCmd 016A                ??_EUSART_SetOverrunErrorHandler 0022  
                        Handler_I2c@ReadBuffer 003B                                        ??_fputc 0026  
                    __end_of_SYSTEM_Initialize 12C6                                        ??_fputs 002C  
                        ??_EUSART_Transmit_ISR 0077                                        ??_putch 0022  
                                 _Handler_Uart 1698                                     __pbssBANK1 00CB  
                                   __pbssBANK2 0162                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                                     __pbssBANK5 02A0  
                                   __pbssBANK6 0320                                     __pbssBANK7 03A0  
                                   __pbssBANK8 0420                                     __pbssBANK9 04A0  
                            I2C1_WBlk@WriteTRB 0030                           __end_of_EUSART_Write 1334  
                             ?_PWM5_Initialize 0077                    __size_of_EUSART_Receive_ISR 0034  
                        ?_I2C1_BusCollisionISR 0077                    I2C1_WBlk@slaveDeviceAddress 0028  
                                   __pmaintext 11D4                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 01E9               __end_of_TMR0_SetInterruptHandler 10A9  
                                      ?___lmul 0020                                        ?___wmul 0020  
                                   ??_TMR0_ISR 0077                                __CFG_PPS1WAY$ON 0000  
                   __end_of_PWM6_LoadDutyValue 11A2                                     __pintentry 0404  
                              _I2C1_Initialize 120B                                        ?_memset 0020  
                               ___lmul@product 0028                               ?_PWM6_Initialize 0077  
                 ??_EUSART_DefaultErrorHandler 0078                                        ?_printf 00A3  
                              ?_PMD_Initialize 0077                        __size_of_ADC_Initialize 0009  
                                      ?_strlen 0020                               ?_DATAEE_ReadByte 0020  
                                _eusartRxCount 016F                                      _I2C1_RBlk 1529  
                           _PWM5_LoadDutyValue 1170                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                      _I2C1_WBlk 1430  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                           __size_of_vfpfcnvrt 00D1                                      _I2C1_Stop 1228  
                __size_of_EUSART_RxDataHandler 0018                                        _NVMADRH 0892  
                                      _NVMADRL 0891                                        _NVMDATH 0894  
                                      _OSCTUNE 091E                                        _NVMDATL 0893  
                                      _NVMCON1 0895                                        _NVMCON2 0896  
                                      _PWM5DCH 0618                                        _PWM5DCL 0617  
                                      _PWM6DCH 061B                                        _PWM6DCL 061A  
                                      _PWM5CON 0619                                        _PWM6CON 061C  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0022  
                          ?_PWM5_LoadDutyValue 002F                  I2C1_MasterTRBInsert@ptrb_list 0020  
                         DATAEE_WriteByte@bAdd 0020                         ?_I2C1_FunctionComplete 0077  
                __size_of_I2C1_MasterTRBInsert 0055            __size_of_EUSART_DefaultErrorHandler 0003  
                           _p_i2c1_trb_current 00D8                                        ___aldiv 1616  
                                      ___aodiv 0AF7                                        ___aomod 0A18  
                                      ___awdiv 15C4                                __size_of___lmul 0030  
                              __size_of___wmul 001C                                      ?_vfprintf 006A  
                         ??_PWM5_LoadDutyValue 0031                                __size_of_memset 00BC  
                      _I2C1_MasterReadTRBBuild 1334                                        __ptext1 087B  
                                 ?_Handler_I2c 0077                                        __ptext2 12A5  
                                      __ptext3 1036                                        __ptext4 1059  
                                      __ptext5 112F                                        __ptext6 10A0  
                                      __ptext7 10B3                                        __ptext8 10A9  
                                      __ptext9 1051                                __size_of_printf 0015  
                              __size_of_strlen 0019                          _OSCILLATOR_Initialize 1097  
                                    _T2CONbits 001F                                   __size_of_abs 0019  
                                 __size_of_pad 0050                              ?_UartResponse_Err 0077  
                 I2C1_MasterReadTRBBuild@pdata 0020                                     ?_I2C1_RBlk 0028  
                                   ?_I2C1_WBlk 0028                               ___aldiv@dividend 0024  
                              _PWM_Table_Temp1 00E8                                _PWM_Table_Temp2 00E7  
                              _PWM_Table_Temp3 00E6                                _PWM_Table_Temp4 00E5  
                              _PWM_Table_Temp5 00E4                       ??_PIN_MANAGER_Initialize 0020  
                                   ?_I2C1_Stop 0077                             ??_UartResponse_Err 0027  
                   __size_of_SYSTEM_Initialize 0021                           I2C1_ISR@pi2c_buf_ptr 01C4  
                                      clrloop0 1046                           end_of_initialization 049D  
                        EUSART_Read_N@rcv_Buff 0021          __end_of_EUSART_SetOverrunErrorHandler 1085  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 107C  
                                      fputc@fp 0025                                        init_ram 104B  
                                      memset@c 0022                                        memset@k 002A  
                                      memset@n 0024                                        memset@s 002C  
                                      fputs@fp 002B                                        initloop 104C  
                       ??_I2C1_BusCollisionISR 0077                              _EUSART_Initialize 14E2  
                      __end_of_I2C1_Initialize 1228                             ?_EUSART_Initialize 0077  
                            __end_of_vfpfcnvrt 0A18                               ___aldiv@quotient 002B  
                                   ??_vfprintf 006D                      __size_of_EraseResetVector 000E  
                                      strlen@a 0023                                        strlen@s 0024  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
               ??_EUSART_SetTxInterruptHandler 0022                       _TMR0_SetInterruptHandler 10A0  
                                    _PORTAbits 000C                                      _PORTCbits 000E  
                            __size_of_I2C1_ISR 0161                                I2C1_RBlk@rCount 002F  
                              I2C1_RBlk@wCount 002B                          __size_of_EUSART_Write 0027  
                             __CFG_FEXTOSC$OFF 0000                __size_of_EUSART_SetErrorHandler 0009  
                              I2C1_RBlk@status 0034                       __end_of_DATAEE_WriteByte 12E8  
            I2C1_ISR@i2c_10bit_address_restart 00E9                                  Handler_Uart@i 0161  
                    __end_of_EUSART_Initialize 1529                                 __end_of_NVFlag 2000  
                    ??_I2C1_MasterReadTRBBuild 0025                                 __end_of___lmul 1390  
           __end_of_EUSART_DefaultErrorHandler 102F                     _EUSART_DefaultErrorHandler 102C  
                                  vfpfcnvrt@ap 005B                                    vfpfcnvrt@fp 0069  
                                  vfpfcnvrt@ll 0061                                 __end_of___wmul 120B  
                      I2C1_MasterWrite@trBlock 01D5                                   _EUSART_Write 130D  
                            __size_of_TMR0_ISR 0014                       I2C1_Stop@completion_code 0079  
                               _ADC_Initialize 1061                         ?_OSCILLATOR_Initialize 0077  
                               __end_of_memset 1800                             Handler_Uart@rx_len 0160  
                               __end_of_printf 1158                                 __end_of_strlen 11D4  
                                  ??_I2C1_RBlk 0031                            start_initialization 0443  
                                  ??_I2C1_WBlk 002D                         UartResponse_WriteCmd@i 00B3  
                                  ??_I2C1_Stop 0077                       __size_of_TMR0_Initialize 0014  
              __size_of_PIN_MANAGER_Initialize 003B                                    __end_of_abs 11BB  
                                  __end_of_pad 15C4                          _UartResponse_WriteCmd 0D3F  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                     UartResponse_Err@sendBuff 0028              __size_of_I2C1_MasterWriteTRBBuild 0025  
                                  putch@txData 0022                      ?_I2C1_MasterWriteTRBBuild 0020  
                           _Read_EMC1704_Temp1 01B8                             _Read_EMC1704_Temp2 01B4  
                           _Read_EMC1704_Temp3 01B0                             _Read_EMC1704_Temp4 01AC  
                           _Read_EMC1704_Temp5 01A8                             _Read_EMC1704_Temp6 01A4  
                              I2C1_WBlk@nCount 002B                    __end_of_Signal_BL_Requested 110A  
                          DATAEE_ReadByte@bAdd 0020                                      _Temp_1_lo 0168  
                                    _Temp_2_lo 0167                                      _Temp_3_lo 0166  
                                    _Temp_4_lo 0165                                      _Temp_5_lo 0164  
                                    _Temp_6_lo 0163                                I2C1_WBlk@status 0035  
                             ?_I2C1_Initialize 0077                 ?_EUSART_SetOverrunErrorHandler 0020  
                 __end_of_UartResponse_ReadCmd 1000                               __CFG_LPBOREN$OFF 0000  
                                  vfprintf@fmt 006A                     _EUSART_FramingErrorHandler 01E5  
                             ??_PMD_Initialize 0020                                       ??___lmul 0028  
                                     ??___wmul 0024                         _EUSART_SetErrorHandler 106A  
                       __size_of_TMR0_CallBack 000B                         __end_of_ADC_Initialize 106A  
                                  __pdataBANK4 0260                                       ??_memset 0026  
                                   memset@dest 0020                                       ??_printf 006F  
                        __end_of_EUSART_Read_N 14E2                                       ??_strlen 0022  
                 I2C1_MasterWriteTRBBuild@ptrb 0020                    __end_of_EUSART_Transmit_ISR 1285  
                  PWM5_LoadDutyValue@dutyValue 002F                           __size_of_Handler_I2c 01FD  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                               ___aodiv@dividend 0028  
                           _PWM6_LoadDutyValue 1189                       __size_of_TMR2_Initialize 0008  
                                _i2c1_tr_queue 01DA                     __end_of_EUSART_Receive_ISR 13C4  
                          ?_PWM6_LoadDutyValue 002F                        ??_I2C1_FunctionComplete 0077  
                   __size_of_EUSART_Initialize 0047               _EUSART_RxDefaultInterruptHandler 01E7  
                  I2C1_RBlk@slaveDeviceAddress 0028                          _TMR0_InterruptHandler 01DF  
                                    __pnvBANK3 01DF                   __end_of_EUSART_RxDataHandler 1170  
                       _PIN_MANAGER_Initialize 146A                                      _dtoa$1513 0047  
                     __size_of_PWM5_Initialize 000A                                       ?___aldiv 0020  
                                     ?___aodiv 0020                                       ?___aomod 0020  
                                     ?___awdiv 0026                               ___aodiv@quotient 0033  
                              ?_ADC_Initialize 0077                                   _eusartRxHead 0073  
                                 _eusartTxHead 0074                                   _eusartRxTail 0072  
                             _EraseResetVector 10DE                                   _eusartTxTail 00EF  
                                     _I2C1_ISR 069E                                      _flg_reset 016E  
                         ??_PWM6_LoadDutyValue 0031                   ??_INTERRUPT_InterruptManager 007E  
                            __size_of_vfprintf 0035                        _eusartTxBufferRemaining 01EB  
                                     _BAUD1CON 019F                   __end_of_I2C1_MasterTRBInsert 087B  
                       ?_UartResponse_WriteCmd 00AC                       __size_of_PWM6_Initialize 000A  
                     UartResponse_ReadCmd@type 00B2                                  _TMR0_CallBack 10BD  
                               __size_of_fputc 0037                                 __size_of_fputs 0026  
                     __size_of_DATAEE_ReadByte 000F                                 __size_of_putch 0006  
                 UartResponse_ReadCmd@sendBuff 00B5                                 _eusartRxBuffer 03A0  
                  I2C1_MasterReadTRBBuild@ptrb 0027                                ___aldiv@divisor 0020  
     __end_of_I2C1_WaitForLastPacketToComplete 103F      __size_of_I2C1_WaitForLastPacketToComplete 0005  
           ??_I2C1_WaitForLastPacketToComplete 0020              ?_I2C1_WaitForLastPacketToComplete 0077  
             _I2C1_WaitForLastPacketToComplete 103A                         I2C1_MasterRead@trBlock 01D0  
                            ??_TMR0_Initialize 0022                                 _eusartTxBuffer 0420  
                              ___aldiv@counter 0029                                 ___wmul@product 0024  
       EUSART_SetErrorHandler@interruptHandler 0020                           EUSART_Read_N@readcnt 0022  
                    __size_of_UartResponse_Err 000B                                      clear_ram0 1045  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                            _eusartRxLastError 00EE            __size_of_INTERRUPT_InterruptManager 003D  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                     _SSP1CON1 0215                                       _SSP1CON3 0217  
                                     _TMR0_ISR 111B      __end_of_EUSART_DefaultOverrunErrorHandler 1036  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0077  
           ?_EUSART_DefaultOverrunErrorHandler 0077              _EUSART_DefaultOverrunErrorHandler 1032  
                                     _SSP1STAT 0214                    __size_of_PWM5_LoadDutyValue 0019  
                               I2C1_RBlk@pData 002D                                      _vfpfcnvrt 0947  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0020  
                                    init@F7366 02A0                                   _Temp_Heater1 0071  
                                 _Temp_Heater2 0070                          DATAEE_WriteByte@bData 0022  
                         _UartResponse_ReadCmd 0E96                                 ?_TMR0_CallBack 0077  
                            ___lmul@multiplier 0020                              ?_DATAEE_WriteByte 0020  
                            ??_TMR2_Initialize 0020                             ??_DATAEE_WriteByte 0023  
                               I2C1_WBlk@pData 002A                  __size_of_I2C1_BusCollisionISR 0003  
                                   vfprintf@ap 006C                                     vfprintf@fp 00A0  
                            _ADC_GetConversion 1246                         I2C1_ISR@i2c_bytes_left 00EA  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 01E1  
                           ?_ADC_GetConversion 0020                               __size_of___aldiv 0082  
                             __size_of___aodiv 00F7                               __size_of___aomod 00DF  
                             __size_of___awdiv 0052                    ?_EUSART_DefaultErrorHandler 0077  
                            _UART_Write_Buffer 1285                                     ?_vfpfcnvrt 005A  
             __end_of_I2C1_MasterWriteTRBBuild 130D                                ___aodiv@divisor 0020  
                            ??_PWM5_Initialize 0020                                ___aodiv@counter 0031  
                           ?_UART_Write_Buffer 0022                            ??_ADC_GetConversion 0022  
                                   _T0CON0bits 0017                          ?_UartResponse_ReadCmd 0077  
                         _EUSART_RxDataHandler 1158                            I2C1_ISR@i2c_address 0075  
                                     __ptext10 146A                                       __ptext11 1097  
                                     __ptext20 1698                                       __ptext12 120B  
                                     __ptext21 0D3F                                       __ptext13 14E2  
                                     __ptext30 0BEE                                       __ptext22 10FB  
                                     __ptext14 108E                                       __ptext31 1574  
                                     __ptext23 1430                                       __ptext15 1085  
                                     __ptext40 1246                                       __ptext32 11BB  
                                     __ptext24 10DE                                       __ptext16 107C  
                                     __ptext41 10C8                                       __ptext33 0800  
                                     __ptext25 12C6                                       __ptext17 1073  
                                     __ptext50 1616                                       __ptext42 1285  
                                     __ptext34 13F9                                       __ptext26 0E96  
                                     __ptext18 106A                                       __ptext51 1189  
                                     __ptext43 130D                                       __ptext35 103F  
                                     __ptext27 1143                                       __ptext19 1061  
                                     __ptext60 10BD                                       __ptext52 1170  
                                     __ptext44 14A5                                       __ptext36 11A2  
                                     __ptext28 13C4                                       __ptext61 07FF  
                                     __ptext53 1529                                       __ptext45 04A1  
                                     __ptext37 0A18                                       __ptext29 0947  
                                     __ptext70 102C                                       __ptext62 069E  
                                     __ptext54 12E8                                       __ptext46 1744  
                                     __ptext38 0AF7                            ??_UART_Write_Buffer 0023  
                                     __ptext71 1158                                       __ptext63 1228  
                                     __ptext55 0826                                       __ptext47 11EF  
                                     __ptext39 10EC                                       __ptext64 110A  
                                     __ptext56 103A                                       __ptext48 1360  
                                     __ptext65 102F                                       __ptext57 1334  
                                     __ptext49 15C4                                       __ptext66 1265  
                                     __ptext67 1390                                       __ptext59 111B  
                                     __ptext68 1032                                       __ptext69 0403  
                                 _SSP1CON1bits 0215                                   _SSP1CON2bits 0216  
                                ?_Handler_Uart 0077                    DATAEE_WriteByte@GIEBitValue 0023  
                      UartResponse_ReadCmd@reg 00B3                              ??_PWM6_Initialize 0020  
                                __size_of_main 001B                                  __size_of_dtoa 0151  
                                __size_of_init 00CC                  I2C1_MasterReadTRBBuild@length 0022  
         __end_of_TMR0_DefaultInterruptHandler 0800          __size_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 07FF                              ??_DATAEE_ReadByte 0022  
                    __end_of_ADC_GetConversion 1265                        ?_EUSART_SetErrorHandler 0020  
                         _I2C1_MasterTRBInsert 0826                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                      __end_of_UART_Write_Buffer 12A5  
                                     int$flags 007E                                  I2C1_RBlk@wblk 002A  
                                     _vfprintf 13C4             __end_of_INTERRUPT_InterruptManager 0441  
                   _INTERRUPT_InterruptManager 0404                                      printf@fmt 00A3  
        __end_of_EUSART_SetFramingErrorHandler 107C         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 1073                               ___aomod@dividend 0028  
                                   _INTCONbits 000B                             UART_Write_Buffer@i 0025  
                              ??_TMR0_CallBack 0077                                    _NVMCON1bits 0895  
                        ?_EUSART_RxDataHandler 0077                                 ??_Handler_Uart 00C7  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                     __end_of_EraseResetVector 10EC                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 1073                              __CFG_CLKOUTEN$OFF 0000  
                             _UartResponse_Err 10C8                 __size_of_I2C1_FunctionComplete 0011  
                __end_of_I2C1_FunctionComplete 111B                          ?_I2C1_MasterTRBInsert 0020  
                     ?_I2C1_MasterReadTRBBuild 0020                               ??_ADC_Initialize 0020  
         __end_of_EUSART_SetRxInterruptHandler 108E          __size_of_EUSART_SetRxInterruptHandler 0009  
                 _EUSART_SetRxInterruptHandler 1085                   __size_of_Signal_BL_Requested 000F  
                             Handler_I2c@F7391 0162                               Handler_I2c@F7393 01C0  
                ?_TMR0_DefaultInterruptHandler 0077                                       printf@ap 00AB  
                           _EUSART_Receive_ISR 1390  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 005C  
                              ___aomod@counter 0031                       __size_of_I2C1_Initialize 001D  
                                ??_Handler_I2c 0035                                init@Read_EEPROM 0026  
                                __pstringtext1 1800                                  __pstringtext2 1822  
                                __pstringtext3 0000                        ??_UartResponse_WriteCmd 00AD  
                          ?_EUSART_Receive_ISR 0077                                     _SSP1DATPPS 0E21  
                UartResponse_WriteCmd@sendBuff 00B5                                     _SSP1CLKPPS 0E20  
                       ??_UartResponse_ReadCmd 00AC                                _TMR0_Initialize 112F  
                     _I2C1_MasterWriteTRBBuild 12E8                                   ___aldiv@sign 002A  
                    UartResponse_ReadCmd@F7371 02C0                    PWM6_LoadDutyValue@dutyValue 002F  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0021  
                 __size_of_EUSART_Transmit_ISR 0020                                   ___aodiv@sign 0032  
               __end_of_PIN_MANAGER_Initialize 14A5                             __size_of_I2C1_RBlk 004B  
                           __size_of_I2C1_WBlk 003A                                 _NVFlag_absaddr 1FFF  
                                  _PWMTMRSbits 061F                             __size_of_I2C1_Stop 001E  
                               Handler_I2c@Reg 003A                 UartResponse_ReadCmd@ADC_result 00C5  
                         ??_EUSART_Receive_ISR 0078                         __size_of_EUSART_Read_N 003D  
                   __size_of_ADC_GetConversion 001F                                   ___aomod@sign 0032  
